{
    "oms": {
        "devops": {
            "compose": {
                "docker-compose.yml": {
                    "name": "docker-compose.yml"
                }
            },
            "docker_scripts": {
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "env": {
                "local.oms_db_config.env": {
                    "name": "local.oms_db_config.env"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "optimizer": {
            "test": {
                "outcomes": {
                    "TestCcOptimizerUtils1.test_apply_testnet_limits1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCcOptimizerUtils1.test_apply_prod_limits2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCcOptimizerUtils1.test_apply_prod_limits1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_cc_optimizer_utils.py": {
                    "name": "test_cc_optimizer_utils.py"
                },
                "test_call_optimizer.py": {
                    "name": "test_call_optimizer.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "call_optimizer.py": {
                "name": "call_optimizer.py"
            },
            "cc_optimizer_utils.py": {
                "name": "cc_optimizer_utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "db": {
            "test": {
                "__init__.py": {
                    "name": "__init__.py"
                },
                "test_oms_db.py": {
                    "name": "test_oms_db.py"
                }
            },
            "check_db_connection.py": {
                "name": "check_db_connection.py"
            },
            "ck_credentials.py": {
                "name": "ck_credentials.py"
            },
            "oms_db.py": {
                "name": "oms_db.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "ccxt": {
            "notebooks": {
                "gallery_ccxt.py": {
                    "name": "gallery_ccxt.py"
                },
                "gallery_ccxt.ipynb": {
                    "name": "gallery_ccxt.ipynb"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "order": {
            "test": {
                "outcomes": {
                    "TestOrder1.test_3": {},
                    "TestOrder1.test2": {},
                    "TestMultipleOrders1.test3": {},
                    "TestOrder1.test1": {},
                    "TestMultipleOrders1.test1": {}
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "test_order.py": {
                    "name": "test_order.py"
                }
            },
            "order.py": {
                "name": "order.py"
            },
            "order_example.py": {
                "name": "order_example.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "order_processing": {
            "test": {
                "outcomes": {
                    "TestTargetPositionAndOrderGenerator1.test_compute": {},
                    "TestSimulatedProcessForecasts1.test_initialization1": {},
                    "TestMockedProcessForecasts2.test_mocked_system1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSimulatedProcessForecasts3.test_initialization1": {},
                    "TestMockedProcessForecasts2.test_mocked_system3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSimulatedProcessForecasts2.test_initialization1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMockedProcessForecasts2.test_mocked_system2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_order_processor.py": {
                    "name": "test_order_processor.py"
                },
                "test_process_forecasts_.py": {
                    "name": "test_process_forecasts_.py"
                },
                "test_target_position_and_order_generator.py": {
                    "name": "test_target_position_and_order_generator.py"
                },
                "test_process_forecasts_opt.py": {
                    "name": "test_process_forecasts_opt.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "process_forecasts_example.py": {
                "name": "process_forecasts_example.py"
            },
            "order_processor_example.py": {
                "name": "order_processor_example.py"
            },
            "run_tiled_process_forecasts.py": {
                "name": "run_tiled_process_forecasts.py"
            },
            "process_forecasts_.py": {
                "name": "process_forecasts_.py"
            },
            "target_position_and_order_generator_example.py": {
                "name": "target_position_and_order_generator_example.py"
            },
            "order_processor.py": {
                "name": "order_processor.py"
            },
            "target_position_and_order_generator.py": {
                "name": "target_position_and_order_generator.py"
            },
            "run_process_forecasts.py": {
                "name": "run_process_forecasts.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "obsolete": {
            "test": {
                "outcomes": {
                    "TestPnlSimulator1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPnlSimulator2.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPnlSimulatorFunctions1.test_get_data1": {},
                    "TestPnlSimulator1.test_random1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPnlSimulator1.test_random2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPnlSimulator1.test_random3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPnlSimulator2.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPnlSimulator2.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_pnl_simulator.py": {
                    "name": "test_pnl_simulator.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "pnl_simulator.py.numba": {
                "name": "pnl_simulator.py.numba"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "pnl_simulator.py": {
                "name": "pnl_simulator.py"
            }
        },
        "hsecrets": {
            "secret_identifier.py": {
                "name": "secret_identifier.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "test": {
            "outcomes": {
                "Test_get_system_run_parameters.test4": {},
                "Test_get_system_run_parameters.test3": {},
                "Test_get_system_run_parameters.test2": {},
                "Test_get_system_run_parameters.test1": {}
            },
            "test_execution_analysis_notebooks.py": {
                "name": "test_execution_analysis_notebooks.py"
            },
            "oms_db_helper.py": {
                "name": "oms_db_helper.py"
            },
            "test_reconciliation.py": {
                "name": "test_reconciliation.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "notebooks": {
            "Master_execution_analysis.py": {
                "name": "Master_execution_analysis.py"
            },
            "CmTask4498_shorten_history_amount_required_by_C8b.ipynb": {
                "name": "CmTask4498_shorten_history_amount_required_by_C8b.ipynb"
            },
            "Master_multiday_system_reconciliation.py": {
                "name": "Master_multiday_system_reconciliation.py"
            },
            "Master_broker_debugging.py": {
                "name": "Master_broker_debugging.py"
            },
            "CmTask4240_how_history_lookback_affects_dag_execution_time.py": {
                "name": "CmTask4240_how_history_lookback_affects_dag_execution_time.py"
            },
            "Master_bid_ask_execution_analysis.ipynb": {
                "name": "Master_bid_ask_execution_analysis.ipynb"
            },
            "Master_system_reconciliation_slow.py": {
                "name": "Master_system_reconciliation_slow.py"
            },
            "Master_portfolio_vs_portfolio_reconciliation.ipynb": {
                "name": "Master_portfolio_vs_portfolio_reconciliation.ipynb"
            },
            "Master_broker_debugging.ipynb": {
                "name": "Master_broker_debugging.ipynb"
            },
            "Master_dagger_reconciliation.py": {
                "name": "Master_dagger_reconciliation.py"
            },
            "CmTask4085_Create_a_dash_plotly_web_app_to_serve_PnL_graphs.py": {
                "name": "CmTask4085_Create_a_dash_plotly_web_app_to_serve_PnL_graphs.py"
            },
            "Master_dagger_reconciliation.ipynb": {
                "name": "Master_dagger_reconciliation.ipynb"
            },
            "CmTask4240_compare_prod_system_runs.ipynb": {
                "name": "CmTask4240_compare_prod_system_runs.ipynb"
            },
            "Master_c1b_portfolio_vs_portfolio_reconciliation.ipynb": {
                "name": "Master_c1b_portfolio_vs_portfolio_reconciliation.ipynb"
            },
            "CmTask4554_Package_binance_calls_into_one_script.ipynb": {
                "name": "CmTask4554_Package_binance_calls_into_one_script.ipynb"
            },
            "Master_c1b_portfolio_vs_portfolio_reconciliation.py": {
                "name": "Master_c1b_portfolio_vs_portfolio_reconciliation.py"
            },
            "Master_execution_analysis.ipynb": {
                "name": "Master_execution_analysis.ipynb"
            },
            "Master_model_qualifier.ipynb": {
                "name": "Master_model_qualifier.ipynb"
            },
            "Master_PnL_real_time_observer.ipynb": {
                "name": "Master_PnL_real_time_observer.ipynb"
            },
            "Master_system_reconciliation_slow.ipynb": {
                "name": "Master_system_reconciliation_slow.ipynb"
            },
            "CmTask4498_shorten_history_amount_required_by_C8b.py": {
                "name": "CmTask4498_shorten_history_amount_required_by_C8b.py"
            },
            "Master_multiday_system_reconciliation.ipynb": {
                "name": "Master_multiday_system_reconciliation.ipynb"
            },
            "Master_bid_ask_execution_analysis.py": {
                "name": "Master_bid_ask_execution_analysis.py"
            },
            "CmTask4240_how_history_lookback_affects_dag_execution_time.ipynb": {
                "name": "CmTask4240_how_history_lookback_affects_dag_execution_time.ipynb"
            },
            "AmpTask1853_Review_improve_portfolio_accounting_code.ipynb": {
                "name": "AmpTask1853_Review_improve_portfolio_accounting_code.ipynb"
            },
            "CmTask3102_db_delay_analysis.ipynb": {
                "name": "CmTask3102_db_delay_analysis.ipynb"
            },
            "AmpTask1853_Review_improve_portfolio_accounting_code.py": {
                "name": "AmpTask1853_Review_improve_portfolio_accounting_code.py"
            },
            "Master_system_reconciliation_fast.py": {
                "name": "Master_system_reconciliation_fast.py"
            },
            "CMTask1297_place_orders_via_talos_REST.ipynb": {
                "name": "CMTask1297_place_orders_via_talos_REST.ipynb"
            },
            "CmTask4275_check_ohlcv_timing_issue.py": {
                "name": "CmTask4275_check_ohlcv_timing_issue.py"
            },
            "CmTask4299_Generalize_the_DAG_self_consistency_for_all_models.py": {
                "name": "CmTask4299_Generalize_the_DAG_self_consistency_for_all_models.py"
            },
            "Master_system_run_debugger.ipynb": {
                "name": "Master_system_run_debugger.ipynb"
            },
            "Master_portfolio_vs_research_stats.py": {
                "name": "Master_portfolio_vs_research_stats.py"
            },
            "CmTask4554_Package_binance_calls_into_one_script.py": {
                "name": "CmTask4554_Package_binance_calls_into_one_script.py"
            },
            "Master_system_reconciliation_fast.ipynb": {
                "name": "Master_system_reconciliation_fast.ipynb"
            },
            "Master_portfolio_vs_research_stats.ipynb": {
                "name": "Master_portfolio_vs_research_stats.ipynb"
            },
            "CMTask1445_Investigate_the_timestamps_in_Talos_and_CCXT.py": {
                "name": "CMTask1445_Investigate_the_timestamps_in_Talos_and_CCXT.py"
            },
            "Master_portfolio_vs_portfolio_reconciliation.py": {
                "name": "Master_portfolio_vs_portfolio_reconciliation.py"
            },
            "Master_PnL_real_time_observer.py": {
                "name": "Master_PnL_real_time_observer.py"
            },
            "Master_system_run_debugger.py": {
                "name": "Master_system_run_debugger.py"
            },
            "CmTask4275_check_ohlcv_timing_issue.ipynb": {
                "name": "CmTask4275_check_ohlcv_timing_issue.ipynb"
            },
            "CmTask4085_Create_a_dash_plotly_web_app_to_serve_PnL_graphs.ipynb": {
                "name": "CmTask4085_Create_a_dash_plotly_web_app_to_serve_PnL_graphs.ipynb"
            },
            "CmTask3102_db_delay_analysis.py": {
                "name": "CmTask3102_db_delay_analysis.py"
            },
            "Master_model_qualifier.py": {
                "name": "Master_model_qualifier.py"
            },
            "CmTask4299_Generalize_the_DAG_self_consistency_for_all_models.ipynb": {
                "name": "CmTask4299_Generalize_the_DAG_self_consistency_for_all_models.ipynb"
            },
            "CMTask1297_place_orders_via_talos_REST.py": {
                "name": "CMTask1297_place_orders_via_talos_REST.py"
            },
            "CMTask1445_Investigate_the_timestamps_in_Talos_and_CCXT.ipynb": {
                "name": "CMTask1445_Investigate_the_timestamps_in_Talos_and_CCXT.ipynb"
            },
            "CmTask4240_compare_prod_system_runs.py": {
                "name": "CmTask4240_compare_prod_system_runs.py"
            }
        },
        "broker": {
            "ccxt": {
                "scripts": {
                    "run_ccxt_broker_v2.py": {
                        "name": "run_ccxt_broker_v2.py"
                    },
                    "submit_ccxt_orders.py": {
                        "name": "submit_ccxt_orders.py"
                    },
                    "get_ccxt_trades.py": {
                        "name": "get_ccxt_trades.py"
                    },
                    "get_ccxt_total_balance.py": {
                        "name": "get_ccxt_total_balance.py"
                    },
                    "flatten_ccxt_account.py": {
                        "name": "flatten_ccxt_account.py"
                    },
                    "get_ccxt_open_positions.py": {
                        "name": "get_ccxt_open_positions.py"
                    },
                    "submit_twap_orders.py": {
                        "name": "submit_twap_orders.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "test": {
                    "rt_data": {
                        "child_order_fills": {
                            "ccxt_fills": {
                                "ccxt_fills_20230612-214608.json": {
                                    "name": "ccxt_fills_20230612-214608.json"
                                },
                                "ccxt_fills_20230612-214503.json": {
                                    "name": "ccxt_fills_20230612-214503.json"
                                },
                                "ccxt_fills_20230612-214818.json": {
                                    "name": "ccxt_fills_20230612-214818.json"
                                },
                                "ccxt_fills_20230612-214713.json": {
                                    "name": "ccxt_fills_20230612-214713.json"
                                },
                                "ccxt_fills_20230612-214358.json": {
                                    "name": "ccxt_fills_20230612-214358.json"
                                }
                            },
                            "ccxt_trades": {
                                "ccxt_trades_20230612-214503.json": {
                                    "name": "ccxt_trades_20230612-214503.json"
                                },
                                "ccxt_trades_20230612-214608.json": {
                                    "name": "ccxt_trades_20230612-214608.json"
                                },
                                "ccxt_trades_20230612-214358.json": {
                                    "name": "ccxt_trades_20230612-214358.json"
                                },
                                "ccxt_trades_20230612-214818.json": {
                                    "name": "ccxt_trades_20230612-214818.json"
                                },
                                "ccxt_trades_20230612-214713.json": {
                                    "name": "ccxt_trades_20230612-214713.json"
                                }
                            },
                            "oms_fills": {
                                "oms_fills_20230612-214358.json": {
                                    "name": "oms_fills_20230612-214358.json"
                                },
                                "oms_fills_20230612-214818.json": {
                                    "name": "oms_fills_20230612-214818.json"
                                },
                                "oms_fills_20230612-214503.json": {
                                    "name": "oms_fills_20230612-214503.json"
                                },
                                "oms_fills_20230612-214608.json": {
                                    "name": "oms_fills_20230612-214608.json"
                                },
                                "oms_fills_20230612-214713.json": {
                                    "name": "oms_fills_20230612-214713.json"
                                }
                            }
                        },
                        "oms_parent_orders": {
                            "oms_parent_orders_None.20230622-084421.json": {
                                "name": "oms_parent_orders_None.20230622-084421.json"
                            }
                        },
                        "oms_child_orders": {
                            "3065029174_None.20230612_174815.json": {
                                "name": "3065029174_None.20230612_174815.json"
                            },
                            "6051632686_None.20230612_174816.json": {
                                "name": "6051632686_None.20230612_174816.json"
                            },
                            "6051632686_None.20230612_174606.json": {
                                "name": "6051632686_None.20230612_174606.json"
                            },
                            "6051632686_None.20230612_174356.json": {
                                "name": "6051632686_None.20230612_174356.json"
                            },
                            "6051632686_None.20230612_174501.json": {
                                "name": "6051632686_None.20230612_174501.json"
                            },
                            "6051632686_None.20230612_174711.json": {
                                "name": "6051632686_None.20230612_174711.json"
                            },
                            "3065029174_None.20230612_174710.json": {
                                "name": "3065029174_None.20230612_174710.json"
                            },
                            "3065029174_None.20230612_174605.json": {
                                "name": "3065029174_None.20230612_174605.json"
                            },
                            "3065029174_None.20230612_174500.json": {
                                "name": "3065029174_None.20230612_174500.json"
                            },
                            "3065029174_None.20230612_174355.json": {
                                "name": "3065029174_None.20230612_174355.json"
                            }
                        },
                        "ccxt_child_order_responses": {
                            "3065029174_None.20230612_174815.json": {
                                "name": "3065029174_None.20230612_174815.json"
                            },
                            "6051632686_None.20230612_174816.json": {
                                "name": "6051632686_None.20230612_174816.json"
                            },
                            "6051632686_None.20230612_174606.json": {
                                "name": "6051632686_None.20230612_174606.json"
                            },
                            "6051632686_None.20230612_174356.json": {
                                "name": "6051632686_None.20230612_174356.json"
                            },
                            "6051632686_None.20230612_174501.json": {
                                "name": "6051632686_None.20230612_174501.json"
                            },
                            "6051632686_None.20230612_174711.json": {
                                "name": "6051632686_None.20230612_174711.json"
                            },
                            "3065029174_None.20230612_174710.json": {
                                "name": "3065029174_None.20230612_174710.json"
                            },
                            "3065029174_None.20230612_174605.json": {
                                "name": "3065029174_None.20230612_174605.json"
                            },
                            "3065029174_None.20230612_174500.json": {
                                "name": "3065029174_None.20230612_174500.json"
                            },
                            "3065029174_None.20230612_174355.json": {
                                "name": "3065029174_None.20230612_174355.json"
                            }
                        }
                    },
                    "outcomes": {
                        "Test_aggregate_fills_by_order.test1": {},
                        "TestCcxtLogsReader1.test_get_files2": {},
                        "Test_aggregate_ccxt_orders_by_bar.test1": {},
                        "Test_compute_buy_sell_prices_by_bar.test1": {},
                        "TestCcxtBroker_TestCase.test_get_ccxt_trades_for_time_period": {
                            "input": {
                                "trades.json": {
                                    "name": "trades.json"
                                }
                            }
                        },
                        "Test_get_limit_order_price.test1": {},
                        "Test_read_rt_data1.test_load_ccxt_trades_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtLogsReader1.test_get_files1": {},
                        "Test_generate_fee_summary.test3": {},
                        "TestCcxtLogsReader1.test_load_oms_child_order_df1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtBroker_TestCase.test_initialize_class": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_generate_fee_summary.test2": {},
                        "Test_aggregate_ccxt_orders_by_bar.test2": {},
                        "Test_generate_fee_summary.test1": {},
                        "TestCcxtLogsReader1.test_init1": {},
                        "TestCcxtLogsReader1.test_load_oms_parent_order_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtLogsReader1.test_load_ccxt_fills_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtBroker1.test_initialize_class": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_aggregate_child_limit_orders_by_bar.test1": {},
                        "TestCcxtLogsReader1.test_init2": {},
                        "TestCcxtLogsReader1.test_load_oms_fills_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_read_rt_data1.test_load_oms_parent_order_df1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_convert_bar_fills_to_portfolio_df.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_convert_parent_orders_to_target_position_df.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtLogsReader1.test_load_ccxt_trades_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtBroker1.test_get_ccxt_trades_for_time_period": {
                            "input": {
                                "trades.json": {
                                    "name": "trades.json"
                                }
                            }
                        },
                        "Test_read_rt_data1.test_load_oms_child_order_df1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_read_rt_data1.test_load_ccxt_order_response_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_generate_fee_summary.test4": {},
                        "TestSaveBrokerData1.test_save_market_info1": {
                            "input": {
                                "broker_data.json": {
                                    "name": "broker_data.json"
                                }
                            }
                        },
                        "Test_read_rt_data1.test_load_oms_child_order_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtLogsReader1.test_load_oms_child_order_df2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtLogsReader1.test_load_oms_child_order_df3": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCcxtLogsReader1.test_load_all_data": {},
                        "Test_aggregate_ccxt_orders_by_bar.test3": {},
                        "Test_align_ccxt_orders_and_fills.test1": {},
                        "Test_compute_filled_order_execution_quality.test1": {},
                        "TestSaveBrokerData1.test_save_trading_fees_info1": {
                            "input": {
                                "broker_data.json": {
                                    "name": "broker_data.json"
                                }
                            }
                        },
                        "Test_aggregate_fills_by_bar.test1": {},
                        "TestCcxtLogsReader1.test_load_ccxt_order_response_df": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        }
                    },
                    "test_ccxt_aggregation_functions.py": {
                        "name": "test_ccxt_aggregation_functions.py"
                    },
                    "test_ccxt_logs_reader.py": {
                        "name": "test_ccxt_logs_reader.py"
                    },
                    "test_ccxt_utils.py": {
                        "name": "test_ccxt_utils.py"
                    },
                    "test_ccxt_execution_quality.py": {
                        "name": "test_ccxt_execution_quality.py"
                    },
                    "ccxt_broker_test_case.py": {
                        "name": "ccxt_broker_test_case.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "test_ccxt_broker_v1.py": {
                        "name": "test_ccxt_broker_v1.py"
                    },
                    "test_ccxt_broker_v2.py": {
                        "name": "test_ccxt_broker_v2.py"
                    }
                },
                "ccxt_broker_v2.py": {
                    "name": "ccxt_broker_v2.py"
                },
                "ccxt_logs_reader.py": {
                    "name": "ccxt_logs_reader.py"
                },
                "mock_ccxt_exchange.py": {
                    "name": "mock_ccxt_exchange.py"
                },
                "ccxt_utils.py": {
                    "name": "ccxt_utils.py"
                },
                "ccxt_execution_quality.py": {
                    "name": "ccxt_execution_quality.py"
                },
                "ccxt_aggregation_functions.py": {
                    "name": "ccxt_aggregation_functions.py"
                },
                "ccxt_broker_instances.py": {
                    "name": "ccxt_broker_instances.py"
                },
                "ccxt_broker_utils.py": {
                    "name": "ccxt_broker_utils.py"
                },
                "ccxt_portfolio.py": {
                    "name": "ccxt_portfolio.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "dataframe_ccxt_broker.py": {
                    "name": "dataframe_ccxt_broker.py"
                },
                "ccxt_broker_v1.py": {
                    "name": "ccxt_broker_v1.py"
                },
                "abstract_ccxt_broker.py": {
                    "name": "abstract_ccxt_broker.py"
                }
            },
            "talos": {
                "talos_broker.py": {
                    "name": "talos_broker.py"
                },
                "talos_utils.py": {
                    "name": "talos_utils.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "ig": {
                "test": {
                    "test_restrictions.py": {
                        "name": "test_restrictions.py"
                    },
                    "broker_test_case.py": {
                        "name": "broker_test_case.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "test_ig_broker.py": {
                        "name": "test_ig_broker.py"
                    }
                },
                "ig_broker.py": {
                    "name": "ig_broker.py"
                },
                "locates.py": {
                    "name": "locates.py"
                },
                "restrictions.py": {
                    "name": "restrictions.py"
                },
                "restrictions_example.py": {
                    "name": "restrictions_example.py"
                },
                "ig_broker_example.py": {
                    "name": "ig_broker_example.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "outcomes": {
                    "Test_OrderStatus1.test1": {},
                    "Test_Position1.test_diff3": {},
                    "Test_Trade1.test1": {},
                    "Test_Position1.test1": {},
                    "TestDataFrameBroker1.test_submit_and_fill1": {},
                    "TestDataFrameBroker2.test_midpoint_sell": {},
                    "Test_fill_orders1.test_fill_orders_fully_at_once1": {},
                    "TestDataFrameBroker2.test_quarter_spread_sell": {},
                    "TestDataFrameBroker2.test_collect_spread_sell": {},
                    "Test_fill_orders1.test_fill_orders_fully_at_once2": {},
                    "Test_Broker_builders1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDataFrameBroker2.test_midpoint_buy": {},
                    "Test_Position1.test_diff1": {},
                    "Test_Contract1.test1": {},
                    "TestDataFrameBroker2.test_collect_spread_buy": {},
                    "TestDataFrameBroker2.test_cross_spread_buy": {},
                    "Test_Broker_builders2.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDataFrameBroker2.test_quarter_spread_buy": {},
                    "Test_fill_orders1.test_fill_orders_fully_twap1": {},
                    "Test_Position1.test_diff2": {},
                    "Test_Order1.test1": {},
                    "Test_fill_orders1.test_fill_orders_fully_at_once3": {},
                    "TestDataFrameBroker2.test_cross_spread_sell": {}
                },
                "test_broker.py": {
                    "name": "test_broker.py"
                },
                "test_broker_example.py": {
                    "name": "test_broker_example.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "test_ib_api.py": {
                    "name": "test_ib_api.py"
                }
            },
            "ib_api.py": {
                "name": "ib_api.py"
            },
            "broker_example.py": {
                "name": "broker_example.py"
            },
            "broker.py": {
                "name": "broker.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "portfolio": {
            "test": {
                "outcomes": {
                    "Test_Portfolio_builders1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_Portfolio_builders2.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDataFramePortfolio2.test_get_historical_statistics2": {},
                    "TestDataFramePortfolio2.test_get_historical_statistics1": {},
                    "TestDataFramePortfolio1.test_state": {},
                    "TestDataFramePortfolio2.test_get_historical_statistics3": {}
                },
                "test_dataframe_portfolio.py": {
                    "name": "test_dataframe_portfolio.py"
                },
                "test_database_portfolio.py": {
                    "name": "test_database_portfolio.py"
                },
                "test_portfolio_example.py": {
                    "name": "test_portfolio_example.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "portfolio_example.py": {
                "name": "portfolio_example.py"
            },
            "portfolio.py": {
                "name": "portfolio.py"
            },
            "database_portfolio.py": {
                "name": "database_portfolio.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "dataframe_portfolio.py": {
                "name": "dataframe_portfolio.py"
            }
        },
        "oms_utils.py": {
            "name": "oms_utils.py"
        },
        "execution_analysis_configs.py": {
            "name": "execution_analysis_configs.py"
        },
        "lib_tasks_reconcile.py": {
            "name": "lib_tasks_reconcile.py"
        },
        "reconciliation.py": {
            "name": "reconciliation.py"
        },
        "lib_tasks_binance.py": {
            "name": "lib_tasks_binance.py"
        },
        "tasks.py": {
            "name": "tasks.py"
        },
        "invoke.yaml": {
            "name": "invoke.yaml"
        },
        "__init__.py": {
            "name": "__init__.py"
        },
        "oms_lib_tasks.py": {
            "name": "oms_lib_tasks.py"
        }
    },
    "docker_common": {
        "update.sh": {
            "name": "update.sh"
        },
        "version.sh": {
            "name": "version.sh"
        },
        "install_jupyter_extensions.sh": {
            "name": "install_jupyter_extensions.sh"
        },
        "etc_sudoers": {
            "name": "etc_sudoers"
        },
        "bashrc": {
            "name": "bashrc"
        },
        "create_links.sh": {
            "name": "create_links.sh"
        },
        "utils.sh": {
            "name": "utils.sh"
        }
    },
    "market_data": {
        "ig": {
            "test": {
                "test_ig_stitched_market_data_interface.py": {
                    "name": "test_ig_stitched_market_data_interface.py"
                },
                "test_ig_real_time_market_data.py": {
                    "name": "test_ig_real_time_market_data.py"
                },
                "test_ig_historical_market_data.py": {
                    "name": "test_ig_historical_market_data.py"
                },
                "test_ig_replayed_market_data.py": {
                    "name": "test_ig_replayed_market_data.py"
                }
            },
            "ig_historical_market_data.py": {
                "name": "ig_historical_market_data.py"
            },
            "ig_replayed_market_data.py": {
                "name": "ig_replayed_market_data.py"
            },
            "ig_real_time_market_data.py": {
                "name": "ig_real_time_market_data.py"
            },
            "ig_stitched_market_data.py": {
                "name": "ig_stitched_market_data.py"
            },
            "ig_market_data_example.py": {
                "name": "ig_market_data_example.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "test": {
            "outcomes": {
                "TestReplayedMarketData1.test_get_data_for_minute_3": {},
                "TestReplayedMarketData2.test_get_data_for_interval3": {},
                "TestImClientMarketData2.test_get_twap_price1": {},
                "TestImClientMarketData1.test_get_data_for_interval2": {},
                "TestReplayedMarketData1.test_get_data_for_minute_6": {},
                "TestImClientMarketData1.test_get_data_for_interval3": {},
                "TestReplayedMarketData1.test_get_data1": {},
                "TestImClientMarketData1.test_get_last_price1": {},
                "TestImClientMarketData1.test_get_twap_price1": {},
                "TestReplayedMarketData1.test_get_data_for_minute_0": {},
                "TestImClientMarketData1.test_get_data_for_interval5": {},
                "TestReplayedMarketData2.test_get_data_for_interval2": {},
                "TestReplayedMarketData1.test_get_data5": {},
                "TestReplayedMarketData2.test_get_data_at_timestamp2": {},
                "TestReplayedMarketData1.test_get_data3": {},
                "TestImClientMarketData1.test_get_data_at_timestamp1": {},
                "TestImClientMarketData2.test_get_data_for_interval5": {},
                "TestReplayedMarketData1.test_get_data4": {},
                "TestReplayedMarketData1.test_get_data_for_minute_1": {},
                "TestReplayedMarketData2.test_get_data_for_interval1": {},
                "TestReplayedMarketData1.test_get_data2": {},
                "TestImClientMarketData1.test_get_data_for_interval4": {},
                "TestImClientMarketData2.test_get_data_for_interval2": {},
                "TestImClientMarketData2.test_get_data_for_interval4": {},
                "TestImClientMarketData2.test_get_last_price1": {},
                "TestImClientMarketData2.test_get_data_at_timestamp1": {},
                "TestReplayedMarketData1.test_get_data_for_minute_63": {},
                "TestImClientMarketData2.test_get_data_for_interval3": {},
                "TestReplayedMarketData2.test_get_data_at_timestamp1": {}
            },
            "test_gallery_market_data_notebook.py": {
                "name": "test_gallery_market_data_notebook.py"
            },
            "test_replayed_market_data.py": {
                "name": "test_replayed_market_data.py"
            },
            "test_real_time_market_data.py": {
                "name": "test_real_time_market_data.py"
            },
            "test_stitched_market_data.py": {
                "name": "test_stitched_market_data.py"
            },
            "test_im_client_market_data.py": {
                "name": "test_im_client_market_data.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "notebooks": {
            "gallery_market_data.py": {
                "name": "gallery_market_data.py"
            },
            "gallery_market_data.ipynb": {
                "name": "gallery_market_data.ipynb"
            }
        },
        "stitched_market_data.py": {
            "name": "stitched_market_data.py"
        },
        "abstract_market_data.py": {
            "name": "abstract_market_data.py"
        },
        "data_pipeline_architecture.md": {
            "name": "data_pipeline_architecture.md"
        },
        "market_data_example.py": {
            "name": "market_data_example.py"
        },
        "replayed_market_data.py": {
            "name": "replayed_market_data.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        },
        "market_data_test_case.py": {
            "name": "market_data_test_case.py"
        },
        "im_client_market_data.py": {
            "name": "im_client_market_data.py"
        },
        "real_time_market_data.py": {
            "name": "real_time_market_data.py"
        }
    },
    "pnl_web_app": {
        "app.py": {
            "name": "app.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "__pycache__": {
        "conftest.cpython-310-pytest-7.4.2.pyc": {
            "name": "conftest.cpython-310-pytest-7.4.2.pyc"
        },
        "__init__.cpython-310.pyc": {
            "name": "__init__.cpython-310.pyc"
        }
    },
    "devops": {
        "compose": {
            "docker-compose.yml": {
                "name": "docker-compose.yml"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "docker_run": {
            "aws_credentials.sh": {
                "name": "aws_credentials.sh"
            },
            "setenv.sh": {
                "name": "setenv.sh"
            },
            "test_setup.sh": {
                "name": "test_setup.sh"
            },
            "bashrc": {
                "name": "bashrc"
            },
            "entrypoint.sh": {
                "name": "entrypoint.sh"
            },
            "run_jupyter_server.sh": {
                "name": "run_jupyter_server.sh"
            }
        },
        "debug": {
            "repo_compare.sh": {
                "name": "repo_compare.sh"
            }
        },
        "test": {
            "db_example": {
                "docker-compose.yml": {
                    "name": "docker-compose.yml"
                },
                "local.oms_db_config_2344.env": {
                    "name": "local.oms_db_config_2344.env"
                },
                "README.txt": {
                    "name": "README.txt"
                },
                "compose.db.sh": {
                    "name": "compose.db.sh"
                },
                "docker_clean.sh": {
                    "name": "docker_clean.sh"
                },
                "docker-compose_2344.yml": {
                    "name": "docker-compose_2344.yml"
                },
                "compose.connect.sh": {
                    "name": "compose.connect.sh"
                }
            }
        },
        "docker_build": {
            "old": {
                "conda.yml": {
                    "name": "conda.yml"
                }
            },
            "create_users.sh": {
                "name": "create_users.sh"
            },
            "prod.Dockerfile": {
                "name": "prod.Dockerfile"
            },
            "pyproject.toml": {
                "name": "pyproject.toml"
            },
            "install_cprofile.sh": {
                "name": "install_cprofile.sh"
            },
            "dev.Dockerfile": {
                "name": "dev.Dockerfile"
            },
            "poetry.lock": {
                "name": "poetry.lock"
            },
            "install_jupyter_extensions.sh": {
                "name": "install_jupyter_extensions.sh"
            },
            "etc_sudoers": {
                "name": "etc_sudoers"
            },
            "fstab": {
                "name": "fstab"
            },
            "install_os_packages.sh": {
                "name": "install_os_packages.sh"
            },
            "poetry.toml": {
                "name": "poetry.toml"
            },
            "install_python_packages.sh": {
                "name": "install_python_packages.sh"
            },
            "install_dind.sh": {
                "name": "install_dind.sh"
            }
        },
        "env": {
            "default.env": {
                "name": "default.env"
            }
        },
        "README.md": {
            "name": "README.md"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "im": {
        "plantuml-images": {
            "instrument_master_architecture.2.png": {
                "name": "instrument_master_architecture.2.png"
            },
            "instrument_master_architecture.3.png": {
                "name": "instrument_master_architecture.3.png"
            },
            "instrument_master_architecture.1.png": {
                "name": "instrument_master_architecture.1.png"
            }
        },
        "airflow": {
            "devops": {
                "compose": {
                    "docker-compose.local.yml": {
                        "name": "docker-compose.local.yml"
                    }
                },
                "makefiles": {
                    "stage_local.mk": {
                        "name": "stage_local.mk"
                    }
                },
                "dags": {
                    "im_infra.py": {
                        "name": "im_infra.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "airflow_worker": {
                    "prebuildfs": {
                        "opt": {
                            "bitnami": {
                                "base": {
                                    "helpers": {
                                        "name": "helpers"
                                    },
                                    "functions": {
                                        "name": "functions"
                                    }
                                },
                                "licenses": {
                                    "licenses.txt": {
                                        "name": "licenses.txt"
                                    }
                                },
                                ".bitnami_components.json": {
                                    "name": ".bitnami_components.json"
                                }
                            }
                        },
                        "usr": {
                            "sbin": {
                                "install_packages": {
                                    "name": "install_packages"
                                },
                                "bitnami-pkg": {
                                    "name": "bitnami-pkg"
                                }
                            }
                        },
                        "build": {
                            "bitnami-user.sh": {
                                "name": "bitnami-user.sh"
                            },
                            "install-nami.sh": {
                                "name": "install-nami.sh"
                            }
                        }
                    },
                    "rootfs": {
                        "opt": {
                            "bitnami": {
                                "scripts": {
                                    "locales": {
                                        "add-extra-locales.sh": {
                                            "name": "add-extra-locales.sh"
                                        }
                                    }
                                }
                            }
                        },
                        "airflow-worker-inputs.json": {
                            "name": "airflow-worker-inputs.json"
                        },
                        "app-entrypoint.sh": {
                            "name": "app-entrypoint.sh"
                        },
                        "run.sh": {
                            "name": "run.sh"
                        }
                    }
                },
                "airflow_configs": {
                    "local.airflow.cfg": {
                        "name": "local.airflow.cfg"
                    },
                    "requirements.txt": {
                        "name": "requirements.txt"
                    }
                },
                "docker_build": {
                    "im_db_loader_worker.dev.Dockerfile": {
                        "name": "im_db_loader_worker.dev.Dockerfile"
                    },
                    "im_db_loader_worker.requirements.txt": {
                        "name": "im_db_loader_worker.requirements.txt"
                    }
                },
                "env": {
                    "local": {
                        "im_postgres_config.env": {
                            "name": "im_postgres_config.env"
                        },
                        "airflow.env": {
                            "name": "airflow.env"
                        },
                        "worker_db_loader.env": {
                            "name": "worker_db_loader.env"
                        },
                        "worker_config.env": {
                            "name": "worker_config.env"
                        },
                        "airflow_postgres.env": {
                            "name": "airflow_postgres.env"
                        }
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "Makefile": {
                "name": "Makefile"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "eoddata": {
            "test": {
                "outcomes": {
                    "Test_read_symbols_from_file.test1": {
                        "input": {
                            "test.csv": {
                                "name": "test.csv"
                            }
                        }
                    }
                },
                "test_read_symbol_list.py": {
                    "name": "test_read_symbol_list.py"
                }
            },
            "metadata": {
                "extract": {
                    "download_symbol_list.py": {
                        "name": "download_symbol_list.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "load": {
                    "loader.py": {
                        "name": "loader.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "types.py": {
                    "name": "types.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "kibot": {
            "data": {
                "transform": {
                    "kibot_s3_to_sql_transformer.py": {
                        "name": "kibot_s3_to_sql_transformer.py"
                    },
                    "convert_s3_to_sql_kibot.py": {
                        "name": "convert_s3_to_sql_kibot.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "extract": {
                    "test": {
                        "outcomes": {
                            "TestKibotDownload.test_extract_payload_links": {
                                "input": {
                                    "all_stocks_1min.html": {
                                        "name": "all_stocks_1min.html"
                                    }
                                },
                                "output": {
                                    "test.txt.gz": {
                                        "name": "test.txt.gz"
                                    }
                                }
                            },
                            "TestKibotDownload.test_extract_dataset_links": {
                                "input": {
                                    "my_account.html": {
                                        "name": "my_account.html"
                                    }
                                },
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_kibot_data_download.py": {
                            "name": "test_kibot_data_download.py"
                        }
                    },
                    "run_downloader.sh": {
                        "name": "run_downloader.sh"
                    },
                    "download.py": {
                        "name": "download.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "check_realtime_feed.py": {
                        "name": "check_realtime_feed.py"
                    }
                },
                "load": {
                    "test": {
                        "outcomes": {
                            "TestSqlDataLoader1.test_read_data2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestKibotS3DataLoader.test1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestKibotS3DataLoader.test_read_data_with_start_end_ts": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestSqlDataLoader1.test_read_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_s3_data_loader.py": {
                            "name": "test_s3_data_loader.py"
                        },
                        "test_dataset_name_parser.py": {
                            "name": "test_dataset_name_parser.py"
                        },
                        "test_file_path_generator.py": {
                            "name": "test_file_path_generator.py"
                        },
                        "test_sql_data_loader.py": {
                            "name": "test_sql_data_loader.py"
                        }
                    },
                    "kibot_sql_data_loader.py": {
                        "name": "kibot_sql_data_loader.py"
                    },
                    "kibot_file_path_generator.py": {
                        "name": "kibot_file_path_generator.py"
                    },
                    "dataset_name_parser.py": {
                        "name": "dataset_name_parser.py"
                    },
                    "kibot_s3_data_loader.py": {
                        "name": "kibot_s3_data_loader.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "futures_forward_contracts.py": {
                        "name": "futures_forward_contracts.py"
                    }
                },
                "config.py": {
                    "name": "config.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "base": {
                "__init__.py": {
                    "name": "__init__.py"
                },
                "command.py": {
                    "name": "command.py"
                }
            },
            "test": {
                "outcomes": {
                    "TestSqlWriterBackend1.test_ensure_trade_symbol_exist1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_ensure_exchange_exist1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_minute_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_daily_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_bulk_minute_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_bulk_minute_data_with_holes": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_tick_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_ensure_symbol_exist1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_get_remaining_data_to_load": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_bulk_daily_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestSqlWriterBackend1.test_insert_bulk_daily_data_with_holes": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_kibot_sql_writer_backend.py": {
                    "name": "test_kibot_sql_writer_backend.py"
                }
            },
            "notebooks": {
                "kibot_volume_statistics.ipynb": {
                    "name": "kibot_volume_statistics.ipynb"
                },
                "kibot_data_analysis.py": {
                    "name": "kibot_data_analysis.py"
                },
                "kibot_volume_statistics.py": {
                    "name": "kibot_volume_statistics.py"
                },
                "gallery_kibot.ipynb": {
                    "name": "gallery_kibot.ipynb"
                },
                "gallery_kibot.py": {
                    "name": "gallery_kibot.py"
                },
                "kibot_data_analysis.ipynb": {
                    "name": "kibot_data_analysis.ipynb"
                }
            },
            "metadata": {
                "extract": {
                    "download_adjustments.py": {
                        "name": "download_adjustments.py"
                    },
                    "download_ticker_lists.py": {
                        "name": "download_ticker_lists.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "load": {
                    "kibot_metadata.py": {
                        "name": "kibot_metadata.py"
                    },
                    "expiry_contract_mapper.py": {
                        "name": "expiry_contract_mapper.py"
                    },
                    "s3_backend.py": {
                        "name": "s3_backend.py"
                    },
                    "ticker_lists.py": {
                        "name": "ticker_lists.py"
                    },
                    "adjustments.py": {
                        "name": "adjustments.py"
                    },
                    "contract_symbol_mapping.py": {
                        "name": "contract_symbol_mapping.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "test": {
                    "outcomes": {
                        "TestTickerListLoader.test_parsing_logic": {
                            "input": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        }
                    },
                    "mocking": {
                        "1min_contract_metadata.txt": {
                            "name": "1min_contract_metadata.txt"
                        },
                        "tickbidask_contract_metadata.txt": {
                            "name": "tickbidask_contract_metadata.txt"
                        },
                        "mock_kibot_metadata.py": {
                            "name": "mock_kibot_metadata.py"
                        },
                        "continuous_contract_metadata.txt": {
                            "name": "continuous_contract_metadata.txt"
                        },
                        "read_daily_contract_metadata.txt": {
                            "name": "read_daily_contract_metadata.txt"
                        },
                        "kibot_exchange_mapping.txt": {
                            "name": "kibot_exchange_mapping.txt"
                        }
                    },
                    "test_contract_symbol_mapper.py": {
                        "name": "test_contract_symbol_mapper.py"
                    },
                    "test_expiry_contract_mapper.py": {
                        "name": "test_expiry_contract_mapper.py"
                    },
                    "test_kibot_metadata.py": {
                        "name": "test_kibot_metadata.py"
                    },
                    "test_vendors2.py": {
                        "name": "test_vendors2.py"
                    },
                    "test_load.py": {
                        "name": "test_load.py"
                    }
                },
                "config.py": {
                    "name": "config.py"
                },
                "types.py": {
                    "name": "types.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "sql_writer.py": {
                "name": "sql_writer.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "kibot_timing.md": {
                "name": "kibot_timing.md"
            }
        },
        "devops.old": {
            "compose": {
                "docker-compose.yml": {
                    "name": "docker-compose.yml"
                },
                "docker-compose.local.yml": {
                    "name": "docker-compose.local.yml"
                },
                "docker-compose.multistage.yml": {
                    "name": "docker-compose.multistage.yml"
                },
                "docker-compose_as_supermodule.yml": {
                    "name": "docker-compose_as_supermodule.yml"
                },
                "docker-compose.dev.yml": {
                    "name": "docker-compose.dev.yml"
                },
                "docker-compose.test.yml": {
                    "name": "docker-compose.test.yml"
                }
            },
            "makefiles": {
                "stage_local.mk": {
                    "name": "stage_local.mk"
                },
                "project_specific.mk": {
                    "name": "project_specific.mk"
                }
            },
            "docker_scripts": {
                "run_superslow_tests.sh": {
                    "name": "run_superslow_tests.sh"
                },
                "run_slow_tests.sh": {
                    "name": "run_slow_tests.sh"
                },
                "run_fast_tests.sh": {
                    "name": "run_fast_tests.sh"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "init_im_db.py": {
                    "name": "init_im_db.py"
                }
            },
            "docker_build": {
                "entrypoints": {
                    "entrypoint_worker.sh": {
                        "name": "entrypoint_worker.sh"
                    },
                    "entrypoint_app_only.sh": {
                        "name": "entrypoint_app_only.sh"
                    },
                    "entrypoint_deploy.sh": {
                        "name": "entrypoint_deploy.sh"
                    }
                },
                "dev.Dockerfile": {
                    "name": "dev.Dockerfile"
                },
                "requirements.txt": {
                    "name": "requirements.txt"
                }
            },
            "env": {
                "local": {
                    "im_postgres_config.env": {
                        "name": "im_postgres_config.env"
                    },
                    "general.env": {
                        "name": "general.env"
                    }
                },
                "dev.postgres.env": {
                    "name": "dev.postgres.env"
                },
                "multistage.postgres.env": {
                    "name": "multistage.postgres.env"
                },
                "test.env": {
                    "name": "test.env"
                }
            },
            "create-multiple-postgresql-databases.sh": {
                "name": "create-multiple-postgresql-databases.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "app": {
            "services": {
                "file_path_generator_factory.py": {
                    "name": "file_path_generator_factory.py"
                },
                "transformer_factory.py": {
                    "name": "transformer_factory.py"
                },
                "sql_writer_factory.py": {
                    "name": "sql_writer_factory.py"
                },
                "loader_factory.py": {
                    "name": "loader_factory.py"
                },
                "symbol_universe_factory.py": {
                    "name": "symbol_universe_factory.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "transform": {
                "convert_s3_to_sql.py": {
                    "name": "convert_s3_to_sql.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "notebooks": {
                "Master_IM_DB.py": {
                    "name": "Master_IM_DB.py"
                },
                "Master_IM_DB.ipynb": {
                    "name": "Master_IM_DB.ipynb"
                }
            },
            "print_db_connection.py": {
                "name": "print_db_connection.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "common": {
            "data": {
                "transform": {
                    "transform.py": {
                        "name": "transform.py"
                    },
                    "s3_to_sql_transformer.py": {
                        "name": "s3_to_sql_transformer.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "extract": {
                    "data_extractor.py": {
                        "name": "data_extractor.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "load": {
                    "abstract_data_loader.py": {
                        "name": "abstract_data_loader.py"
                    },
                    "file_path_generator.py": {
                        "name": "file_path_generator.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "types.py": {
                    "name": "types.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "utils.py": {
                    "name": "utils.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "metadata": {
                "symbols.py": {
                    "name": "symbols.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "sql_writer.py": {
                "name": "sql_writer.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "ib": {
            "data": {
                "transform": {
                    "test": {
                        "outcomes": {
                            "TestReadFromS3WriteToSql.test_insert_daily_data_from_s3_1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestReadFromS3WriteToSql.test_insert_minutely_data_from_s3_1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestReadFromS3WriteToSql.test_insert_daily_data_from_s3_2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestReadFromS3WriteToSql.test_insert_minutely_data_from_s3_2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_transform.py": {
                            "name": "test_transform.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "ib_s3_to_sql_transformer.py": {
                        "name": "ib_s3_to_sql_transformer.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "extract": {
                    "gateway": {
                        "scratch": {
                            "exercise_ib.py": {
                                "name": "exercise_ib.py"
                            },
                            "exercise_ibapi.py": {
                                "name": "exercise_ibapi.py"
                            },
                            "exercise_ibapi2.py": {
                                "name": "exercise_ibapi2.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "test": {
                            "outcomes": {
                                "Test_get_historical_data.test_req_historical_data4": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_req_historical_data1": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop5": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_req_historical_data2": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_ib_loop_generator2": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop1": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_ib_loop_generator1": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_save_historical_data_with_IB_loop1": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_ib_metadata1.test1": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_download_ib_data1": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_req_historical_data3": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop4": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_req_historical_data6": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_ib_metadata1.test3": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_req_historical_data5": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_ib_metadata1.test2": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop6": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop2": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop3": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                },
                                "Test_get_historical_data.test_get_historical_data_with_IB_loop7": {
                                    "output": {
                                        "test.txt": {
                                            "name": "test.txt"
                                        }
                                    }
                                }
                            },
                            "utils.py": {
                                "name": "utils.py"
                            },
                            "test_save_historical_data_with_IB_loop.py": {
                                "name": "test_save_historical_data_with_IB_loop.py"
                            },
                            "test_download_data_ib_loop.py": {
                                "name": "test_download_data_ib_loop.py"
                            },
                            "test_download_data_unrolling_ib_loop.py": {
                                "name": "test_download_data_unrolling_ib_loop.py"
                            },
                            "test_ib_utils.py": {
                                "name": "test_ib_utils.py"
                            },
                            "test_ib_metadata.py": {
                                "name": "test_ib_metadata.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "notebooks": {
                            "Task114_Download_futures_price_data_from_IB.ipynb": {
                                "name": "Task114_Download_futures_price_data_from_IB.ipynb"
                            },
                            "Task114_Download_futures_price_data_from_IB.py": {
                                "name": "Task114_Download_futures_price_data_from_IB.py"
                            },
                            "Task109_Extract_futures_prices_from_dockerized.py": {
                                "name": "Task109_Extract_futures_prices_from_dockerized.py"
                            },
                            "Task109_Extract_futures_prices_from_dockerized.ipynb": {
                                "name": "Task109_Extract_futures_prices_from_dockerized.ipynb"
                            },
                            "Task111_Compare_data_IB_vs_Kibot_and_understand_timing_semantic.py": {
                                "name": "Task111_Compare_data_IB_vs_Kibot_and_understand_timing_semantic.py"
                            },
                            "gallery_ib_insync.py": {
                                "name": "gallery_ib_insync.py"
                            },
                            "gallery_ib_insync.ipynb": {
                                "name": "gallery_ib_insync.ipynb"
                            },
                            "AmpTask1086_Get_metadata_for_futures_universe.ipynb": {
                                "name": "AmpTask1086_Get_metadata_for_futures_universe.ipynb"
                            },
                            "Task111_Compare_data_IB_vs_Kibot_and_understand_timing_semantic.ipynb": {
                                "name": "Task111_Compare_data_IB_vs_Kibot_and_understand_timing_semantic.ipynb"
                            },
                            "AmpTask1086_Get_metadata_for_futures_universe.py": {
                                "name": "AmpTask1086_Get_metadata_for_futures_universe.py"
                            }
                        },
                        ".env": {
                            "prod.env": {
                                "name": "prod.env"
                            },
                            "local.env": {
                                "name": "local.env"
                            }
                        },
                        "utils.py": {
                            "name": "utils.py"
                        },
                        "download_benchmark.py": {
                            "name": "download_benchmark.py"
                        },
                        "download_ib_data_single_file_with_loop.py": {
                            "name": "download_ib_data_single_file_with_loop.py"
                        },
                        "download_realtime_data.py": {
                            "name": "download_realtime_data.py"
                        },
                        "download_data_ib_loop.py": {
                            "name": "download_data_ib_loop.py"
                        },
                        "save_historical_data_with_IB_loop.py": {
                            "name": "save_historical_data_with_IB_loop.py"
                        },
                        "unrolling_download_data_ib_loop.py": {
                            "name": "unrolling_download_data_ib_loop.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        "metadata.py": {
                            "name": "metadata.py"
                        }
                    },
                    "ib_data_extractor.py": {
                        "name": "ib_data_extractor.py"
                    },
                    "download_ib_data.py": {
                        "name": "download_ib_data.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "load": {
                    "test": {
                        "outcomes": {
                            "TestS3IbDataLoader1.test_read_data_with_start_end_ts": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestS3IbDataLoader1.test_read_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestS3IbDataLoader1.test_read_data3": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestS3IbDataLoader1.test_dtypes1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestS3IbDataLoader1.test_read_data2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_s3_data_loader.py": {
                            "name": "test_s3_data_loader.py"
                        },
                        "test_file_path_generator.py": {
                            "name": "test_file_path_generator.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "ib_file_path_generator.py": {
                        "name": "ib_file_path_generator.py"
                    },
                    "ib_s3_data_loader.py": {
                        "name": "ib_s3_data_loader.py"
                    },
                    "ib_sql_data_loader.py": {
                        "name": "ib_sql_data_loader.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "config.py": {
                    "name": "config.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "connect": {
                "vnc": {
                    "vnc_init": {
                        "name": "vnc_init"
                    },
                    "xvfb-daemon-run": {
                        "name": "xvfb-daemon-run"
                    },
                    "xvfb_init": {
                        "name": "xvfb_init"
                    }
                },
                "devops": {
                    "compose": {
                        "docker-compose.local.yml": {
                            "name": "docker-compose.local.yml"
                        },
                        "docker-compose.prod.yml": {
                            "name": "docker-compose.prod.yml"
                        }
                    },
                    "makefiles": {
                        "docker.mk": {
                            "name": "docker.mk"
                        },
                        "setup.mk": {
                            "name": "setup.mk"
                        },
                        "local_stage.mk": {
                            "name": "local_stage.mk"
                        },
                        "prod_stage.mk": {
                            "name": "prod_stage.mk"
                        }
                    },
                    "docker_scripts": {
                        "make_ib_controller_init_file.py": {
                            "name": "make_ib_controller_init_file.py"
                        },
                        "make_jts_init_file.py": {
                            "name": "make_jts_init_file.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "docker_build": {
                        "entrypoints": {
                            "entrypoint.sh": {
                                "name": "entrypoint.sh"
                            }
                        },
                        "dev.Dockerfile": {
                            "name": "dev.Dockerfile"
                        }
                    },
                    "env": {
                        "prod.env": {
                            "name": "prod.env"
                        },
                        "local.env": {
                            "name": "local.env"
                        }
                    },
                    "sanity_check_ib.py": {
                        "name": "sanity_check_ib.py"
                    },
                    "requirements.txt": {
                        "name": "requirements.txt"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "test": {
                    "test_im_tasks.py": {
                        "name": "test_im_tasks.py"
                    }
                },
                "README.md": {
                    "name": "README.md"
                },
                "version.txt": {
                    "name": "version.txt"
                },
                "tasks.py": {
                    "name": "tasks.py"
                },
                "Makefile": {
                    "name": "Makefile"
                },
                "invoke.yaml": {
                    "name": "invoke.yaml"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "outcomes": {
                    "TestIbSqlWriterBackend1.test_insert_tick_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_ensure_symbol_exist1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_get_remaining_data_to_load": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_ensure_exchange_exist1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_insert_bulk_daily_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_insert_bulk_minute_data_with_holes": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_ensure_trade_symbol_exist1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_insert_minute_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_insert_bulk_daily_data_with_holes": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_insert_daily_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestIbSqlWriterBackend1.test_insert_bulk_minute_data1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_ib_sql_writer_backend.py": {
                    "name": "test_ib_sql_writer_backend.py"
                }
            },
            "metadata": {
                "extract": {
                    "devops": {
                        "makefiles": {
                            "general.mk": {
                                "name": "general.mk"
                            },
                            "targets.mk": {
                                "name": "targets.mk"
                            }
                        },
                        "Dockerfile": {
                            "name": "Dockerfile"
                        },
                        "requirements.txt": {
                            "name": "requirements.txt"
                        }
                    },
                    "notebooks": {
                        "Master_analyze_ib_metadata_crawler.py": {
                            "name": "Master_analyze_ib_metadata_crawler.py"
                        },
                        "Master_analyze_ib_metadata_crawler.ipynb": {
                            "name": "Master_analyze_ib_metadata_crawler.ipynb"
                        }
                    },
                    "ib_metadata_crawler": {
                        "spiders": {
                            "ibroker.py": {
                                "name": "ibroker.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "settings.py": {
                            "name": "settings.py"
                        },
                        "items.py": {
                            "name": "items.py"
                        },
                        "middlewares.py": {
                            "name": "middlewares.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        "pipelines.py": {
                            "name": "pipelines.py"
                        }
                    },
                    "README.md": {
                        "name": "README.md"
                    },
                    "scrapy.cfg": {
                        "name": "scrapy.cfg"
                    },
                    "Makefile": {
                        "name": "Makefile"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "test": {
                    "outcomes": {
                        "TestIbSymbolUniverse.test_extract_exchange_code_from_full_name5": {},
                        "TestIbSymbolUniverse.test_parse_symbols_file1": {
                            "input": {
                                "test_symbols.csv": {
                                    "name": "test_symbols.csv"
                                }
                            },
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestIbSymbolUniverse.test_parse_symbols_file2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestIbSymbolUniverse.test_extract_exchange_code_from_full_name2": {},
                        "TestIbSymbolUniverse.test_extract_exchange_code_from_full_name1": {}
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "test_ib_symbols.py": {
                        "name": "test_ib_symbols.py"
                    }
                },
                ".dockerignore": {
                    "name": ".dockerignore"
                },
                "ib_symbols.py": {
                    "name": "ib_symbols.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "sql_writer.py": {
                "name": "sql_writer.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "README.md": {
            "name": "README.md"
        },
        ".dockerignore": {
            "name": ".dockerignore"
        },
        "Makefile": {
            "name": "Makefile"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    ".git": {
        "branches": {},
        "hooks": {
            "fsmonitor-watchman.sample": {
                "name": "fsmonitor-watchman.sample"
            },
            "push-to-checkout.sample": {
                "name": "push-to-checkout.sample"
            },
            "update.sample": {
                "name": "update.sample"
            },
            "pre-applypatch.sample": {
                "name": "pre-applypatch.sample"
            },
            "pre-push.sample": {
                "name": "pre-push.sample"
            },
            "pre-receive.sample": {
                "name": "pre-receive.sample"
            },
            "pre-merge-commit.sample": {
                "name": "pre-merge-commit.sample"
            },
            "applypatch-msg.sample": {
                "name": "applypatch-msg.sample"
            },
            "pre-commit.sample": {
                "name": "pre-commit.sample"
            },
            "prepare-commit-msg.sample": {
                "name": "prepare-commit-msg.sample"
            },
            "commit-msg.sample": {
                "name": "commit-msg.sample"
            },
            "post-update.sample": {
                "name": "post-update.sample"
            },
            "pre-rebase.sample": {
                "name": "pre-rebase.sample"
            }
        },
        "objects": {
            "49": {
                "ef5f44a68dde3ed41d14f47d81437f2a740050": {
                    "name": "ef5f44a68dde3ed41d14f47d81437f2a740050"
                },
                "21ecd5c939601dbdddb1f1677782b6cddde047": {
                    "name": "21ecd5c939601dbdddb1f1677782b6cddde047"
                },
                "96ff2aec7e0fa5ec589b280ab10757d2068149": {
                    "name": "96ff2aec7e0fa5ec589b280ab10757d2068149"
                },
                "34a3da7129501fcc82b285e8622a88d5e1bc7a": {
                    "name": "34a3da7129501fcc82b285e8622a88d5e1bc7a"
                },
                "cbfcbc358623ce104e1b86a68abf31fe07cd2f": {
                    "name": "cbfcbc358623ce104e1b86a68abf31fe07cd2f"
                },
                "4fc9a0984316903f22524ab1a33fe81ff756a4": {
                    "name": "4fc9a0984316903f22524ab1a33fe81ff756a4"
                },
                "795cccc379640247624e2de9fd0c1b1522aa04": {
                    "name": "795cccc379640247624e2de9fd0c1b1522aa04"
                }
            },
            "6d": {
                "f89ef04d28f2b24ed9d61fb188f6f349917022": {
                    "name": "f89ef04d28f2b24ed9d61fb188f6f349917022"
                },
                "9e9e8acb108e88b7eba598cd06a3a400d0f2f3": {
                    "name": "9e9e8acb108e88b7eba598cd06a3a400d0f2f3"
                },
                "4cfd87157adc2a303e718fbcabca2500b94a09": {
                    "name": "4cfd87157adc2a303e718fbcabca2500b94a09"
                },
                "04dbe81f68838a1b23377b1715edc42c70ccdf": {
                    "name": "04dbe81f68838a1b23377b1715edc42c70ccdf"
                },
                "d27fe860774a95fe877ee2f4a45c0ed499b77c": {
                    "name": "d27fe860774a95fe877ee2f4a45c0ed499b77c"
                },
                "9cf65ccc5316967d8ca11fc66c98a961e1d31a": {
                    "name": "9cf65ccc5316967d8ca11fc66c98a961e1d31a"
                }
            },
            "52": {
                "c6502c6c95a11e6ea2412421fe4448aaaa7af1": {
                    "name": "c6502c6c95a11e6ea2412421fe4448aaaa7af1"
                }
            },
            "27": {
                "b73ac7f987b5c99e3d0db2a5a4a54c6b3dc4b0": {
                    "name": "b73ac7f987b5c99e3d0db2a5a4a54c6b3dc4b0"
                },
                "9d789a5d362f7c833a7fe427901d569ba5f47e": {
                    "name": "9d789a5d362f7c833a7fe427901d569ba5f47e"
                },
                "8a4c08683e888737477cb6c92d8fe9fb494f3c": {
                    "name": "8a4c08683e888737477cb6c92d8fe9fb494f3c"
                },
                "0c5af360edaf7902ea2a8c279a8ca716ab56b9": {
                    "name": "0c5af360edaf7902ea2a8c279a8ca716ab56b9"
                },
                "417d7b77e13ed193afeb6bc7f98bf09ddfe06f": {
                    "name": "417d7b77e13ed193afeb6bc7f98bf09ddfe06f"
                }
            },
            "c5": {
                "cddbaf2d70ecde3d2265bc59da666e12b8ab2b": {
                    "name": "cddbaf2d70ecde3d2265bc59da666e12b8ab2b"
                },
                "587aa827bf753c3ec08ef7ee56cc06df1f7cd9": {
                    "name": "587aa827bf753c3ec08ef7ee56cc06df1f7cd9"
                },
                "02ae009148c05cdf8dcf53ce33d8cc1971b3e3": {
                    "name": "02ae009148c05cdf8dcf53ce33d8cc1971b3e3"
                },
                "ec980b13f54d4ed70efa5d5dd0def91a429d75": {
                    "name": "ec980b13f54d4ed70efa5d5dd0def91a429d75"
                },
                "715c6cd48a63a348cfdb98abcc014734103853": {
                    "name": "715c6cd48a63a348cfdb98abcc014734103853"
                },
                "f948d5e9c61d8d40f9a84eb9d2bb8695b63f9b": {
                    "name": "f948d5e9c61d8d40f9a84eb9d2bb8695b63f9b"
                }
            },
            "1c": {
                "ccc3f07f275a9d1c87a9cd8d3e26adcaf3f47a": {
                    "name": "ccc3f07f275a9d1c87a9cd8d3e26adcaf3f47a"
                },
                "f481cf59b0427e46f78f7da611f97a979b2437": {
                    "name": "f481cf59b0427e46f78f7da611f97a979b2437"
                }
            },
            "0a": {
                "25c1e7d63c7a7e09fe98fd1c6e45d0f0e0df41": {
                    "name": "25c1e7d63c7a7e09fe98fd1c6e45d0f0e0df41"
                },
                "151616a52c3a22246156dbd14d23fdf9504538": {
                    "name": "151616a52c3a22246156dbd14d23fdf9504538"
                },
                "81bcde24c4e747e2b2b3fe2ec8bbc2f6b61cea": {
                    "name": "81bcde24c4e747e2b2b3fe2ec8bbc2f6b61cea"
                },
                "e2fb969d3cef5f54184ef95747130c4c8b7560": {
                    "name": "e2fb969d3cef5f54184ef95747130c4c8b7560"
                },
                "901639edd5e9dd5aa97c97fca267734e9cd03b": {
                    "name": "901639edd5e9dd5aa97c97fca267734e9cd03b"
                },
                "9e2b5484de4b14307f7fa26fb664d6cbf49730": {
                    "name": "9e2b5484de4b14307f7fa26fb664d6cbf49730"
                }
            },
            "7d": {
                "96fc8dda45de3809dd5d1087fa1d4457535f0e": {
                    "name": "96fc8dda45de3809dd5d1087fa1d4457535f0e"
                },
                "2eb2ba53a87ec6d6d4a59533a847a0a72bbb0e": {
                    "name": "2eb2ba53a87ec6d6d4a59533a847a0a72bbb0e"
                },
                "b608eabe85d49580f89e177e941271ec167b34": {
                    "name": "b608eabe85d49580f89e177e941271ec167b34"
                },
                "f48e4516788a53b11b9a41eb58f294e30a5754": {
                    "name": "f48e4516788a53b11b9a41eb58f294e30a5754"
                },
                "c37d08d9d71c42e5daacb151708fd7ec96a304": {
                    "name": "c37d08d9d71c42e5daacb151708fd7ec96a304"
                }
            },
            "20": {
                "e1b9d4dd283593faac0642380b9e67f4387789": {
                    "name": "e1b9d4dd283593faac0642380b9e67f4387789"
                },
                "053d55a5a5059b1eda674f47c7da12ffc0fba8": {
                    "name": "053d55a5a5059b1eda674f47c7da12ffc0fba8"
                },
                "2174a394cc1ae8bc84286dcc7cfc35e4f42332": {
                    "name": "2174a394cc1ae8bc84286dcc7cfc35e4f42332"
                },
                "6df44212b2185ad6aef74d72421d81e6c53b8f": {
                    "name": "6df44212b2185ad6aef74d72421d81e6c53b8f"
                }
            },
            "82": {
                "95116931925213e2e54677fd686c66dbfc9e36": {
                    "name": "95116931925213e2e54677fd686c66dbfc9e36"
                },
                "2d349b9853ff428982f36ba6f62919aa0b3025": {
                    "name": "2d349b9853ff428982f36ba6f62919aa0b3025"
                },
                "18e142b31490b6d67edfe0f2d35346ad402530": {
                    "name": "18e142b31490b6d67edfe0f2d35346ad402530"
                },
                "18c91848a0c52843b872e2633c24943b28a5a2": {
                    "name": "18c91848a0c52843b872e2633c24943b28a5a2"
                },
                "09b31efbd00794edfb20dc88eb1477f7560dc5": {
                    "name": "09b31efbd00794edfb20dc88eb1477f7560dc5"
                }
            },
            "8e": {
                "5b58ea9d616b5bf9186b1c8cd92a37b335c56b": {
                    "name": "5b58ea9d616b5bf9186b1c8cd92a37b335c56b"
                },
                "aac777cfda933bedfb5a435a4dbed1ee7f3694": {
                    "name": "aac777cfda933bedfb5a435a4dbed1ee7f3694"
                },
                "5609e45cf018bf6df1b1ea2cce4060cb15d56b": {
                    "name": "5609e45cf018bf6df1b1ea2cce4060cb15d56b"
                },
                "9da62cf3998ebba8b3812a6c325a7d1c22226f": {
                    "name": "9da62cf3998ebba8b3812a6c325a7d1c22226f"
                },
                "31ee1d3d98329b3b7d4abde41b684d98fee755": {
                    "name": "31ee1d3d98329b3b7d4abde41b684d98fee755"
                },
                "6c2f3f344baddb1983540f6a1b1683756710b7": {
                    "name": "6c2f3f344baddb1983540f6a1b1683756710b7"
                },
                "51276970f8e3b38c34e80be7eabb9a942ae3c2": {
                    "name": "51276970f8e3b38c34e80be7eabb9a942ae3c2"
                },
                "606692cc21455ec4f4efc1c10a1cefabf15ce5": {
                    "name": "606692cc21455ec4f4efc1c10a1cefabf15ce5"
                }
            },
            "06": {
                "ead0ffcc304d06987a7867277f264226e3cf84": {
                    "name": "ead0ffcc304d06987a7867277f264226e3cf84"
                },
                "a5e5798a3203c80d6f8862b23d62f0b2855dbb": {
                    "name": "a5e5798a3203c80d6f8862b23d62f0b2855dbb"
                },
                "af41bedfb2e0553257ecb3d25b7ea25dc5992e": {
                    "name": "af41bedfb2e0553257ecb3d25b7ea25dc5992e"
                },
                "e9d4a35845c216536a1e96dc72c71765f37fa3": {
                    "name": "e9d4a35845c216536a1e96dc72c71765f37fa3"
                },
                "8b58a101e926e35eb197757baf6811b777cee9": {
                    "name": "8b58a101e926e35eb197757baf6811b777cee9"
                },
                "88e62754da5d83e115ef50c4a05683a6fe9e32": {
                    "name": "88e62754da5d83e115ef50c4a05683a6fe9e32"
                },
                "874f8807ccc114e3bc4ff60d709713797568aa": {
                    "name": "874f8807ccc114e3bc4ff60d709713797568aa"
                }
            },
            "e3": {
                "107fd427f834a9f7ee0ff705858ef6f588e26a": {
                    "name": "107fd427f834a9f7ee0ff705858ef6f588e26a"
                },
                "67841d2c21b25915daa566c38e83e31194554c": {
                    "name": "67841d2c21b25915daa566c38e83e31194554c"
                }
            },
            "cc": {
                "f46bddc1fe7c71f8eefc4ab048e2a17e452fd8": {
                    "name": "f46bddc1fe7c71f8eefc4ab048e2a17e452fd8"
                },
                "678b7c1c82b0c6e3f138574b410a5bcde9cd7a": {
                    "name": "678b7c1c82b0c6e3f138574b410a5bcde9cd7a"
                },
                "d2109fbcfb2ed14bf05e2a789058755a26e0c8": {
                    "name": "d2109fbcfb2ed14bf05e2a789058755a26e0c8"
                },
                "9b92f3634dfada1a07fca2d0a608c5376e4966": {
                    "name": "9b92f3634dfada1a07fca2d0a608c5376e4966"
                },
                "6f12b8685311194d4aace336ad73ae39932f2c": {
                    "name": "6f12b8685311194d4aace336ad73ae39932f2c"
                },
                "6b252f9b396bc885432faf36dc562f64cfe44c": {
                    "name": "6b252f9b396bc885432faf36dc562f64cfe44c"
                },
                "5a960c3f8a4ebc1ef50688d3a111e977ae4f4c": {
                    "name": "5a960c3f8a4ebc1ef50688d3a111e977ae4f4c"
                },
                "543525addc07a0ef48cc077b1b7401f9440d66": {
                    "name": "543525addc07a0ef48cc077b1b7401f9440d66"
                }
            },
            "4c": {
                "f81f4513b3c091b238ae9726d97a174b521338": {
                    "name": "f81f4513b3c091b238ae9726d97a174b521338"
                },
                "9c9292249266d13490da10f3401cebd57048c4": {
                    "name": "9c9292249266d13490da10f3401cebd57048c4"
                },
                "a1e1100182c2a0555dc047cdf1ef0863c92c88": {
                    "name": "a1e1100182c2a0555dc047cdf1ef0863c92c88"
                },
                "4d73cd6298d3a805dd8aa598acfb39c3783635": {
                    "name": "4d73cd6298d3a805dd8aa598acfb39c3783635"
                },
                "dd1e4f958bf5f4359f5d38ef31e0e91205371c": {
                    "name": "dd1e4f958bf5f4359f5d38ef31e0e91205371c"
                },
                "15e430919578148e54e450a0c8db1941874cde": {
                    "name": "15e430919578148e54e450a0c8db1941874cde"
                }
            },
            "7c": {
                "dfe683c5bbe6eed9c3c5fbb968d49b4051c109": {
                    "name": "dfe683c5bbe6eed9c3c5fbb968d49b4051c109"
                },
                "abacbd0fb0380f73e2a2d042f36a389995c92f": {
                    "name": "abacbd0fb0380f73e2a2d042f36a389995c92f"
                },
                "2f323fd6483ed06bfa543215b94ec501559ec4": {
                    "name": "2f323fd6483ed06bfa543215b94ec501559ec4"
                },
                "0fb8564393b14c96a304e1f330e13f5a2822ab": {
                    "name": "0fb8564393b14c96a304e1f330e13f5a2822ab"
                },
                "1a82f835439748ddab393ab7e18de76bf0aa92": {
                    "name": "1a82f835439748ddab393ab7e18de76bf0aa92"
                },
                "51ce57d5afbfd1bd3c64c93f7aaeac9c4fcd0c": {
                    "name": "51ce57d5afbfd1bd3c64c93f7aaeac9c4fcd0c"
                },
                "ae06b6b28f6698e929c3c2d9ae87ceeb9115ee": {
                    "name": "ae06b6b28f6698e929c3c2d9ae87ceeb9115ee"
                },
                "98f51c9ad9ed5983b04ccc0978d89f8f565bcd": {
                    "name": "98f51c9ad9ed5983b04ccc0978d89f8f565bcd"
                }
            },
            "96": {
                "c8f89659ee503740652d894fc532233d28f292": {
                    "name": "c8f89659ee503740652d894fc532233d28f292"
                },
                "1b1cf1ff4e3b34ce1d7b4623069ece7700988d": {
                    "name": "1b1cf1ff4e3b34ce1d7b4623069ece7700988d"
                },
                "706afb53afd8d786237576148a088fb144c25d": {
                    "name": "706afb53afd8d786237576148a088fb144c25d"
                }
            },
            "ad": {
                "dd7a9867e358b60ea3e75eb3e8632f766d6159": {
                    "name": "dd7a9867e358b60ea3e75eb3e8632f766d6159"
                },
                "09b28a5860e288641afc86164606b60f53babd": {
                    "name": "09b28a5860e288641afc86164606b60f53babd"
                },
                "f437f9a7e286a267457db45c30d1ab396ca135": {
                    "name": "f437f9a7e286a267457db45c30d1ab396ca135"
                }
            },
            "a5": {
                "a0ffd1494ed5aeada7b73b08b488fd952e1545": {
                    "name": "a0ffd1494ed5aeada7b73b08b488fd952e1545"
                },
                "fcc36e851de4ed5addd409463c0a4e5b06daa0": {
                    "name": "fcc36e851de4ed5addd409463c0a4e5b06daa0"
                },
                "90b2b1a38cfe14ebe4a7a10766f76ffee47382": {
                    "name": "90b2b1a38cfe14ebe4a7a10766f76ffee47382"
                }
            },
            "a1": {
                "f1fdce93fec6fced1b649f6106ab31868d0fd0": {
                    "name": "f1fdce93fec6fced1b649f6106ab31868d0fd0"
                },
                "73a9f7b30e3362db66b3b2a4a16b42412aa41d": {
                    "name": "73a9f7b30e3362db66b3b2a4a16b42412aa41d"
                },
                "a954b53b384b70afea625adc8fe5d70c762db3": {
                    "name": "a954b53b384b70afea625adc8fe5d70c762db3"
                }
            },
            "be": {
                "db094e62df00f6bd239e0ab95ed1e40b8b93b2": {
                    "name": "db094e62df00f6bd239e0ab95ed1e40b8b93b2"
                },
                "545de7df74b894fec838aba99f45404b07a4db": {
                    "name": "545de7df74b894fec838aba99f45404b07a4db"
                },
                "41c1c43ecb33128a7a9e64fd43757492f1c6fa": {
                    "name": "41c1c43ecb33128a7a9e64fd43757492f1c6fa"
                }
            },
            "a2": {
                "ba95593d50ed3ce006df3772e1ab753b266cc6": {
                    "name": "ba95593d50ed3ce006df3772e1ab753b266cc6"
                },
                "bd8943ec593d106e5a6c717b15666ba0011e78": {
                    "name": "bd8943ec593d106e5a6c717b15666ba0011e78"
                },
                "9d4e9afdfe615e5621b73417bb9b30e3980d70": {
                    "name": "9d4e9afdfe615e5621b73417bb9b30e3980d70"
                },
                "7063e55721d9bf824075cf5fb1ebcc75f52da7": {
                    "name": "7063e55721d9bf824075cf5fb1ebcc75f52da7"
                }
            },
            "ee": {
                "c7c56dcdc8f0a7902f6f2693690ac523d2c242": {
                    "name": "c7c56dcdc8f0a7902f6f2693690ac523d2c242"
                }
            },
            "53": {
                "cf03f864b97241d1c0e88d74afcf81f1897491": {
                    "name": "cf03f864b97241d1c0e88d74afcf81f1897491"
                },
                "956050887323ad47c75f5078b9c1125d2abf07": {
                    "name": "956050887323ad47c75f5078b9c1125d2abf07"
                }
            },
            "d7": {
                "f69eb296fd415e4c36c0ba7ba42ed097e5eb03": {
                    "name": "f69eb296fd415e4c36c0ba7ba42ed097e5eb03"
                },
                "e9a01489f29bf16f6a003a97f864bf48d7f23e": {
                    "name": "e9a01489f29bf16f6a003a97f864bf48d7f23e"
                },
                "91ff29e87ae7bf40f53ef4d17d2548e3cf48ba": {
                    "name": "91ff29e87ae7bf40f53ef4d17d2548e3cf48ba"
                },
                "6dc0797115f6dead0dffc8c62eb64473275fdc": {
                    "name": "6dc0797115f6dead0dffc8c62eb64473275fdc"
                }
            },
            "44": {
                "4d56ea39a9bb49be6a30fc88eb764d1098dc41": {
                    "name": "4d56ea39a9bb49be6a30fc88eb764d1098dc41"
                },
                "dfc1c21ab40d79e5a89f740c12c1b0e95acf4a": {
                    "name": "dfc1c21ab40d79e5a89f740c12c1b0e95acf4a"
                },
                "36ea6f2cbd176693c063353263147c65a39f1a": {
                    "name": "36ea6f2cbd176693c063353263147c65a39f1a"
                },
                "4ddbbeaa24c2d1f3e2a875a37fe494facd7c7c": {
                    "name": "4ddbbeaa24c2d1f3e2a875a37fe494facd7c7c"
                }
            },
            "3e": {
                "fc9be6a03cc16bcd615ba744539a8dece4e905": {
                    "name": "fc9be6a03cc16bcd615ba744539a8dece4e905"
                },
                "b21311a6efb2346f3c5adfb3793f489349c053": {
                    "name": "b21311a6efb2346f3c5adfb3793f489349c053"
                }
            },
            "30": {
                "7d457302dff432ea91dadb51b434598c909afb": {
                    "name": "7d457302dff432ea91dadb51b434598c909afb"
                },
                "1f3499fc31a214d9e1258b4dff85329da2c245": {
                    "name": "1f3499fc31a214d9e1258b4dff85329da2c245"
                },
                "cf8ffea870b328ea1dd35389a499da82e8a610": {
                    "name": "cf8ffea870b328ea1dd35389a499da82e8a610"
                }
            },
            "a3": {
                "30b7cdd6b9356899d760b2be9d83ac85d374fc": {
                    "name": "30b7cdd6b9356899d760b2be9d83ac85d374fc"
                },
                "97c78da276b5b7c92af962c8ae0058d8dda04c": {
                    "name": "97c78da276b5b7c92af962c8ae0058d8dda04c"
                },
                "3f7c8646461a9a343031dbd51dce5b827bd52e": {
                    "name": "3f7c8646461a9a343031dbd51dce5b827bd52e"
                }
            },
            "73": {
                "5972013670f953111eda330150c8a2ca9daab7": {
                    "name": "5972013670f953111eda330150c8a2ca9daab7"
                },
                "791a3fd3976f2ac6e11ccdd8d6a87f7af335e1": {
                    "name": "791a3fd3976f2ac6e11ccdd8d6a87f7af335e1"
                },
                "f45656bc6bb908081bee6d2846433122eb8eec": {
                    "name": "f45656bc6bb908081bee6d2846433122eb8eec"
                },
                "d149cb5f9b634e51aa62fb133968f5c304b2c7": {
                    "name": "d149cb5f9b634e51aa62fb133968f5c304b2c7"
                },
                "cbff26450f391a4bd7965070f6688729c33f01": {
                    "name": "cbff26450f391a4bd7965070f6688729c33f01"
                },
                "2f07fded815a5fb9b30a6c2bb9316396779d7c": {
                    "name": "2f07fded815a5fb9b30a6c2bb9316396779d7c"
                },
                "407d98aa623463b8470a0b1a7b303643caf5f6": {
                    "name": "407d98aa623463b8470a0b1a7b303643caf5f6"
                }
            },
            "d6": {
                "23f9109bc6a17ccc8c40f421b3474f54c45ea2": {
                    "name": "23f9109bc6a17ccc8c40f421b3474f54c45ea2"
                },
                "8e0dc5ef574fa50bf51a5c64196a2a0bd14b40": {
                    "name": "8e0dc5ef574fa50bf51a5c64196a2a0bd14b40"
                },
                "6f1df5901aaabb800dfd528f838e0ae2349043": {
                    "name": "6f1df5901aaabb800dfd528f838e0ae2349043"
                },
                "ec97ff9a6fea95b659545f474353a08cbd8182": {
                    "name": "ec97ff9a6fea95b659545f474353a08cbd8182"
                }
            },
            "5f": {
                "289533958ec004ff4aa2802e44f497672471ec": {
                    "name": "289533958ec004ff4aa2802e44f497672471ec"
                },
                "705b93c104124c687408cf8b9d6bbf120fed0a": {
                    "name": "705b93c104124c687408cf8b9d6bbf120fed0a"
                },
                "abca75704dcc3a4d2b140b02502be204b05266": {
                    "name": "abca75704dcc3a4d2b140b02502be204b05266"
                },
                "b736a3763f5811b5d7e461e9aef0be8bb15b83": {
                    "name": "b736a3763f5811b5d7e461e9aef0be8bb15b83"
                },
                "f15b961d0aadabce08c36f4d0187c0096f1189": {
                    "name": "f15b961d0aadabce08c36f4d0187c0096f1189"
                },
                "ce570e4c87a7141d1ff2f3a68c47066d349aa1": {
                    "name": "ce570e4c87a7141d1ff2f3a68c47066d349aa1"
                }
            },
            "f5": {
                "74cc2b1a3ad2c413753275fa2d241efaa30990": {
                    "name": "74cc2b1a3ad2c413753275fa2d241efaa30990"
                },
                "d4fca9a6a01efc377ccfe0d84c978528f3f2c9": {
                    "name": "d4fca9a6a01efc377ccfe0d84c978528f3f2c9"
                },
                "40fbf71c30af160c83a62a017ba26ce4e7d8b9": {
                    "name": "40fbf71c30af160c83a62a017ba26ce4e7d8b9"
                },
                "e96e6f85798ad84a42974eac6414cc8b1157df": {
                    "name": "e96e6f85798ad84a42974eac6414cc8b1157df"
                }
            },
            "c9": {
                "7df19e2525dcd452a3c90517dc5a2652de1b55": {
                    "name": "7df19e2525dcd452a3c90517dc5a2652de1b55"
                },
                "85990afa94e877c3b51656ec7c1ec68ad37a3d": {
                    "name": "85990afa94e877c3b51656ec7c1ec68ad37a3d"
                },
                "e375848f4576575c56916f7acc952708bb7e78": {
                    "name": "e375848f4576575c56916f7acc952708bb7e78"
                }
            },
            "5b": {
                "8c2dd03a47f84c3652b9c6faac06b3d62f7fc7": {
                    "name": "8c2dd03a47f84c3652b9c6faac06b3d62f7fc7"
                },
                "d883790446f6f81be14d016d3570c0e89fb935": {
                    "name": "d883790446f6f81be14d016d3570c0e89fb935"
                },
                "47e88519793dd6c0376e010ea6813c778d0f5a": {
                    "name": "47e88519793dd6c0376e010ea6813c778d0f5a"
                },
                "bd4974918d2885da77cfec9da1dcb06169a297": {
                    "name": "bd4974918d2885da77cfec9da1dcb06169a297"
                },
                "39666fb940556ff2d86a81dfb71d8bd24bf893": {
                    "name": "39666fb940556ff2d86a81dfb71d8bd24bf893"
                },
                "d805af7e46fd68cf0b4af4a310807b008b5b22": {
                    "name": "d805af7e46fd68cf0b4af4a310807b008b5b22"
                }
            },
            "47": {
                "1b3ab7813a3968e7f7d70b3900fe608ced9068": {
                    "name": "1b3ab7813a3968e7f7d70b3900fe608ced9068"
                },
                "d5db59bd07684575bcf490a53a78e7f2d1e1c8": {
                    "name": "d5db59bd07684575bcf490a53a78e7f2d1e1c8"
                },
                "684431bbbb01e535eaec678b7729d998010f75": {
                    "name": "684431bbbb01e535eaec678b7729d998010f75"
                },
                "72d20413ad255316f43625dcb5e42528c288d7": {
                    "name": "72d20413ad255316f43625dcb5e42528c288d7"
                },
                "13bf0e97fdc6642cd3c01af82a64aada2d4a5f": {
                    "name": "13bf0e97fdc6642cd3c01af82a64aada2d4a5f"
                }
            },
            "f7": {
                "28d97588c758fa380c7e7990098cb2f382584a": {
                    "name": "28d97588c758fa380c7e7990098cb2f382584a"
                },
                "e4f506be08c519e31c6ea9b9e27bf1885e8d6f": {
                    "name": "e4f506be08c519e31c6ea9b9e27bf1885e8d6f"
                },
                "94b1d3afab08bfa251ebebd551a13de3b1f670": {
                    "name": "94b1d3afab08bfa251ebebd551a13de3b1f670"
                },
                "f6760311e7e9360eb075ead9c1c9c88bc5de73": {
                    "name": "f6760311e7e9360eb075ead9c1c9c88bc5de73"
                },
                "2aa5bbf7c5b76c72675777e0fe749642bf6572": {
                    "name": "2aa5bbf7c5b76c72675777e0fe749642bf6572"
                },
                "f376654776fc7677d33d75a95122443d0c75e1": {
                    "name": "f376654776fc7677d33d75a95122443d0c75e1"
                },
                "6681d7dfa6ce51aca5edfdb49962451c45c90a": {
                    "name": "6681d7dfa6ce51aca5edfdb49962451c45c90a"
                }
            },
            "b4": {
                "3419d3e993c97236b4c7187bdcb56cd98d72ae": {
                    "name": "3419d3e993c97236b4c7187bdcb56cd98d72ae"
                },
                "8978177a283d230912d7ee6caa1e6bdaf366a8": {
                    "name": "8978177a283d230912d7ee6caa1e6bdaf366a8"
                },
                "5d42557779622f7b6e41748d1879e3307f9e71": {
                    "name": "5d42557779622f7b6e41748d1879e3307f9e71"
                }
            },
            "b0": {
                "e05ee56485a53086505962964b265442960151": {
                    "name": "e05ee56485a53086505962964b265442960151"
                }
            },
            "8c": {
                "1e09acc1f64305fdac18af6917c26940f26b32": {
                    "name": "1e09acc1f64305fdac18af6917c26940f26b32"
                },
                "e5037ba08cb47b1ea26fa374ff4d4ead67bcd1": {
                    "name": "e5037ba08cb47b1ea26fa374ff4d4ead67bcd1"
                },
                "cbb3a73e06743593f71cb2691fa9d620066c7d": {
                    "name": "cbb3a73e06743593f71cb2691fa9d620066c7d"
                },
                "b29b9f6cbd88411d3feeb79fa37228460f88f4": {
                    "name": "b29b9f6cbd88411d3feeb79fa37228460f88f4"
                },
                "f488943f165bf5ad758c87af8e3fae4d072380": {
                    "name": "f488943f165bf5ad758c87af8e3fae4d072380"
                }
            },
            "51": {
                "ea34cb56a38a3596e086c3a03c4daa05e85927": {
                    "name": "ea34cb56a38a3596e086c3a03c4daa05e85927"
                }
            },
            "66": {
                "f7e08212fbf14ed0c5e178a500b4239684c6bd": {
                    "name": "f7e08212fbf14ed0c5e178a500b4239684c6bd"
                }
            },
            "6b": {
                "0fc9e5f8c8442d657f5e9edd82a4f2a0a70af4": {
                    "name": "0fc9e5f8c8442d657f5e9edd82a4f2a0a70af4"
                },
                "12b56acc6d08aa9a51967b637b486b006ef1e5": {
                    "name": "12b56acc6d08aa9a51967b637b486b006ef1e5"
                },
                "7dc77cb298a38f8cc3d7769cf929834391b4b2": {
                    "name": "7dc77cb298a38f8cc3d7769cf929834391b4b2"
                },
                "eb5a448af3d893cf8e4d4dda9f4d96cd011785": {
                    "name": "eb5a448af3d893cf8e4d4dda9f4d96cd011785"
                },
                "517027cfd50a63453ddd0ee6119f827320d1d2": {
                    "name": "517027cfd50a63453ddd0ee6119f827320d1d2"
                },
                "dfe9f2edd3a2f574d406717638bfafdf679b6c": {
                    "name": "dfe9f2edd3a2f574d406717638bfafdf679b6c"
                },
                "e0d8976842442e3f85d7ff3217450389818aa4": {
                    "name": "e0d8976842442e3f85d7ff3217450389818aa4"
                },
                "6d1881388cca06fa2b5741dc86d534ed43dbcf": {
                    "name": "6d1881388cca06fa2b5741dc86d534ed43dbcf"
                }
            },
            "46": {
                "4343e557175d5b8f4725fd8009851e26943de8": {
                    "name": "4343e557175d5b8f4725fd8009851e26943de8"
                }
            },
            "48": {
                "c546cd1a2a60c5ed929ef77c9dd07141ec92f0": {
                    "name": "c546cd1a2a60c5ed929ef77c9dd07141ec92f0"
                },
                "2d27be8eb3444211b84049d38f5e4b60c30a00": {
                    "name": "2d27be8eb3444211b84049d38f5e4b60c30a00"
                },
                "15b8f5a37c30849626a38fac4a6cb6cb95b6e7": {
                    "name": "15b8f5a37c30849626a38fac4a6cb6cb95b6e7"
                },
                "dd21f937d501de392da9f012ab468d03250cae": {
                    "name": "dd21f937d501de392da9f012ab468d03250cae"
                }
            },
            "fb": {
                "c9ad42c43f85e39f0472133aa3fee2fd8045d4": {
                    "name": "c9ad42c43f85e39f0472133aa3fee2fd8045d4"
                },
                "b5a48d95c0095e0112fffd4abafa2d3966d0fa": {
                    "name": "b5a48d95c0095e0112fffd4abafa2d3966d0fa"
                },
                "9bc732624b6fa0a797d1db4512143ca3080037": {
                    "name": "9bc732624b6fa0a797d1db4512143ca3080037"
                }
            },
            "55": {
                "35c0cdadbdef9aefb03cd7caf36feb2d0ebda3": {
                    "name": "35c0cdadbdef9aefb03cd7caf36feb2d0ebda3"
                },
                "5bf1f1c057b84a76a09d495092981114bd0178": {
                    "name": "5bf1f1c057b84a76a09d495092981114bd0178"
                }
            },
            "7f": {
                "4d4d90ad77a2f954a201d06a23679c4bf31ed2": {
                    "name": "4d4d90ad77a2f954a201d06a23679c4bf31ed2"
                },
                "2068a9b0820622332077256f567e0b92a9a427": {
                    "name": "2068a9b0820622332077256f567e0b92a9a427"
                },
                "2c3d98ee422c3a00939fa65f582684fdc47081": {
                    "name": "2c3d98ee422c3a00939fa65f582684fdc47081"
                },
                "1ef826c941145975e30a4510b7b4ee325e91ca": {
                    "name": "1ef826c941145975e30a4510b7b4ee325e91ca"
                },
                "e40e0e93de9f930f55300309c7ab437c860114": {
                    "name": "e40e0e93de9f930f55300309c7ab437c860114"
                },
                "fa28723fb9a01db446829961814a089412c4f8": {
                    "name": "fa28723fb9a01db446829961814a089412c4f8"
                }
            },
            "86": {
                "8e6c645315c15bd4103f23f5eb04fb216c4e32": {
                    "name": "8e6c645315c15bd4103f23f5eb04fb216c4e32"
                },
                "336f62b34b1d6eda4ae180174274fe048bb76a": {
                    "name": "336f62b34b1d6eda4ae180174274fe048bb76a"
                },
                "db0190bdfb27cf0d2953e735fca01a6984b221": {
                    "name": "db0190bdfb27cf0d2953e735fca01a6984b221"
                },
                "bdc78b3858b3f8af8521b546b0d2342894f083": {
                    "name": "bdc78b3858b3f8af8521b546b0d2342894f083"
                }
            },
            "35": {
                "e0be6e1f677f44e4932cf72b70bfd80f23cc42": {
                    "name": "e0be6e1f677f44e4932cf72b70bfd80f23cc42"
                },
                "51ce9c90fce0b6cfa659dc24b1246cb483453f": {
                    "name": "51ce9c90fce0b6cfa659dc24b1246cb483453f"
                },
                "17015019f2edab2dce9a9bd0765ca0d5531751": {
                    "name": "17015019f2edab2dce9a9bd0765ca0d5531751"
                }
            },
            "8d": {
                "3bb5351b0304e93ed659a1ac413cc473fec644": {
                    "name": "3bb5351b0304e93ed659a1ac413cc473fec644"
                },
                "d5a8fd0da577e82879b1ae6c37fc45f7c0d282": {
                    "name": "d5a8fd0da577e82879b1ae6c37fc45f7c0d282"
                },
                "8f6399f1e0ab76ccd81f756dd026d112cf52e5": {
                    "name": "8f6399f1e0ab76ccd81f756dd026d112cf52e5"
                },
                "fe8823698006a02af7a9199be721402e8cdbd6": {
                    "name": "fe8823698006a02af7a9199be721402e8cdbd6"
                },
                "a4919d3c4611ec9550ba279d9fd6c3b9a814d4": {
                    "name": "a4919d3c4611ec9550ba279d9fd6c3b9a814d4"
                }
            },
            "df": {
                "e3a4c28a9354a0176662fa66ad9cb670891ad6": {
                    "name": "e3a4c28a9354a0176662fa66ad9cb670891ad6"
                },
                "59dd23a77a5980b9d58ba2a54cd6f190dc8cfa": {
                    "name": "59dd23a77a5980b9d58ba2a54cd6f190dc8cfa"
                },
                "7053aad53de152db0c4c7b51f0206ecdbd0aaa": {
                    "name": "7053aad53de152db0c4c7b51f0206ecdbd0aaa"
                },
                "5e8678c96af680719f2abee270ad97f8c79f3f": {
                    "name": "5e8678c96af680719f2abee270ad97f8c79f3f"
                },
                "e88d08e11e41dd1bae8ce422bff777744824f7": {
                    "name": "e88d08e11e41dd1bae8ce422bff777744824f7"
                },
                "e03a2513540ade67b1bea3b3cef0d0194c5b8d": {
                    "name": "e03a2513540ade67b1bea3b3cef0d0194c5b8d"
                }
            },
            "8b": {
                "f2b67fb2ce77c79d37184e910cea475ec1d92b": {
                    "name": "f2b67fb2ce77c79d37184e910cea475ec1d92b"
                },
                "3a61569a183d22da6d07debd815fa505222179": {
                    "name": "3a61569a183d22da6d07debd815fa505222179"
                },
                "28b68dfeaf0ed99a340cffe60b977f88317c49": {
                    "name": "28b68dfeaf0ed99a340cffe60b977f88317c49"
                },
                "a0acdbaa8fd9d7912b720784e0105ab9a1033d": {
                    "name": "a0acdbaa8fd9d7912b720784e0105ab9a1033d"
                }
            },
            "45": {
                "e4aacb032e7e435fa2791fda19246a7ff7b759": {
                    "name": "e4aacb032e7e435fa2791fda19246a7ff7b759"
                },
                "60ab4e167dd9361b7cc7b48a4ef1123df56b0c": {
                    "name": "60ab4e167dd9361b7cc7b48a4ef1123df56b0c"
                }
            },
            "07": {
                "7150f028793ccc405d142c787f1cc251beabb9": {
                    "name": "7150f028793ccc405d142c787f1cc251beabb9"
                },
                "5e52627845fc567f67589127c0dc8c52af9faa": {
                    "name": "5e52627845fc567f67589127c0dc8c52af9faa"
                },
                "cc5ff62b9e3114d23d6a48583c237915cf272d": {
                    "name": "cc5ff62b9e3114d23d6a48583c237915cf272d"
                }
            },
            "88": {
                "1fab6b2219bbe56c1bcfe71147ca0e553de749": {
                    "name": "1fab6b2219bbe56c1bcfe71147ca0e553de749"
                },
                "bc8c10206e7b53508d28a9bf1ab6f3c1a8672b": {
                    "name": "bc8c10206e7b53508d28a9bf1ab6f3c1a8672b"
                },
                "f70090481c83de4eb51d5d92fc36c00a05eda2": {
                    "name": "f70090481c83de4eb51d5d92fc36c00a05eda2"
                },
                "85e8d7f59582f930114405e90d487c8c548a55": {
                    "name": "85e8d7f59582f930114405e90d487c8c548a55"
                },
                "7332c09b35e6e52c23040fe0e6bd709ec8ec60": {
                    "name": "7332c09b35e6e52c23040fe0e6bd709ec8ec60"
                }
            },
            "15": {
                "e3b173f4333ca3f74b5bad9aedf530f175d6c1": {
                    "name": "e3b173f4333ca3f74b5bad9aedf530f175d6c1"
                },
                "1d414c0ea986795b37b16265f671c832c66f4a": {
                    "name": "1d414c0ea986795b37b16265f671c832c66f4a"
                },
                "fb187d3fd1a0972f27a04c20a26fc243131226": {
                    "name": "fb187d3fd1a0972f27a04c20a26fc243131226"
                },
                "75662be41b80319ee9b897f52b80e37f7f60da": {
                    "name": "75662be41b80319ee9b897f52b80e37f7f60da"
                }
            },
            "25": {
                "f6f9285d052a0ada0914f8d3f227029e282ed0": {
                    "name": "f6f9285d052a0ada0914f8d3f227029e282ed0"
                },
                "9d3b88f8d1ebc6489c768a9e0a2baf67975267": {
                    "name": "9d3b88f8d1ebc6489c768a9e0a2baf67975267"
                },
                "fa3524368023725c6b23ad4dd65982f66729ec": {
                    "name": "fa3524368023725c6b23ad4dd65982f66729ec"
                },
                "2df5bc5b360a1f4341183162a92da57e1451aa": {
                    "name": "2df5bc5b360a1f4341183162a92da57e1451aa"
                },
                "7f8dcd5464d456b8084fdbacbb9eebade0ceef": {
                    "name": "7f8dcd5464d456b8084fdbacbb9eebade0ceef"
                }
            },
            "1e": {
                "8eb0c53feb24548f121ea63e23b189a8d35650": {
                    "name": "8eb0c53feb24548f121ea63e23b189a8d35650"
                },
                "af44f8023d3d1a8f2c676d71f55bf44cf32bfb": {
                    "name": "af44f8023d3d1a8f2c676d71f55bf44cf32bfb"
                }
            },
            "b8": {
                "d43521cfa44808c2e19316b935be7803abfa4e": {
                    "name": "d43521cfa44808c2e19316b935be7803abfa4e"
                },
                "6f5acdf5e380764fb12067a0ba9ecd7bddb6f6": {
                    "name": "6f5acdf5e380764fb12067a0ba9ecd7bddb6f6"
                },
                "296c16034cb01515af29fec8d043dca14f52b3": {
                    "name": "296c16034cb01515af29fec8d043dca14f52b3"
                },
                "b6d859b28e769b5e5c151322c4bae3d6b8c492": {
                    "name": "b6d859b28e769b5e5c151322c4bae3d6b8c492"
                },
                "a31d857dc7508df4006d84a57f74144e04512a": {
                    "name": "a31d857dc7508df4006d84a57f74144e04512a"
                }
            },
            "29": {
                "645a501968c45dcf967346abe3f649b1e61cbd": {
                    "name": "645a501968c45dcf967346abe3f649b1e61cbd"
                },
                "b05cfd25c3f6124b2f7e1744f7710e94f9b23c": {
                    "name": "b05cfd25c3f6124b2f7e1744f7710e94f9b23c"
                },
                "b4c401d041683991ea056824e043f747691b48": {
                    "name": "b4c401d041683991ea056824e043f747691b48"
                },
                "d1ff2971290303e09a5bb7a64c1e6a0463eeff": {
                    "name": "d1ff2971290303e09a5bb7a64c1e6a0463eeff"
                },
                "4b9b6af3d7290db06fc820df906d1fb74a7e2f": {
                    "name": "4b9b6af3d7290db06fc820df906d1fb74a7e2f"
                }
            },
            "79": {
                "897a8b2330347fc61cf9e517fb189ed2962943": {
                    "name": "897a8b2330347fc61cf9e517fb189ed2962943"
                },
                "0337613d5f9b6daeb6261f023b1d22784415c9": {
                    "name": "0337613d5f9b6daeb6261f023b1d22784415c9"
                },
                "c1c6add65a022aa34b126de79b82d65c7f06c2": {
                    "name": "c1c6add65a022aa34b126de79b82d65c7f06c2"
                },
                "460a376cc1c40b7277940f9804c80f6a23a249": {
                    "name": "460a376cc1c40b7277940f9804c80f6a23a249"
                },
                "9938f46a412e1ab19f54c0c4b12ebb0fdf2811": {
                    "name": "9938f46a412e1ab19f54c0c4b12ebb0fdf2811"
                },
                "2daf15cd478edfa1bf82bc04a7c95efb2b4e23": {
                    "name": "2daf15cd478edfa1bf82bc04a7c95efb2b4e23"
                }
            },
            "81": {
                "b5d379299f32578c68ba52b75a425cc521de70": {
                    "name": "b5d379299f32578c68ba52b75a425cc521de70"
                },
                "a00882d31f7bc3122be1c696a59b05924b2f84": {
                    "name": "a00882d31f7bc3122be1c696a59b05924b2f84"
                },
                "abcca10cd72765dd1159fd96cb61d4b44a0251": {
                    "name": "abcca10cd72765dd1159fd96cb61d4b44a0251"
                },
                "de13ed595ddabef76828254e056b0e145c4b55": {
                    "name": "de13ed595ddabef76828254e056b0e145c4b55"
                }
            },
            "bb": {
                "9ca53f9d5607aa802dcc8b7f0d60bba7c9aa66": {
                    "name": "9ca53f9d5607aa802dcc8b7f0d60bba7c9aa66"
                },
                "b1d888cd3e7d7168f5958f27c83cdb262c8b17": {
                    "name": "b1d888cd3e7d7168f5958f27c83cdb262c8b17"
                },
                "fcbf58a95498eec191dbe7c693f940fc2d8b9b": {
                    "name": "fcbf58a95498eec191dbe7c693f940fc2d8b9b"
                },
                "22f7b7384ff3832b902e83df56a57e818e5225": {
                    "name": "22f7b7384ff3832b902e83df56a57e818e5225"
                },
                "01a6899f02306083d95680d9b3329d90074d73": {
                    "name": "01a6899f02306083d95680d9b3329d90074d73"
                }
            },
            "64": {
                "b1baeddd4ddbf2d2ac80bc84c55090aabf1f74": {
                    "name": "b1baeddd4ddbf2d2ac80bc84c55090aabf1f74"
                },
                "79475dd7780c4dac3957c1e1376d3fbb708a52": {
                    "name": "79475dd7780c4dac3957c1e1376d3fbb708a52"
                },
                "8516cf2fca0e70a1475df247f20e79a23c00e0": {
                    "name": "8516cf2fca0e70a1475df247f20e79a23c00e0"
                },
                "1359146d94ee2b95cd25d1fea5927f373b0f31": {
                    "name": "1359146d94ee2b95cd25d1fea5927f373b0f31"
                }
            },
            "24": {
                "a914b7240e9248e362bd65ee26acbed5fd01a1": {
                    "name": "a914b7240e9248e362bd65ee26acbed5fd01a1"
                },
                "60ad4677a47ae53714f729f7d1a53a9a11457d": {
                    "name": "60ad4677a47ae53714f729f7d1a53a9a11457d"
                },
                "b6bf984200557fbe8d9ccb336f90b740d3690b": {
                    "name": "b6bf984200557fbe8d9ccb336f90b740d3690b"
                },
                "8108f35ed0c699194d5b7cb09a6f6161a9a5c4": {
                    "name": "8108f35ed0c699194d5b7cb09a6f6161a9a5c4"
                },
                "5f99bb9ed67645b90cd61518959cdb61038d8f": {
                    "name": "5f99bb9ed67645b90cd61518959cdb61038d8f"
                },
                "79bd2ee47f6d15acc823b5b929513db6dcb681": {
                    "name": "79bd2ee47f6d15acc823b5b929513db6dcb681"
                },
                "efda30293796b2aaf145673f078612419cc985": {
                    "name": "efda30293796b2aaf145673f078612419cc985"
                }
            },
            "6a": {
                "ded8a1cd99b4d8a9fc8d9ceb6a0dd4be23ec3b": {
                    "name": "ded8a1cd99b4d8a9fc8d9ceb6a0dd4be23ec3b"
                },
                "e51457a512abb99d6148bd836a8e93570c29b5": {
                    "name": "e51457a512abb99d6148bd836a8e93570c29b5"
                },
                "3ab2d304def9a79f83a4f8cdcb9d3234193998": {
                    "name": "3ab2d304def9a79f83a4f8cdcb9d3234193998"
                },
                "4f9444115a6597c622e35ac4738cf1c66579ad": {
                    "name": "4f9444115a6597c622e35ac4738cf1c66579ad"
                },
                "32130cb5217a0b4dce77af929e320630003366": {
                    "name": "32130cb5217a0b4dce77af929e320630003366"
                }
            },
            "3b": {
                "799d1b4cbc69ad64a2550e8a2f57e172e6de7e": {
                    "name": "799d1b4cbc69ad64a2550e8a2f57e172e6de7e"
                },
                "42d378af5a693d8f0a5d75dbe7a02b3fc6f391": {
                    "name": "42d378af5a693d8f0a5d75dbe7a02b3fc6f391"
                }
            },
            "12": {
                "aa5810ecf2185429f0189a623b94c3fcac9fe5": {
                    "name": "aa5810ecf2185429f0189a623b94c3fcac9fe5"
                },
                "113296b422a2c1b4b0dfcb1d5a57afe013e52a": {
                    "name": "113296b422a2c1b4b0dfcb1d5a57afe013e52a"
                },
                "94822dacf7aa9405a013e4351def1eab048aa9": {
                    "name": "94822dacf7aa9405a013e4351def1eab048aa9"
                },
                "7bc0a80bbde53b85c764f4c155dd1e825ee4bd": {
                    "name": "7bc0a80bbde53b85c764f4c155dd1e825ee4bd"
                },
                "1a31905bebbd146ea086fe5d083777e8ca43ca": {
                    "name": "1a31905bebbd146ea086fe5d083777e8ca43ca"
                }
            },
            "bc": {
                "0d523c200001a5ccc9b08587c3a54d9a8b6e19": {
                    "name": "0d523c200001a5ccc9b08587c3a54d9a8b6e19"
                },
                "835ed4d10c084b5493dc8dc64107206f9265f0": {
                    "name": "835ed4d10c084b5493dc8dc64107206f9265f0"
                },
                "820877869a272eccf9e076966271a6a9606761": {
                    "name": "820877869a272eccf9e076966271a6a9606761"
                },
                "7c6142c0a685383398d923fa51c9398ae1a81b": {
                    "name": "7c6142c0a685383398d923fa51c9398ae1a81b"
                }
            },
            "f2": {
                "507722e5521949f338c136c10b71ec921f5b63": {
                    "name": "507722e5521949f338c136c10b71ec921f5b63"
                },
                "d1e615bf5267a29b87152eb48f59b4899545ae": {
                    "name": "d1e615bf5267a29b87152eb48f59b4899545ae"
                },
                "16288c672a011688ff66175e6bfd40348e07fb": {
                    "name": "16288c672a011688ff66175e6bfd40348e07fb"
                }
            },
            "ed": {
                "db8a23febd049ebcb6950783fcdfd619d7ff87": {
                    "name": "db8a23febd049ebcb6950783fcdfd619d7ff87"
                },
                "29b88ca6eb23da3c2f5b196bd3fe7e453d1afe": {
                    "name": "29b88ca6eb23da3c2f5b196bd3fe7e453d1afe"
                },
                "c22e8da4cf5a5c4dac284ec35a0090d1a4c2f5": {
                    "name": "c22e8da4cf5a5c4dac284ec35a0090d1a4c2f5"
                },
                "6120de3fc66d02a31f6d01dc3e8ffc1705f7a4": {
                    "name": "6120de3fc66d02a31f6d01dc3e8ffc1705f7a4"
                },
                "2c0d0dd48a2dec863c13949683b630c227a330": {
                    "name": "2c0d0dd48a2dec863c13949683b630c227a330"
                },
                "817b1607080beaa2728d89cde2903de94fb0c7": {
                    "name": "817b1607080beaa2728d89cde2903de94fb0c7"
                }
            },
            "pack": {
                "pack-942a49278f91a02c8f6f083061250ad1e8e86b71.idx": {
                    "name": "pack-942a49278f91a02c8f6f083061250ad1e8e86b71.idx"
                },
                "pack-942a49278f91a02c8f6f083061250ad1e8e86b71.pack": {
                    "name": "pack-942a49278f91a02c8f6f083061250ad1e8e86b71.pack"
                },
                "pack-c40e0248c86138b2b848f8391d090fd29ded0fa0.idx": {
                    "name": "pack-c40e0248c86138b2b848f8391d090fd29ded0fa0.idx"
                },
                "pack-c40e0248c86138b2b848f8391d090fd29ded0fa0.pack": {
                    "name": "pack-c40e0248c86138b2b848f8391d090fd29ded0fa0.pack"
                },
                "pack-e5ac14f87710270fe88b06349c72e844d64902f7.idx": {
                    "name": "pack-e5ac14f87710270fe88b06349c72e844d64902f7.idx"
                },
                "pack-e5ac14f87710270fe88b06349c72e844d64902f7.pack": {
                    "name": "pack-e5ac14f87710270fe88b06349c72e844d64902f7.pack"
                },
                "pack-9dff391cbe89d357b7a61ac10746635fda52c15c.pack": {
                    "name": "pack-9dff391cbe89d357b7a61ac10746635fda52c15c.pack"
                },
                "pack-9dff391cbe89d357b7a61ac10746635fda52c15c.idx": {
                    "name": "pack-9dff391cbe89d357b7a61ac10746635fda52c15c.idx"
                }
            },
            "39": {
                "b8d3ba83bb772bb876619d577194c371fa1530": {
                    "name": "b8d3ba83bb772bb876619d577194c371fa1530"
                },
                "a7453b62df05729d24108132dd3d8799cb6a78": {
                    "name": "a7453b62df05729d24108132dd3d8799cb6a78"
                }
            },
            "2a": {
                "616620d103e2d2d68add0ce73e96091984f854": {
                    "name": "616620d103e2d2d68add0ce73e96091984f854"
                },
                "2404bd5aeda5ae85be650f0ba439e8663fe2cc": {
                    "name": "2404bd5aeda5ae85be650f0ba439e8663fe2cc"
                }
            },
            "fe": {
                "da27c8b1184fd55750288e65c8e39763172885": {
                    "name": "da27c8b1184fd55750288e65c8e39763172885"
                },
                "e5afd3953d8ba93b1f687c42e1a00a814dbe72": {
                    "name": "e5afd3953d8ba93b1f687c42e1a00a814dbe72"
                },
                "ef6c03f91d382b7015fb15e092faee07d97837": {
                    "name": "ef6c03f91d382b7015fb15e092faee07d97837"
                },
                "adcf41e9bbe661c87deca134eb07895d8d4c4b": {
                    "name": "adcf41e9bbe661c87deca134eb07895d8d4c4b"
                },
                "90cf116e7a6259c5ad70af89e00f76923205e4": {
                    "name": "90cf116e7a6259c5ad70af89e00f76923205e4"
                },
                "f72204732cbecf3618effe899df64fd18f25fa": {
                    "name": "f72204732cbecf3618effe899df64fd18f25fa"
                },
                "61da62288e7b0b9eac18e58b141c4e17ac62d3": {
                    "name": "61da62288e7b0b9eac18e58b141c4e17ac62d3"
                }
            },
            "ce": {
                "ff307e5690184705494ce2a9f154b3437c1e46": {
                    "name": "ff307e5690184705494ce2a9f154b3437c1e46"
                }
            },
            "14": {
                "879861699d35a68597e6b6943d1adbecf363bc": {
                    "name": "879861699d35a68597e6b6943d1adbecf363bc"
                },
                "f9f079a5c43284f8fc177bf019874afee38e5f": {
                    "name": "f9f079a5c43284f8fc177bf019874afee38e5f"
                },
                "0a7d1f5f676b7c91463ff11add13e692201214": {
                    "name": "0a7d1f5f676b7c91463ff11add13e692201214"
                }
            },
            "cf": {
                "486a589abf00f1a68b9df160a69a14830bc55a": {
                    "name": "486a589abf00f1a68b9df160a69a14830bc55a"
                },
                "0cce7319a07984f018e5ee3f174779cdc7ca81": {
                    "name": "0cce7319a07984f018e5ee3f174779cdc7ca81"
                },
                "1c5ed734cb46aad407f551edea22a3c891b6b8": {
                    "name": "1c5ed734cb46aad407f551edea22a3c891b6b8"
                },
                "445e2f631e54cc5e4cb0949508a57a605a4b43": {
                    "name": "445e2f631e54cc5e4cb0949508a57a605a4b43"
                },
                "73834f545f34a690ca2f860036e54f04ae29f6": {
                    "name": "73834f545f34a690ca2f860036e54f04ae29f6"
                }
            },
            "28": {
                "53cd715fb06fa80c24f92daade03a76db6cb87": {
                    "name": "53cd715fb06fa80c24f92daade03a76db6cb87"
                },
                "f8c50369512ec65ce0e90881e933e847dbebb4": {
                    "name": "f8c50369512ec65ce0e90881e933e847dbebb4"
                }
            },
            "89": {
                "d8f67021dd8f0ebc59bcee65b16850938ed76a": {
                    "name": "d8f67021dd8f0ebc59bcee65b16850938ed76a"
                },
                "0a0c7232cab2a979fe824df426f6da4ad22d93": {
                    "name": "0a0c7232cab2a979fe824df426f6da4ad22d93"
                }
            },
            "02": {
                "91de3f79a7075eeb3651cd47935da4a50b68c6": {
                    "name": "91de3f79a7075eeb3651cd47935da4a50b68c6"
                },
                "efb2358fca3fe39d5c0ba8e5108f23e539800b": {
                    "name": "efb2358fca3fe39d5c0ba8e5108f23e539800b"
                },
                "9f5f735740c72bfc52f37e5b6ecd482a9704c9": {
                    "name": "9f5f735740c72bfc52f37e5b6ecd482a9704c9"
                },
                "6642492318273e91e86bc88e53214621cbab4f": {
                    "name": "6642492318273e91e86bc88e53214621cbab4f"
                }
            },
            "37": {
                "1b6202af65593c5f348f3045c75673759e7d02": {
                    "name": "1b6202af65593c5f348f3045c75673759e7d02"
                },
                "4b46cc321b459e3b326ece4807fcdc2228de2f": {
                    "name": "4b46cc321b459e3b326ece4807fcdc2228de2f"
                },
                "df9d9dffecbf5a7f91b7cca85a00c40809dc0e": {
                    "name": "df9d9dffecbf5a7f91b7cca85a00c40809dc0e"
                },
                "491e819120d5c6435e38ab89d46494d68dbb3a": {
                    "name": "491e819120d5c6435e38ab89d46494d68dbb3a"
                }
            },
            "56": {
                "33d2836282ba16b784faefd44374b66cf4ab4a": {
                    "name": "33d2836282ba16b784faefd44374b66cf4ab4a"
                },
                "98cfd8e79a57428f69de1e9e4587ede8f85b19": {
                    "name": "98cfd8e79a57428f69de1e9e4587ede8f85b19"
                },
                "0431b5998942349cb620444c7b5fab152de537": {
                    "name": "0431b5998942349cb620444c7b5fab152de537"
                },
                "803efd19d9c1ecefce80c886a01bb4cbed6fb2": {
                    "name": "803efd19d9c1ecefce80c886a01bb4cbed6fb2"
                },
                "0e48b9c173b0203ea4165ee41e77cbd09fd13a": {
                    "name": "0e48b9c173b0203ea4165ee41e77cbd09fd13a"
                },
                "419ef07daa1dab53f3df8eed7746824ae4c844": {
                    "name": "419ef07daa1dab53f3df8eed7746824ae4c844"
                }
            },
            "a9": {
                "13421e12334d831f52902c84c105d94b97c794": {
                    "name": "13421e12334d831f52902c84c105d94b97c794"
                },
                "ada8c0d44585e81ace658c1bee522c7888e547": {
                    "name": "ada8c0d44585e81ace658c1bee522c7888e547"
                },
                "70628bd06e35c3fdd7b023116011f102022015": {
                    "name": "70628bd06e35c3fdd7b023116011f102022015"
                },
                "68d31b7c99b9b47f5e6e216d8362d9de7f7a9b": {
                    "name": "68d31b7c99b9b47f5e6e216d8362d9de7f7a9b"
                },
                "32e8fbb4321b7d51993e91e6d190320cc8583f": {
                    "name": "32e8fbb4321b7d51993e91e6d190320cc8583f"
                },
                "8887ef58bde5f285ccc90e60da55e74fc83ee8": {
                    "name": "8887ef58bde5f285ccc90e60da55e74fc83ee8"
                }
            },
            "9c": {
                "59e07e48aef447f36e5796aadff76bd8024ee9": {
                    "name": "59e07e48aef447f36e5796aadff76bd8024ee9"
                },
                "01bb1fcb79a938d9e5553321cb92f67446ea46": {
                    "name": "01bb1fcb79a938d9e5553321cb92f67446ea46"
                },
                "7045fece7ced3ea10fc1a49dc07cc0db7cc974": {
                    "name": "7045fece7ced3ea10fc1a49dc07cc0db7cc974"
                }
            },
            "3c": {
                "a5f343c0602da7a2678dab252d13d40df2e752": {
                    "name": "a5f343c0602da7a2678dab252d13d40df2e752"
                },
                "465ac1a2df406b824919a70d97731caf47ef9f": {
                    "name": "465ac1a2df406b824919a70d97731caf47ef9f"
                },
                "7d1614c0f2dcc4ce7af735ea8e9590ac90184c": {
                    "name": "7d1614c0f2dcc4ce7af735ea8e9590ac90184c"
                },
                "f1c6676035c0b1e4c1d8de18a216d762bad436": {
                    "name": "f1c6676035c0b1e4c1d8de18a216d762bad436"
                },
                "8d8955902282ac0fa235760a8118bfd98db093": {
                    "name": "8d8955902282ac0fa235760a8118bfd98db093"
                }
            },
            "5c": {
                "015b745a64364c4a5c1c76022f2026611de53f": {
                    "name": "015b745a64364c4a5c1c76022f2026611de53f"
                },
                "2ccd9aa73a01e83260b477b621494fd6382cd6": {
                    "name": "2ccd9aa73a01e83260b477b621494fd6382cd6"
                },
                "3c720e6a840011b52192719e9b0ec3c6047d6e": {
                    "name": "3c720e6a840011b52192719e9b0ec3c6047d6e"
                },
                "971565ec28d8607e876b346653e77b436074ec": {
                    "name": "971565ec28d8607e876b346653e77b436074ec"
                },
                "fce932423bd9387c729379e3b2a5cd658dbace": {
                    "name": "fce932423bd9387c729379e3b2a5cd658dbace"
                },
                "8c05009fd8a5e95a4122584ce729bdf0f5bea6": {
                    "name": "8c05009fd8a5e95a4122584ce729bdf0f5bea6"
                }
            },
            "db": {
                "2b1bd4f4fcd541a2d6bad792b1a74adf5be6a1": {
                    "name": "2b1bd4f4fcd541a2d6bad792b1a74adf5be6a1"
                },
                "dd1165e5a22724d04dbd9b62d209c9236fd1da": {
                    "name": "dd1165e5a22724d04dbd9b62d209c9236fd1da"
                }
            },
            "9b": {
                "1158eded62bf9dd3c8bf9d75b3dc6a560ec645": {
                    "name": "1158eded62bf9dd3c8bf9d75b3dc6a560ec645"
                },
                "da3485a44ddc78e93cc67e3dadc94496bfdd6c": {
                    "name": "da3485a44ddc78e93cc67e3dadc94496bfdd6c"
                }
            },
            "f8": {
                "ee45388369c5a930aac445099407c93f13eb84": {
                    "name": "ee45388369c5a930aac445099407c93f13eb84"
                },
                "fad1542a660eb27a59df63fb0459bbf8b968ff": {
                    "name": "fad1542a660eb27a59df63fb0459bbf8b968ff"
                }
            },
            "61": {
                "1dc92fea75010bcc146487a1cdda23fd408819": {
                    "name": "1dc92fea75010bcc146487a1cdda23fd408819"
                },
                "98e1c4b9484dcb5cf392ebe83e7559aacc5ed0": {
                    "name": "98e1c4b9484dcb5cf392ebe83e7559aacc5ed0"
                },
                "a3a31f0021049c4d50f7423826647d3b295586": {
                    "name": "a3a31f0021049c4d50f7423826647d3b295586"
                },
                "d8e340fd0920eb90c96665f1d5092ee3149186": {
                    "name": "d8e340fd0920eb90c96665f1d5092ee3149186"
                },
                "4c46e69cdb47b50166565af09c001bb7e1e095": {
                    "name": "4c46e69cdb47b50166565af09c001bb7e1e095"
                }
            },
            "8f": {
                "9809bcc1c5a82c89a488868e49c276ee413791": {
                    "name": "9809bcc1c5a82c89a488868e49c276ee413791"
                },
                "20d0a41686a67cd6941038b8543aaca092fb57": {
                    "name": "20d0a41686a67cd6941038b8543aaca092fb57"
                },
                "6d5890c5e9f6301d4422acb17900e24002c892": {
                    "name": "6d5890c5e9f6301d4422acb17900e24002c892"
                },
                "408fcaae0b9dc6ce660fb945ed9a072227f42f": {
                    "name": "408fcaae0b9dc6ce660fb945ed9a072227f42f"
                }
            },
            "ff": {
                "8200e75bb05603e0d8e9b4644d01354e1e653c": {
                    "name": "8200e75bb05603e0d8e9b4644d01354e1e653c"
                },
                "e9971d1705c30fe783c6d365a0ddbbdf68e5d2": {
                    "name": "e9971d1705c30fe783c6d365a0ddbbdf68e5d2"
                },
                "19736ba00cfc221c1ec6eef611bf93597ac1a1": {
                    "name": "19736ba00cfc221c1ec6eef611bf93597ac1a1"
                },
                "bd787b184f75c25203f9f81441a356d00beef1": {
                    "name": "bd787b184f75c25203f9f81441a356d00beef1"
                }
            },
            "42": {
                "152d236785e6a8aacc6394db01e3dc7fa183e7": {
                    "name": "152d236785e6a8aacc6394db01e3dc7fa183e7"
                },
                "0ba68f1ff9dd553565691ac5aa21f4a659496c": {
                    "name": "0ba68f1ff9dd553565691ac5aa21f4a659496c"
                },
                "ad4688d2d311e6556294b373babe4da79b8d9d": {
                    "name": "ad4688d2d311e6556294b373babe4da79b8d9d"
                },
                "cec8c837b9d9661370c33be9d9317f6a0914d2": {
                    "name": "cec8c837b9d9661370c33be9d9317f6a0914d2"
                }
            },
            "d0": {
                "1b595b9e37b06e219c6f69e567dbc464e276a2": {
                    "name": "1b595b9e37b06e219c6f69e567dbc464e276a2"
                },
                "2d21105d2a9901945efe05d9b27745e0d59fc9": {
                    "name": "2d21105d2a9901945efe05d9b27745e0d59fc9"
                },
                "0d68dbb663ac21199d9200baa9297ef0f89f94": {
                    "name": "0d68dbb663ac21199d9200baa9297ef0f89f94"
                }
            },
            "da": {
                "ed14b939c20a6f15c323120154c095ceea3725": {
                    "name": "ed14b939c20a6f15c323120154c095ceea3725"
                },
                "5f50ded0ffc6d862f5a2fc87dfe693bb1fc3ab": {
                    "name": "5f50ded0ffc6d862f5a2fc87dfe693bb1fc3ab"
                }
            },
            "33": {
                "602db67a7f20a1e3d5a6e7d44e448a33252939": {
                    "name": "602db67a7f20a1e3d5a6e7d44e448a33252939"
                },
                "b151f6df341a88fb6623b408cdba9468daecfa": {
                    "name": "b151f6df341a88fb6623b408cdba9468daecfa"
                },
                "23f2663517a3a03c12ef696f7f0ab5c2a3cad5": {
                    "name": "23f2663517a3a03c12ef696f7f0ab5c2a3cad5"
                }
            },
            "fd": {
                "72bf0f07fb899269069c4109b6f1e7c00abf12": {
                    "name": "72bf0f07fb899269069c4109b6f1e7c00abf12"
                },
                "6816369345121185589c001fd553dfbb86a982": {
                    "name": "6816369345121185589c001fd553dfbb86a982"
                },
                "d0959a57492d042c7669d42fa1983a63486036": {
                    "name": "d0959a57492d042c7669d42fa1983a63486036"
                },
                "d66925351bc1d0cdd8af532b773b1385e51c09": {
                    "name": "d66925351bc1d0cdd8af532b773b1385e51c09"
                },
                "30f504f3091a6c1af0ad525a75dd0aed75c1fd": {
                    "name": "30f504f3091a6c1af0ad525a75dd0aed75c1fd"
                },
                "e1a815f6aa93d9644af58c1413e90affa2d870": {
                    "name": "e1a815f6aa93d9644af58c1413e90affa2d870"
                }
            },
            "0b": {
                "e905a2c93ef5306a51f6e9e93366eaed0dc2b9": {
                    "name": "e905a2c93ef5306a51f6e9e93366eaed0dc2b9"
                },
                "b8864788d966ecff1d2eff4591e83e922aee36": {
                    "name": "b8864788d966ecff1d2eff4591e83e922aee36"
                },
                "adc54c2c46eff15d4b979c2f499a3352e92e38": {
                    "name": "adc54c2c46eff15d4b979c2f499a3352e92e38"
                },
                "88dea87b1505cbb65a8550177afaede4417ae1": {
                    "name": "88dea87b1505cbb65a8550177afaede4417ae1"
                }
            },
            "40": {
                "be6e68949d6fe6dc783cefaf7c1737d703b108": {
                    "name": "be6e68949d6fe6dc783cefaf7c1737d703b108"
                },
                "0f516a0af4f85c337c0ef0e298676f47c224df": {
                    "name": "0f516a0af4f85c337c0ef0e298676f47c224df"
                },
                "28e846d0f2af16fb3c2a11780e68be082eb820": {
                    "name": "28e846d0f2af16fb3c2a11780e68be082eb820"
                },
                "42ac220d1ce6325da09584a3bd7dd0e9184ed1": {
                    "name": "42ac220d1ce6325da09584a3bd7dd0e9184ed1"
                },
                "cdbca4edbbe27e3eda9a6c5fc5fcf7f98e743f": {
                    "name": "cdbca4edbbe27e3eda9a6c5fc5fcf7f98e743f"
                }
            },
            "58": {
                "79bdb001f9fff9c3c087bf96acd10acbbad7cf": {
                    "name": "79bdb001f9fff9c3c087bf96acd10acbbad7cf"
                }
            },
            "00": {
                "fa62851a602a35322fa87ab5fe31ba1c47a18a": {
                    "name": "fa62851a602a35322fa87ab5fe31ba1c47a18a"
                },
                "4a544da5e3bcc20552ae71ece0d6a8cd961957": {
                    "name": "4a544da5e3bcc20552ae71ece0d6a8cd961957"
                }
            },
            "2e": {
                "5c65bae9042a566ad19e4c1ec1b6d7872e2c2d": {
                    "name": "5c65bae9042a566ad19e4c1ec1b6d7872e2c2d"
                },
                "3d8270d1c153ed2bdee75fe260936d9a80688e": {
                    "name": "3d8270d1c153ed2bdee75fe260936d9a80688e"
                },
                "345010ef825fc635988bf966fd22f517290ea2": {
                    "name": "345010ef825fc635988bf966fd22f517290ea2"
                }
            },
            "36": {
                "313808f443e8a55da3842e75980cba9508c54d": {
                    "name": "313808f443e8a55da3842e75980cba9508c54d"
                },
                "98e965571804e0f3513db75636f4056d3ef42e": {
                    "name": "98e965571804e0f3513db75636f4056d3ef42e"
                },
                "0c020571c13a2a68dd4f61c406555b4e59b7b2": {
                    "name": "0c020571c13a2a68dd4f61c406555b4e59b7b2"
                },
                "9dc2f6f759777ff9c457d39cef53c7fed0224e": {
                    "name": "9dc2f6f759777ff9c457d39cef53c7fed0224e"
                },
                "c787970d2df0ebb2028a28498a2e17d919d4dd": {
                    "name": "c787970d2df0ebb2028a28498a2e17d919d4dd"
                }
            },
            "77": {
                "9bddfbc819c8605f4ee122ef5b8efa19ddddb2": {
                    "name": "9bddfbc819c8605f4ee122ef5b8efa19ddddb2"
                },
                "3d71f023966eac1d99ed2d6097400bd0aba1a7": {
                    "name": "3d71f023966eac1d99ed2d6097400bd0aba1a7"
                },
                "8a5cddcec8e6004d538fb02c0c313a8e020701": {
                    "name": "8a5cddcec8e6004d538fb02c0c313a8e020701"
                },
                "38137c9bd6bbb9a777d991be43cc953eb47e06": {
                    "name": "38137c9bd6bbb9a777d991be43cc953eb47e06"
                }
            },
            "3d": {
                "4e49e0cf99ba766e169c1ef8c0451a746c26fd": {
                    "name": "4e49e0cf99ba766e169c1ef8c0451a746c26fd"
                },
                "45ca4bb945881983ec2307ed47039b8df03160": {
                    "name": "45ca4bb945881983ec2307ed47039b8df03160"
                },
                "cf96a62b8592edef5a34271fe040bee3c4edef": {
                    "name": "cf96a62b8592edef5a34271fe040bee3c4edef"
                },
                "8409babb4b6227b9d383e6748bd4cb61eabd12": {
                    "name": "8409babb4b6227b9d383e6748bd4cb61eabd12"
                }
            },
            "4f": {
                "27acb633b230ac2f0e08612dde206f6991be8f": {
                    "name": "27acb633b230ac2f0e08612dde206f6991be8f"
                },
                "f90771a5eb113b6aaf8f49e98a3096f57be38d": {
                    "name": "f90771a5eb113b6aaf8f49e98a3096f57be38d"
                },
                "56e7e00b62e0842f64ffac382219c9c1eed712": {
                    "name": "56e7e00b62e0842f64ffac382219c9c1eed712"
                },
                "63a9be4d3fb59aa98759569c46718e0ba6b485": {
                    "name": "63a9be4d3fb59aa98759569c46718e0ba6b485"
                }
            },
            "d5": {
                "b94b94091895849df371f4ebe1ce36f66dbf03": {
                    "name": "b94b94091895849df371f4ebe1ce36f66dbf03"
                },
                "97d80203b4285af9d9d746aa91d442198b1822": {
                    "name": "97d80203b4285af9d9d746aa91d442198b1822"
                }
            },
            "e1": {
                "3ba9fd95f8fbf7c1e862dc81d88ce8434c7705": {
                    "name": "3ba9fd95f8fbf7c1e862dc81d88ce8434c7705"
                },
                "90e279dde72dc0d4bfc83af6628a850683e12c": {
                    "name": "90e279dde72dc0d4bfc83af6628a850683e12c"
                }
            },
            "76": {
                "9bd33e6a25578bd0251c413ae79247c9970048": {
                    "name": "9bd33e6a25578bd0251c413ae79247c9970048"
                },
                "6376278618eb064eb44a2a11983176bfff0873": {
                    "name": "6376278618eb064eb44a2a11983176bfff0873"
                },
                "dccef8008cdadefee4b47d2927c5e68bf7e577": {
                    "name": "dccef8008cdadefee4b47d2927c5e68bf7e577"
                },
                "d9b98c2f12e76a50bcbe4a7022d8de26b38909": {
                    "name": "d9b98c2f12e76a50bcbe4a7022d8de26b38909"
                },
                "36e9b366334221634a32fa63c33c8272346952": {
                    "name": "36e9b366334221634a32fa63c33c8272346952"
                }
            },
            "f0": {
                "0096fa324df5c53b7e6bcb5299e8bf6cadc83d": {
                    "name": "0096fa324df5c53b7e6bcb5299e8bf6cadc83d"
                }
            },
            "9e": {
                "75d84c49368785935946c3872c1817aa3af5e1": {
                    "name": "75d84c49368785935946c3872c1817aa3af5e1"
                },
                "cbe2737b42aab110b68b5f87e31c7a6064c568": {
                    "name": "cbe2737b42aab110b68b5f87e31c7a6064c568"
                },
                "a07e8a5a1f1aa3f19eac92094b40ac2ba32a8d": {
                    "name": "a07e8a5a1f1aa3f19eac92094b40ac2ba32a8d"
                },
                "b5ae724049c522bd4543b7681b275582f0a123": {
                    "name": "b5ae724049c522bd4543b7681b275582f0a123"
                }
            },
            "a4": {
                "8fb401cd21ce90687019383cd0ca001f1fe864": {
                    "name": "8fb401cd21ce90687019383cd0ca001f1fe864"
                },
                "337794fd71c9793589f4294244725b9911ff2b": {
                    "name": "337794fd71c9793589f4294244725b9911ff2b"
                },
                "49a25a2220ae56a1531875687dd9215f5de3cf": {
                    "name": "49a25a2220ae56a1531875687dd9215f5de3cf"
                },
                "fd4b957af39f9103cb3e28e1d17f640ca160d5": {
                    "name": "fd4b957af39f9103cb3e28e1d17f640ca160d5"
                }
            },
            "05": {
                "917e1dda09b76e511ea47695cd2666b3617bcf": {
                    "name": "917e1dda09b76e511ea47695cd2666b3617bcf"
                },
                "fd1fea94c9b4557c53c3fd3fd1c9e6f0f4ba71": {
                    "name": "fd1fea94c9b4557c53c3fd3fd1c9e6f0f4ba71"
                },
                "ced30c292bf5fb6d39b6d0195af70d8aac8bb3": {
                    "name": "ced30c292bf5fb6d39b6d0195af70d8aac8bb3"
                },
                "cb5c78a1fec6bac701c3013d98111632b7c6ba": {
                    "name": "cb5c78a1fec6bac701c3013d98111632b7c6ba"
                },
                "ecf1bd498a658173520db4a0c449b252e2a014": {
                    "name": "ecf1bd498a658173520db4a0c449b252e2a014"
                },
                "65ea2ce0aeaab93cc0e173273fd6b5b4d3843f": {
                    "name": "65ea2ce0aeaab93cc0e173273fd6b5b4d3843f"
                }
            },
            "8a": {
                "a14c0dc89ea12a0243ef81d55c9e1c5adcc18e": {
                    "name": "a14c0dc89ea12a0243ef81d55c9e1c5adcc18e"
                },
                "c534fb347bfb7363923f3926c5acc7b6f437b7": {
                    "name": "c534fb347bfb7363923f3926c5acc7b6f437b7"
                },
                "1b3c5daa6b443a960dcf977f81a918537f0e72": {
                    "name": "1b3c5daa6b443a960dcf977f81a918537f0e72"
                }
            },
            "cd": {
                "034671b0032c540405da4f88c3206655899650": {
                    "name": "034671b0032c540405da4f88c3206655899650"
                },
                "d27aebb76382f17d63c637c2642b806e38ec3a": {
                    "name": "d27aebb76382f17d63c637c2642b806e38ec3a"
                },
                "0a764fc5e0c9af3df7ace3e0dc3419ba7ff1d7": {
                    "name": "0a764fc5e0c9af3df7ace3e0dc3419ba7ff1d7"
                }
            },
            "b5": {
                "6abfcfd38206a9327c65351f713be1dab25a24": {
                    "name": "6abfcfd38206a9327c65351f713be1dab25a24"
                }
            },
            "4e": {
                "45c3f3b2a1a26e47a288bc9d738084acf36ba8": {
                    "name": "45c3f3b2a1a26e47a288bc9d738084acf36ba8"
                },
                "94765e48212f0ef630079be022a373378c7b52": {
                    "name": "94765e48212f0ef630079be022a373378c7b52"
                },
                "e27f2c42fd59fc31eb9630ba0c16b1d41160a2": {
                    "name": "e27f2c42fd59fc31eb9630ba0c16b1d41160a2"
                }
            },
            "57": {
                "cc3b24d06f23ffe2c8eb801f19c7a783ae1c0a": {
                    "name": "cc3b24d06f23ffe2c8eb801f19c7a783ae1c0a"
                },
                "aaf54a6fe587f2e330f543dcba4aef18e2cb27": {
                    "name": "aaf54a6fe587f2e330f543dcba4aef18e2cb27"
                },
                "5052a0492bf5ec19b5eb00ae8d6f808d210bc7": {
                    "name": "5052a0492bf5ec19b5eb00ae8d6f808d210bc7"
                },
                "0c20a38a7e20de0ffcb3858cbbbf2fffde6682": {
                    "name": "0c20a38a7e20de0ffcb3858cbbbf2fffde6682"
                }
            },
            "1f": {
                "2400e5a1d4eff7d9070d68a1d0fb57e0ffe1a9": {
                    "name": "2400e5a1d4eff7d9070d68a1d0fb57e0ffe1a9"
                }
            },
            "9f": {
                "9d70b64361f7d0a46884f94eafb95605acce16": {
                    "name": "9d70b64361f7d0a46884f94eafb95605acce16"
                },
                "d3a27ae174257c8d6ce3ad9375e0271ccca426": {
                    "name": "d3a27ae174257c8d6ce3ad9375e0271ccca426"
                },
                "073755ec8adc254a545efde61159024906efe0": {
                    "name": "073755ec8adc254a545efde61159024906efe0"
                },
                "97191d760e635b641bdc994b8748802e72636f": {
                    "name": "97191d760e635b641bdc994b8748802e72636f"
                },
                "b2c8b59195bdb1078c9a72931838d98e38b43e": {
                    "name": "b2c8b59195bdb1078c9a72931838d98e38b43e"
                },
                "47de5c32cf899e2206cf6d26f4ab31df8919ee": {
                    "name": "47de5c32cf899e2206cf6d26f4ab31df8919ee"
                }
            },
            "71": {
                "a7e0c81384e7f1a9c01f225d64785aba22dbae": {
                    "name": "a7e0c81384e7f1a9c01f225d64785aba22dbae"
                },
                "d85ec55a11b57e199e047d4209ca05d4193b7a": {
                    "name": "d85ec55a11b57e199e047d4209ca05d4193b7a"
                },
                "b9bdeb403cc9a4c2cb44a21aa7733d4e353fa2": {
                    "name": "b9bdeb403cc9a4c2cb44a21aa7733d4e353fa2"
                },
                "64524df360e24281121292ba2cb138211dda59": {
                    "name": "64524df360e24281121292ba2cb138211dda59"
                },
                "2eaa5f5836e5b5598451520126adfd72506294": {
                    "name": "2eaa5f5836e5b5598451520126adfd72506294"
                }
            },
            "2d": {
                "ce0105010c360e24ed0bdb3b82058a3bc15921": {
                    "name": "ce0105010c360e24ed0bdb3b82058a3bc15921"
                },
                "50ad3d0fb343b70961f7eef189a2e1c11e37a7": {
                    "name": "50ad3d0fb343b70961f7eef189a2e1c11e37a7"
                },
                "fbe5c03884cdc427666fab83885630ddb8f053": {
                    "name": "fbe5c03884cdc427666fab83885630ddb8f053"
                }
            },
            "9a": {
                "98aa73bc5717c35aa01dbca03b8e4107ef1f12": {
                    "name": "98aa73bc5717c35aa01dbca03b8e4107ef1f12"
                },
                "3c404e3a0139fb60f137949759815a8a75a444": {
                    "name": "3c404e3a0139fb60f137949759815a8a75a444"
                },
                "2fef86e79819ceaac512977e5cae5fd7a6cd04": {
                    "name": "2fef86e79819ceaac512977e5cae5fd7a6cd04"
                },
                "21984616b81b6a3db509464c32e59c634e14f2": {
                    "name": "21984616b81b6a3db509464c32e59c634e14f2"
                }
            },
            "87": {
                "2bdb38dd81cc25ebbf9de2a08ac10b3d6de7d9": {
                    "name": "2bdb38dd81cc25ebbf9de2a08ac10b3d6de7d9"
                },
                "2b721aa9b15c2f9c2d2af79cd2be80bae8cb19": {
                    "name": "2b721aa9b15c2f9c2d2af79cd2be80bae8cb19"
                }
            },
            "d1": {
                "bceb101276822ecb6637d46c0576c29dbd7009": {
                    "name": "bceb101276822ecb6637d46c0576c29dbd7009"
                },
                "41c11d287793d2b2b15fde3a7f587e64b9bc2b": {
                    "name": "41c11d287793d2b2b15fde3a7f587e64b9bc2b"
                },
                "833455f138a6ddf8603b3d4df1aecd5ae6aef0": {
                    "name": "833455f138a6ddf8603b3d4df1aecd5ae6aef0"
                },
                "9569453914674e804e7a2155d33e4d2765290c": {
                    "name": "9569453914674e804e7a2155d33e4d2765290c"
                }
            },
            "c4": {
                "6eb2f8ad7ed27f10d9fe0c0e85f1f5e6947549": {
                    "name": "6eb2f8ad7ed27f10d9fe0c0e85f1f5e6947549"
                },
                "c5f0313317103095b18f5cff800319fd4a9b0d": {
                    "name": "c5f0313317103095b18f5cff800319fd4a9b0d"
                },
                "2edd8209d66e3a520002e57c35be604e85c23e": {
                    "name": "2edd8209d66e3a520002e57c35be604e85c23e"
                }
            },
            "11": {
                "4ff3053d0d6019191b9443785ba0290a1f3c4c": {
                    "name": "4ff3053d0d6019191b9443785ba0290a1f3c4c"
                },
                "00982206a4347ec97f53c44fa9778b646098e7": {
                    "name": "00982206a4347ec97f53c44fa9778b646098e7"
                },
                "5ef0e62f6bb2650eee9ee250078fe1c451b8e2": {
                    "name": "5ef0e62f6bb2650eee9ee250078fe1c451b8e2"
                }
            },
            "4a": {
                "5cb8bbe9d905a6c3fcb9aee92ff9c4dfca6be3": {
                    "name": "5cb8bbe9d905a6c3fcb9aee92ff9c4dfca6be3"
                },
                "8f2de4f330313006ee58bfd9d441fbe67b5108": {
                    "name": "8f2de4f330313006ee58bfd9d441fbe67b5108"
                },
                "db4b1b2bfe67837a6e7d367123230891da9004": {
                    "name": "db4b1b2bfe67837a6e7d367123230891da9004"
                },
                "266b799c5760ef4d3ba7f0b7361f27dd25f504": {
                    "name": "266b799c5760ef4d3ba7f0b7361f27dd25f504"
                },
                "5be250ebc693a664ebd22aafc1fd2b5ec91098": {
                    "name": "5be250ebc693a664ebd22aafc1fd2b5ec91098"
                },
                "c12d2a8972658b00a336228853af32a51968ff": {
                    "name": "c12d2a8972658b00a336228853af32a51968ff"
                }
            },
            "e2": {
                "f24622f23b07deb0a2cfd0076baafa35ef4ca8": {
                    "name": "f24622f23b07deb0a2cfd0076baafa35ef4ca8"
                },
                "be5bc8c7e58f254af68b42e485a73061ffe730": {
                    "name": "be5bc8c7e58f254af68b42e485a73061ffe730"
                },
                "6c7ae3288f28313d802e06faade4ecb3d137da": {
                    "name": "6c7ae3288f28313d802e06faade4ecb3d137da"
                }
            },
            "04": {
                "5dda4863decbb4120b8296fd098d99b96d2753": {
                    "name": "5dda4863decbb4120b8296fd098d99b96d2753"
                },
                "08b8d9d824be6988dda8e5fa095b77765bb7fb": {
                    "name": "08b8d9d824be6988dda8e5fa095b77765bb7fb"
                },
                "ec2c0c4bed064c10566910b9b5f30fc1de9208": {
                    "name": "ec2c0c4bed064c10566910b9b5f30fc1de9208"
                },
                "ea5e0ffcfc9a32ff51088f17be6c800d1b3501": {
                    "name": "ea5e0ffcfc9a32ff51088f17be6c800d1b3501"
                },
                "7a26846f4f0962bfd92b2456c7639574963190": {
                    "name": "7a26846f4f0962bfd92b2456c7639574963190"
                }
            },
            "93": {
                "8b568beb9e672354fbc3cd9943210e2aa05045": {
                    "name": "8b568beb9e672354fbc3cd9943210e2aa05045"
                },
                "e01cebd3ebaa60e2a477564c82d7b6fd7b3d34": {
                    "name": "e01cebd3ebaa60e2a477564c82d7b6fd7b3d34"
                },
                "469b67a28e077c1441d25b3dc653e135d9781d": {
                    "name": "469b67a28e077c1441d25b3dc653e135d9781d"
                },
                "1924dc2d15ffbc3fa0183748e1b65afdf5d6d0": {
                    "name": "1924dc2d15ffbc3fa0183748e1b65afdf5d6d0"
                },
                "b57f9357a4289cf85839616faf4063f7ea1950": {
                    "name": "b57f9357a4289cf85839616faf4063f7ea1950"
                }
            },
            "ef": {
                "33a5f3eb7f2bcb81520c6c720d1cf651be2cbf": {
                    "name": "33a5f3eb7f2bcb81520c6c720d1cf651be2cbf"
                },
                "e3c97b5675f080555f3064448e879b966aa08b": {
                    "name": "e3c97b5675f080555f3064448e879b966aa08b"
                },
                "a292b4d6f64202f026946a18c06b3ce9c429ea": {
                    "name": "a292b4d6f64202f026946a18c06b3ce9c429ea"
                },
                "82259792e7f3332829238c624f49a0436e7317": {
                    "name": "82259792e7f3332829238c624f49a0436e7317"
                },
                "04b26a747d4391d3e1295d7bbf59a270b75272": {
                    "name": "04b26a747d4391d3e1295d7bbf59a270b75272"
                },
                "8edd8988435f769bf7b1cbc2e1138dd57a602b": {
                    "name": "8edd8988435f769bf7b1cbc2e1138dd57a602b"
                }
            },
            "91": {
                "4b19491c49c0d0e0493816e4cb63124e2bc037": {
                    "name": "4b19491c49c0d0e0493816e4cb63124e2bc037"
                },
                "ed74dfe548134d7cf6b4d0686d5edd26125553": {
                    "name": "ed74dfe548134d7cf6b4d0686d5edd26125553"
                },
                "93923b26d73dcc542e442690fd36326b6e0b8f": {
                    "name": "93923b26d73dcc542e442690fd36326b6e0b8f"
                },
                "98f993f1dcea7337ef72146e013288538f3fa2": {
                    "name": "98f993f1dcea7337ef72146e013288538f3fa2"
                }
            },
            "e4": {
                "586c78327bc2e8a06bf3225c5a2aa4fbfc7e85": {
                    "name": "586c78327bc2e8a06bf3225c5a2aa4fbfc7e85"
                },
                "bdf822e824a3c5e00f2fde51807e074eefd8d6": {
                    "name": "bdf822e824a3c5e00f2fde51807e074eefd8d6"
                },
                "cdfe79fadc5d163aed9844e78842e074f8409e": {
                    "name": "cdfe79fadc5d163aed9844e78842e074f8409e"
                },
                "02ab03026c18e41a8cde0c3417105a89e3fa4d": {
                    "name": "02ab03026c18e41a8cde0c3417105a89e3fa4d"
                },
                "a93f6d5ae016a798455dddb1d5c08dd42627be": {
                    "name": "a93f6d5ae016a798455dddb1d5c08dd42627be"
                }
            },
            "ae": {
                "d3a26191e5414390f858e78fead302b1069110": {
                    "name": "d3a26191e5414390f858e78fead302b1069110"
                },
                "7170f1254546d17767c0382e9b684934a825f9": {
                    "name": "7170f1254546d17767c0382e9b684934a825f9"
                }
            },
            "af": {
                "fc729e3cef1c1dcbe34618d540f9d10f5814d6": {
                    "name": "fc729e3cef1c1dcbe34618d540f9d10f5814d6"
                },
                "00a90231d57bab9573b6cbb614e54c5700f7af": {
                    "name": "00a90231d57bab9573b6cbb614e54c5700f7af"
                },
                "375647945caf9cc9c39ac0dab97dfbdca1d908": {
                    "name": "375647945caf9cc9c39ac0dab97dfbdca1d908"
                },
                "b562c559d0e322a38f0de90e3da9d96da06779": {
                    "name": "b562c559d0e322a38f0de90e3da9d96da06779"
                },
                "d7752929415bb1fc2543a8a738ddff4c783f14": {
                    "name": "d7752929415bb1fc2543a8a738ddff4c783f14"
                },
                "5f6c3decf0b4943c3ffa23c9b8da2b986493e9": {
                    "name": "5f6c3decf0b4943c3ffa23c9b8da2b986493e9"
                }
            },
            "01": {
                "7bdae37826c9c8ef24d175ddc87bae6f02460d": {
                    "name": "7bdae37826c9c8ef24d175ddc87bae6f02460d"
                },
                "a6ec81731a1c8c1ddcb2e476567ce94ba7b88a": {
                    "name": "a6ec81731a1c8c1ddcb2e476567ce94ba7b88a"
                },
                "7dac04de75a9873c1f4ff8baaa2953fd182323": {
                    "name": "7dac04de75a9873c1f4ff8baaa2953fd182323"
                }
            },
            "70": {
                "48490a7f4ae0e6a370c2b137bd98ae0a93af9e": {
                    "name": "48490a7f4ae0e6a370c2b137bd98ae0a93af9e"
                },
                "eabb55692c40548f2303b6648930f5f72229fe": {
                    "name": "eabb55692c40548f2303b6648930f5f72229fe"
                },
                "8f61c4ec05650c3670ab79a127f292ca525e96": {
                    "name": "8f61c4ec05650c3670ab79a127f292ca525e96"
                },
                "a0dbee64c31a83fabe74d40a9d630c86c9d03e": {
                    "name": "a0dbee64c31a83fabe74d40a9d630c86c9d03e"
                }
            },
            "f9": {
                "d5e9f710455f97f8fe799f699ac7152b8082d3": {
                    "name": "d5e9f710455f97f8fe799f699ac7152b8082d3"
                },
                "8ba5889aba2d7aef995aaad64937fc2b6a01b2": {
                    "name": "8ba5889aba2d7aef995aaad64937fc2b6a01b2"
                },
                "9cabedee692594425477f61511aa71674b1659": {
                    "name": "9cabedee692594425477f61511aa71674b1659"
                },
                "176a7a9757acf13d0efc9dd0ab5625e6a46b0d": {
                    "name": "176a7a9757acf13d0efc9dd0ab5625e6a46b0d"
                }
            },
            "7e": {
                "94b4366fbcca8ff01cec7a5b174bb679756400": {
                    "name": "94b4366fbcca8ff01cec7a5b174bb679756400"
                },
                "76f829c8fb7de210ca9bca8fae84dbe68a34f3": {
                    "name": "76f829c8fb7de210ca9bca8fae84dbe68a34f3"
                },
                "4d29a8117949c2dff30fa4135606f66731cf4a": {
                    "name": "4d29a8117949c2dff30fa4135606f66731cf4a"
                },
                "349d071281a634dee13f894070ba99d692cc2f": {
                    "name": "349d071281a634dee13f894070ba99d692cc2f"
                },
                "041e57a6171991944aa43f14909a59ca417486": {
                    "name": "041e57a6171991944aa43f14909a59ca417486"
                }
            },
            "92": {
                "1f76678ad0743caabef2e1a10fa35c5d9f7b98": {
                    "name": "1f76678ad0743caabef2e1a10fa35c5d9f7b98"
                },
                "c6e7495e34be602233e889242c501f67c27040": {
                    "name": "c6e7495e34be602233e889242c501f67c27040"
                }
            },
            "3f": {
                "53b0a6311cae84ef958619550732ad61cc8e05": {
                    "name": "53b0a6311cae84ef958619550732ad61cc8e05"
                },
                "b014005ca3d2d04f3a663c9c6ed79369c8662e": {
                    "name": "b014005ca3d2d04f3a663c9c6ed79369c8662e"
                },
                "1fc40d479d8993ca718b4097b2488d5f0ba36d": {
                    "name": "1fc40d479d8993ca718b4097b2488d5f0ba36d"
                },
                "3638c6e258a5a0af0a3fb5bf9b3b85fd3a31ee": {
                    "name": "3638c6e258a5a0af0a3fb5bf9b3b85fd3a31ee"
                },
                "c556990ed309c6770533630c553112d404c157": {
                    "name": "c556990ed309c6770533630c553112d404c157"
                }
            },
            "74": {
                "2bcb53d2c8d4bd4942493408bc98731c1484aa": {
                    "name": "2bcb53d2c8d4bd4942493408bc98731c1484aa"
                },
                "d740686e7b99c38534f5f8daa1b2d797c0e086": {
                    "name": "d740686e7b99c38534f5f8daa1b2d797c0e086"
                },
                "f9938ea655b9e55b10d77279322b71aa4d048f": {
                    "name": "f9938ea655b9e55b10d77279322b71aa4d048f"
                },
                "22e615b8f7264049cd85d6e542a6eb9d48792c": {
                    "name": "22e615b8f7264049cd85d6e542a6eb9d48792c"
                },
                "39e97b22cf36fdb46fe523576b30ca1858694d": {
                    "name": "39e97b22cf36fdb46fe523576b30ca1858694d"
                },
                "fcd2bf9847ccd980553599484009873a0b14c8": {
                    "name": "fcd2bf9847ccd980553599484009873a0b14c8"
                }
            },
            "de": {
                "3ff81150dc85413ce3854465441bbdb12c757d": {
                    "name": "3ff81150dc85413ce3854465441bbdb12c757d"
                },
                "41a945390f14570d496ef83c88dc1047de8ef0": {
                    "name": "41a945390f14570d496ef83c88dc1047de8ef0"
                }
            },
            "f6": {
                "0ad835d3051067a4ed30f2f44d911940775c40": {
                    "name": "0ad835d3051067a4ed30f2f44d911940775c40"
                },
                "5dc4a67fb28f936962dad7b9bc53fe1e62a1e9": {
                    "name": "5dc4a67fb28f936962dad7b9bc53fe1e62a1e9"
                },
                "efdd4d947add53385f63c11fd7599c59061e25": {
                    "name": "efdd4d947add53385f63c11fd7599c59061e25"
                },
                "73eca76697b87f9a7ab5945ffa9f386c6fc911": {
                    "name": "73eca76697b87f9a7ab5945ffa9f386c6fc911"
                },
                "67d3c72efca9d5546c32ae72a1a5fd944c0364": {
                    "name": "67d3c72efca9d5546c32ae72a1a5fd944c0364"
                },
                "92bc49766022a92e6c5c7a597e0448f0004149": {
                    "name": "92bc49766022a92e6c5c7a597e0448f0004149"
                },
                "a7bede1baffedea8a1677d5331120ae83793dc": {
                    "name": "a7bede1baffedea8a1677d5331120ae83793dc"
                },
                "9174d10d0f746951aa58029741ee51c16c4050": {
                    "name": "9174d10d0f746951aa58029741ee51c16c4050"
                },
                "3268bf76ea73d7adcfdc0a8fbbe16189ee5178": {
                    "name": "3268bf76ea73d7adcfdc0a8fbbe16189ee5178"
                },
                "4b4cb7b87688bc46263c5b4ee1b08c32b282ed": {
                    "name": "4b4cb7b87688bc46263c5b4ee1b08c32b282ed"
                },
                "fb631157a7d9b713d2b95f54a038c723a8abdf": {
                    "name": "fb631157a7d9b713d2b95f54a038c723a8abdf"
                }
            },
            "50": {
                "98f65c1b5f2d3af58055c193990b8f04fc13c8": {
                    "name": "98f65c1b5f2d3af58055c193990b8f04fc13c8"
                },
                "52b0a665e3e77c88d2f8252fbda7ce9053e086": {
                    "name": "52b0a665e3e77c88d2f8252fbda7ce9053e086"
                },
                "09ab5105b726cfd08a5951bcdebb698a50a2cc": {
                    "name": "09ab5105b726cfd08a5951bcdebb698a50a2cc"
                },
                "3520bbc9bf4afefb70394e947f310df7fbd1c1": {
                    "name": "3520bbc9bf4afefb70394e947f310df7fbd1c1"
                },
                "9a3f5fd9943e4df2f01449b111c31719438c17": {
                    "name": "9a3f5fd9943e4df2f01449b111c31719438c17"
                }
            },
            "0e": {
                "527000ee7c874d0f53092ac3f3fc3279fd3b0d": {
                    "name": "527000ee7c874d0f53092ac3f3fc3279fd3b0d"
                },
                "4914c25d0fb5a771060469d9e7f5921950f999": {
                    "name": "4914c25d0fb5a771060469d9e7f5921950f999"
                },
                "6b8b710352017ef574ec3c4c91aa65a2cc32fd": {
                    "name": "6b8b710352017ef574ec3c4c91aa65a2cc32fd"
                },
                "d195ea8865810167fc42fed5ee53e5247b1e5a": {
                    "name": "d195ea8865810167fc42fed5ee53e5247b1e5a"
                },
                "fd109b201a6248a114f70c36a86fd875a20fda": {
                    "name": "fd109b201a6248a114f70c36a86fd875a20fda"
                },
                "6007828e55b9c84edfe8f46889771b596e46d2": {
                    "name": "6007828e55b9c84edfe8f46889771b596e46d2"
                },
                "d612954f7161df48831e26c42c9a25ffd0d247": {
                    "name": "d612954f7161df48831e26c42c9a25ffd0d247"
                }
            },
            "c6": {
                "066c36dd272b2c2303d26b39002c21689bb8df": {
                    "name": "066c36dd272b2c2303d26b39002c21689bb8df"
                },
                "f7b034697adefec0467df34ba3348dbb690c3d": {
                    "name": "f7b034697adefec0467df34ba3348dbb690c3d"
                },
                "f92e84de8d1a8709921b31e99c6a9cc20062d4": {
                    "name": "f92e84de8d1a8709921b31e99c6a9cc20062d4"
                },
                "e2eb374836dd1552634c3f676a132caa759cc3": {
                    "name": "e2eb374836dd1552634c3f676a132caa759cc3"
                }
            },
            "4d": {
                "1f032faf77b406e097e8dd37592c13b04498b2": {
                    "name": "1f032faf77b406e097e8dd37592c13b04498b2"
                }
            },
            "16": {
                "93469f1886cb10ac705a1dfefed90d3c398b87": {
                    "name": "93469f1886cb10ac705a1dfefed90d3c398b87"
                },
                "fccd833c391dcd9a2c9b38f3826ff23fd21571": {
                    "name": "fccd833c391dcd9a2c9b38f3826ff23fd21571"
                },
                "9f858aeee6e8369df6ab85740c3cfc40605167": {
                    "name": "9f858aeee6e8369df6ab85740c3cfc40605167"
                },
                "00cd74a8c7bff1dd694519154b81f95e681746": {
                    "name": "00cd74a8c7bff1dd694519154b81f95e681746"
                }
            },
            "f3": {
                "a33bcfb01d45ee86d3125849deef59f05ee219": {
                    "name": "a33bcfb01d45ee86d3125849deef59f05ee219"
                },
                "93ec4f45d9b7ea39ca907a9a4d09ec791d1233": {
                    "name": "93ec4f45d9b7ea39ca907a9a4d09ec791d1233"
                },
                "2ada27e1d7e556fe3bb1ff15a58775ef977657": {
                    "name": "2ada27e1d7e556fe3bb1ff15a58775ef977657"
                },
                "b92f3acf17c6e05ad4a04c24c6c7d9c6616a02": {
                    "name": "b92f3acf17c6e05ad4a04c24c6c7d9c6616a02"
                },
                "4db4a86b367f43814e98032886237453ec32fb": {
                    "name": "4db4a86b367f43814e98032886237453ec32fb"
                }
            },
            "dc": {
                "3e6384a36876aae9f44fe170758ce4e871718d": {
                    "name": "3e6384a36876aae9f44fe170758ce4e871718d"
                },
                "42220e12800e904f522c3d3f6081fae3780302": {
                    "name": "42220e12800e904f522c3d3f6081fae3780302"
                },
                "63373ccadce70303cd2ffce8351b2e48dd9e81": {
                    "name": "63373ccadce70303cd2ffce8351b2e48dd9e81"
                },
                "6f015266db8ddd976643e817a9044aa88974aa": {
                    "name": "6f015266db8ddd976643e817a9044aa88974aa"
                }
            },
            "b2": {
                "6bf71f129b8f5e1fce1f1a1399c799be936f6c": {
                    "name": "6bf71f129b8f5e1fce1f1a1399c799be936f6c"
                },
                "8f3d7d8226883af2b96fded5c371333d93e710": {
                    "name": "8f3d7d8226883af2b96fded5c371333d93e710"
                },
                "1cf7fa6dda2af4c58271d4ff39e64d7f61c9eb": {
                    "name": "1cf7fa6dda2af4c58271d4ff39e64d7f61c9eb"
                },
                "d01a922647854cef01e82117421d9b26907ebe": {
                    "name": "d01a922647854cef01e82117421d9b26907ebe"
                },
                "b823d36ef9c7b9a60d7229f451a9630867138d": {
                    "name": "b823d36ef9c7b9a60d7229f451a9630867138d"
                },
                "c5ba79036c763bc6ed0cab63d32d39aea24fb1": {
                    "name": "c5ba79036c763bc6ed0cab63d32d39aea24fb1"
                }
            },
            "cb": {
                "7cfac4164cb12650b0a528fcbe9285665ec77b": {
                    "name": "7cfac4164cb12650b0a528fcbe9285665ec77b"
                },
                "e406927064fe3d5a6677fc1f93d03dd15be596": {
                    "name": "e406927064fe3d5a6677fc1f93d03dd15be596"
                },
                "852c6c3999494a7e1391ec43c427a63ad8bae5": {
                    "name": "852c6c3999494a7e1391ec43c427a63ad8bae5"
                }
            },
            "3a": {
                "e01a3159bbab20283f7710b7ecf638af5f9bd2": {
                    "name": "e01a3159bbab20283f7710b7ecf638af5f9bd2"
                }
            },
            "aa": {
                "62eac88ca3f833bdc0c25c2e197006bdd7a4de": {
                    "name": "62eac88ca3f833bdc0c25c2e197006bdd7a4de"
                },
                "248e7ec0d857b80d4ca787cc1ce523627ceb1a": {
                    "name": "248e7ec0d857b80d4ca787cc1ce523627ceb1a"
                },
                "e31132777ef29b599d0ef40415bd14d6d105d6": {
                    "name": "e31132777ef29b599d0ef40415bd14d6d105d6"
                },
                "044017f92e6e3bf87a311333eddf04b87b78af": {
                    "name": "044017f92e6e3bf87a311333eddf04b87b78af"
                },
                "a32b08f7d1559afbb4a8cb158492893d36017a": {
                    "name": "a32b08f7d1559afbb4a8cb158492893d36017a"
                }
            },
            "03": {
                "2f06e27fbbc2e6c5c504a2ecd9d9a01926577f": {
                    "name": "2f06e27fbbc2e6c5c504a2ecd9d9a01926577f"
                },
                "1e15390aaf501a5ececc9d3605538dc07a16ad": {
                    "name": "1e15390aaf501a5ececc9d3605538dc07a16ad"
                },
                "aed367decb886ce36d41c084687e9d8ae80c9e": {
                    "name": "aed367decb886ce36d41c084687e9d8ae80c9e"
                }
            },
            "60": {
                "91afa8ea8e062a6e8d26ad9105b399bc0685e3": {
                    "name": "91afa8ea8e062a6e8d26ad9105b399bc0685e3"
                },
                "af151cf5939f1dae9b80faa054bf9668d9dd7f": {
                    "name": "af151cf5939f1dae9b80faa054bf9668d9dd7f"
                },
                "182a9fd138f4c70bc97c3242d8a54108af47b5": {
                    "name": "182a9fd138f4c70bc97c3242d8a54108af47b5"
                },
                "a5f5872779190d594101b188f72aeda48147fc": {
                    "name": "a5f5872779190d594101b188f72aeda48147fc"
                },
                "e4bab695f8bf020901d0970fe202cc7852e099": {
                    "name": "e4bab695f8bf020901d0970fe202cc7852e099"
                },
                "95289c73bcab032df183a58051674195e089c0": {
                    "name": "95289c73bcab032df183a58051674195e089c0"
                },
                "48f6899d09c141c43cc7e8f33c109164fe3284": {
                    "name": "48f6899d09c141c43cc7e8f33c109164fe3284"
                }
            },
            "ba": {
                "aed3573867e0a87256c74184e67ed986ba8d6a": {
                    "name": "aed3573867e0a87256c74184e67ed986ba8d6a"
                },
                "25325cdfed14fac80ac2e2618215e857f3461f": {
                    "name": "25325cdfed14fac80ac2e2618215e857f3461f"
                },
                "3f6b748d854f5595d4567d46a8c6563177933a": {
                    "name": "3f6b748d854f5595d4567d46a8c6563177933a"
                },
                "b5534d8f24b9d8fd05d81d2b5baa2917d723b2": {
                    "name": "b5534d8f24b9d8fd05d81d2b5baa2917d723b2"
                },
                "e14f442f52ca6a03fd26f271210d589efc651a": {
                    "name": "e14f442f52ca6a03fd26f271210d589efc651a"
                }
            },
            "ec": {
                "48169b9a81636b8f96a9b4c7d271f915fc9fbf": {
                    "name": "48169b9a81636b8f96a9b4c7d271f915fc9fbf"
                },
                "8a4500352b58c8b937e18cef730968cfb3ef23": {
                    "name": "8a4500352b58c8b937e18cef730968cfb3ef23"
                },
                "e98d643e9aa3394761e4161dd47b23038331ec": {
                    "name": "e98d643e9aa3394761e4161dd47b23038331ec"
                },
                "a6077f7a2e11c180870b2728ffb9423693f277": {
                    "name": "a6077f7a2e11c180870b2728ffb9423693f277"
                }
            },
            "6f": {
                "866ee4f2e73418737b7b0789f5b39a3c0d8159": {
                    "name": "866ee4f2e73418737b7b0789f5b39a3c0d8159"
                },
                "bff303372b4ec5ba2f4bd5f1549d806309cc4b": {
                    "name": "bff303372b4ec5ba2f4bd5f1549d806309cc4b"
                }
            },
            "72": {
                "f30657b57316901215ecfc954a85496c3fe634": {
                    "name": "f30657b57316901215ecfc954a85496c3fe634"
                },
                "bec9eddab98ab249379f1c17447fcbe81c1802": {
                    "name": "bec9eddab98ab249379f1c17447fcbe81c1802"
                },
                "50005100bcf6ffaf34d8c67c1fa6c1a8deff6c": {
                    "name": "50005100bcf6ffaf34d8c67c1fa6c1a8deff6c"
                }
            },
            "ea": {
                "ee241c8e9d4095bed3a5115c2a3860a7254812": {
                    "name": "ee241c8e9d4095bed3a5115c2a3860a7254812"
                },
                "18e8651a869443f1557ca029c556a89de05ccc": {
                    "name": "18e8651a869443f1557ca029c556a89de05ccc"
                },
                "550a958f767ef3437afc1c36199e2f968ce60f": {
                    "name": "550a958f767ef3437afc1c36199e2f968ce60f"
                }
            },
            "09": {
                "0ebabbdcd4eae23ce8552ff753ff86452a2d50": {
                    "name": "0ebabbdcd4eae23ce8552ff753ff86452a2d50"
                },
                "8ed89c95f2b0bcf66937c09118387189a7d7b7": {
                    "name": "8ed89c95f2b0bcf66937c09118387189a7d7b7"
                },
                "1cfe73154b9db93fdf24dbe93dc63043f34a46": {
                    "name": "1cfe73154b9db93fdf24dbe93dc63043f34a46"
                },
                "7d17763305cf2e172e52a26158648c473c9588": {
                    "name": "7d17763305cf2e172e52a26158648c473c9588"
                }
            },
            "ac": {
                "6c052d3415b59a2319731cb118c98d59ab4ffb": {
                    "name": "6c052d3415b59a2319731cb118c98d59ab4ffb"
                },
                "029141466d9bba5eb87d3e6cd1bb70a100b9f9": {
                    "name": "029141466d9bba5eb87d3e6cd1bb70a100b9f9"
                },
                "ec2bcc02042360488708422fe2cfcc77fb4253": {
                    "name": "ec2bcc02042360488708422fe2cfcc77fb4253"
                },
                "b35fe452ae3362147b66798589aabd91420a05": {
                    "name": "b35fe452ae3362147b66798589aabd91420a05"
                },
                "4b070506c6dd92f8fc8d7c9b6931cb37673c7f": {
                    "name": "4b070506c6dd92f8fc8d7c9b6931cb37673c7f"
                },
                "60b73ac7da1ddb573bf70a6c367f7c448fa857": {
                    "name": "60b73ac7da1ddb573bf70a6c367f7c448fa857"
                },
                "6cdd1473d9c0821c5d80c69e42eea6a10627dc": {
                    "name": "6cdd1473d9c0821c5d80c69e42eea6a10627dc"
                },
                "43e441ec261ec2e827c040c208e3132517d4e0": {
                    "name": "43e441ec261ec2e827c040c208e3132517d4e0"
                },
                "f0de670f9dc1e2401946d6fab9f7c8e92fd08e": {
                    "name": "f0de670f9dc1e2401946d6fab9f7c8e92fd08e"
                }
            },
            "41": {
                "6bd0a07ca1751e89fb9b269ec6a0f5a88c151e": {
                    "name": "6bd0a07ca1751e89fb9b269ec6a0f5a88c151e"
                },
                "74219f41ae64c3fadf49992b2101c596355741": {
                    "name": "74219f41ae64c3fadf49992b2101c596355741"
                }
            },
            "67": {
                "9507394bd1223764982d6e4e1d08ec2cd5ef92": {
                    "name": "9507394bd1223764982d6e4e1d08ec2cd5ef92"
                },
                "a00655189e0459a57cecf99958c0897c3ef275": {
                    "name": "a00655189e0459a57cecf99958c0897c3ef275"
                },
                "c357c70c3bbf0410372ab93257227c0c3c75ae": {
                    "name": "c357c70c3bbf0410372ab93257227c0c3c75ae"
                },
                "c1a26131c65aba9ceacf8a544019e4d51bae56": {
                    "name": "c1a26131c65aba9ceacf8a544019e4d51bae56"
                }
            },
            "94": {
                "a87f0260552ba1f8377e3646677dc12d182f79": {
                    "name": "a87f0260552ba1f8377e3646677dc12d182f79"
                },
                "aa482b7021aa34b3bf38363362c5d6e48879d0": {
                    "name": "aa482b7021aa34b3bf38363362c5d6e48879d0"
                }
            },
            "90": {
                "9e002258d3f4b6640ab657234b1cba0fad1bd3": {
                    "name": "9e002258d3f4b6640ab657234b1cba0fad1bd3"
                },
                "9c88de3ff97ce7fa1a44f495e5608b6b01cec5": {
                    "name": "9c88de3ff97ce7fa1a44f495e5608b6b01cec5"
                },
                "099ecf48c4a8638b1389e3fd0c971b2f8a8738": {
                    "name": "099ecf48c4a8638b1389e3fd0c971b2f8a8738"
                },
                "cf56ed304639f4aa947b23a6fc117c126b94fd": {
                    "name": "cf56ed304639f4aa947b23a6fc117c126b94fd"
                },
                "eca1d3b1b5070bc7525cf946454487a1a58099": {
                    "name": "eca1d3b1b5070bc7525cf946454487a1a58099"
                }
            },
            "9d": {
                "88a282a04652586b0957185322c1e83163abbd": {
                    "name": "88a282a04652586b0957185322c1e83163abbd"
                }
            },
            "a7": {
                "1a38a3840a7d74eefaa2dff68498212c015f1c": {
                    "name": "1a38a3840a7d74eefaa2dff68498212c015f1c"
                },
                "6fac313790dd844f789a8d661930291a598de2": {
                    "name": "6fac313790dd844f789a8d661930291a598de2"
                },
                "13c9c2af7b34a31a7d1ddd3bfcf9b58401c1a9": {
                    "name": "13c9c2af7b34a31a7d1ddd3bfcf9b58401c1a9"
                },
                "b29b3990dbb37ec1557757919ab8475fba83d0": {
                    "name": "b29b3990dbb37ec1557757919ab8475fba83d0"
                },
                "28a4d78904e920df7a3e17888629805150005b": {
                    "name": "28a4d78904e920df7a3e17888629805150005b"
                },
                "c361e08ea40a9c754adb1e0205a74338d78684": {
                    "name": "c361e08ea40a9c754adb1e0205a74338d78684"
                }
            },
            "1d": {
                "68c063a93de2053a3412e873138bcd5cdb5cc0": {
                    "name": "68c063a93de2053a3412e873138bcd5cdb5cc0"
                },
                "fb06da819ac938b5db42320c285dffbc8754f7": {
                    "name": "fb06da819ac938b5db42320c285dffbc8754f7"
                },
                "c20fcca5a668f2ff98b42a449c2d99624f7fb7": {
                    "name": "c20fcca5a668f2ff98b42a449c2d99624f7fb7"
                },
                "286638b1cbe012d418e68eca5ba2dd9c901138": {
                    "name": "286638b1cbe012d418e68eca5ba2dd9c901138"
                },
                "90569051ad2c05ee46254af6c2d5a165f24aff": {
                    "name": "90569051ad2c05ee46254af6c2d5a165f24aff"
                }
            },
            "08": {
                "b530f9d26c04f1a2a3aa19f0e075ab9a4a0882": {
                    "name": "b530f9d26c04f1a2a3aa19f0e075ab9a4a0882"
                },
                "9f366a200bd62ef4630a0ac64cdae9a5c7e4d9": {
                    "name": "9f366a200bd62ef4630a0ac64cdae9a5c7e4d9"
                },
                "290120ae9ae791de6d18be887ccc1e442000d5": {
                    "name": "290120ae9ae791de6d18be887ccc1e442000d5"
                },
                "2f2ccad180d94158e761ec22366def2ce1b92f": {
                    "name": "2f2ccad180d94158e761ec22366def2ce1b92f"
                },
                "7af3a431a4d91fb74848ec5741cb55859f8d36": {
                    "name": "7af3a431a4d91fb74848ec5741cb55859f8d36"
                },
                "590f304e94af8c9009cf5a9947ce5b714e027a": {
                    "name": "590f304e94af8c9009cf5a9947ce5b714e027a"
                }
            },
            "69": {
                "697f1503f5ff188b97c1f954c513c89d5ba287": {
                    "name": "697f1503f5ff188b97c1f954c513c89d5ba287"
                },
                "792722a54c3fada800d91f974a9862ab525b44": {
                    "name": "792722a54c3fada800d91f974a9862ab525b44"
                },
                "35e39f66edaf5b1edb69d6fd512472a546c9da": {
                    "name": "35e39f66edaf5b1edb69d6fd512472a546c9da"
                },
                "7719bb17b73993c1cd9854ad9f5e457ec0b8e1": {
                    "name": "7719bb17b73993c1cd9854ad9f5e457ec0b8e1"
                },
                "6c4764832a2a309778d2e42e5da50a3091e92c": {
                    "name": "6c4764832a2a309778d2e42e5da50a3091e92c"
                },
                "2fd66430b246402a55b80578bce33a3f6eca3b": {
                    "name": "2fd66430b246402a55b80578bce33a3f6eca3b"
                },
                "f50a635bd4633ed3d8a63453fcd2092dde544f": {
                    "name": "f50a635bd4633ed3d8a63453fcd2092dde544f"
                }
            },
            "13": {
                "bb99949185db85fb3868472defaf6c69af2ce3": {
                    "name": "bb99949185db85fb3868472defaf6c69af2ce3"
                },
                "43c99c26a61ee7dbceef76086fc518f07d58ae": {
                    "name": "43c99c26a61ee7dbceef76086fc518f07d58ae"
                },
                "8388a601fc6f448b5235c0cbde5f47b01f0865": {
                    "name": "8388a601fc6f448b5235c0cbde5f47b01f0865"
                },
                "f42003536286341a3e4ae6042347ec81a0d671": {
                    "name": "f42003536286341a3e4ae6042347ec81a0d671"
                }
            },
            "bf": {
                "02c3c91d83bb077ac1a59a4b1a9779900b0ba7": {
                    "name": "02c3c91d83bb077ac1a59a4b1a9779900b0ba7"
                },
                "c49d76792bdcd10783257d5b763a6e7fcbfdd9": {
                    "name": "c49d76792bdcd10783257d5b763a6e7fcbfdd9"
                },
                "69f74ad4b549cc5b210a60d6c9a5aec219a66a": {
                    "name": "69f74ad4b549cc5b210a60d6c9a5aec219a66a"
                },
                "cc7eabd9bf14d2742e95748750af713f31b937": {
                    "name": "cc7eabd9bf14d2742e95748750af713f31b937"
                },
                "f3872110537d61ef7b0b3c56c38fbf52ef5fa5": {
                    "name": "f3872110537d61ef7b0b3c56c38fbf52ef5fa5"
                },
                "6518c6f0db32f8b4135e9e39ce7fc93e7d82d6": {
                    "name": "6518c6f0db32f8b4135e9e39ce7fc93e7d82d6"
                },
                "08f90f1938f709d37b999cd63f1731a45d4446": {
                    "name": "08f90f1938f709d37b999cd63f1731a45d4446"
                }
            },
            "32": {
                "65efcb290656f294c7ee6c77e43d1ff408f632": {
                    "name": "65efcb290656f294c7ee6c77e43d1ff408f632"
                },
                "4af241c919ae735bab60653038f4820d59c544": {
                    "name": "4af241c919ae735bab60653038f4820d59c544"
                },
                "0bc00bc9946045fb6665eb2ca620750eb8591c": {
                    "name": "0bc00bc9946045fb6665eb2ca620750eb8591c"
                },
                "4e8b04da4e44cc7e191066661c1627e932fb63": {
                    "name": "4e8b04da4e44cc7e191066661c1627e932fb63"
                }
            },
            "4b": {
                "d990e6334a3ae7c4a06d194ab305cabb77d542": {
                    "name": "d990e6334a3ae7c4a06d194ab305cabb77d542"
                },
                "28e9b996337dee7729b258811971523f60485b": {
                    "name": "28e9b996337dee7729b258811971523f60485b"
                },
                "81f3927ceb848af1f38d8f880868c4cfb9a6e3": {
                    "name": "81f3927ceb848af1f38d8f880868c4cfb9a6e3"
                },
                "742d6507ef6db8aa5c3e42ba40dbe5675ff007": {
                    "name": "742d6507ef6db8aa5c3e42ba40dbe5675ff007"
                },
                "9acf5d87f31b6df934a652c8ed8606633af846": {
                    "name": "9acf5d87f31b6df934a652c8ed8606633af846"
                },
                "5b9ac54e87b6b2766478c8def2fe60306f69f8": {
                    "name": "5b9ac54e87b6b2766478c8def2fe60306f69f8"
                },
                "b705cf2001dc278bce20031d352f90f59dba25": {
                    "name": "b705cf2001dc278bce20031d352f90f59dba25"
                },
                "e9e34cdf61aa1ceb32f3c57aa2c6aa1081261a": {
                    "name": "e9e34cdf61aa1ceb32f3c57aa2c6aa1081261a"
                }
            },
            "99": {
                "ee4d6adc4394ef0095df221367969e337a3e0b": {
                    "name": "ee4d6adc4394ef0095df221367969e337a3e0b"
                },
                "7b6fa9e468fd945ff28740d250396a7edac435": {
                    "name": "7b6fa9e468fd945ff28740d250396a7edac435"
                },
                "2d6df9f1162131a27f70570b44c0cea5e1edd1": {
                    "name": "2d6df9f1162131a27f70570b44c0cea5e1edd1"
                },
                "33bff1946096284f9ea23fa0245061befd684a": {
                    "name": "33bff1946096284f9ea23fa0245061befd684a"
                }
            },
            "34": {
                "88df5bce52e9a69cb99798dac2dd5d47130812": {
                    "name": "88df5bce52e9a69cb99798dac2dd5d47130812"
                },
                "99501d791780e9356ab8e06a26efabe9892a46": {
                    "name": "99501d791780e9356ab8e06a26efabe9892a46"
                },
                "ff737121c5a101f644dd93dc1eee3828de7f6c": {
                    "name": "ff737121c5a101f644dd93dc1eee3828de7f6c"
                }
            },
            "d2": {
                "20438d2c9271f81d864bfb9839012c925432ae": {
                    "name": "20438d2c9271f81d864bfb9839012c925432ae"
                },
                "b4444bd7aeb5c0372009f076a2e0d7ed4cbc33": {
                    "name": "b4444bd7aeb5c0372009f076a2e0d7ed4cbc33"
                },
                "05a87c69029e4d6701f9773c3dfec358bc8595": {
                    "name": "05a87c69029e4d6701f9773c3dfec358bc8595"
                },
                "6281997fee4c222a1e67e274f5e810461653ac": {
                    "name": "6281997fee4c222a1e67e274f5e810461653ac"
                }
            },
            "78": {
                "1ef20a16b0a156cce572aaabe0fe3148839670": {
                    "name": "1ef20a16b0a156cce572aaabe0fe3148839670"
                },
                "50475650cb99c24acf0f8a298116e0e4f00ac5": {
                    "name": "50475650cb99c24acf0f8a298116e0e4f00ac5"
                },
                "24c765b688a8933c34f11f90ea604f01a27ae4": {
                    "name": "24c765b688a8933c34f11f90ea604f01a27ae4"
                },
                "f8632baaff54906abe04b83aec6e6b314f9b6c": {
                    "name": "f8632baaff54906abe04b83aec6e6b314f9b6c"
                },
                "c05e04af21fc33136d377df5c9dd5bb9a85d01": {
                    "name": "c05e04af21fc33136d377df5c9dd5bb9a85d01"
                },
                "e0c207a07f72193b84cb1793fa1b8a1b126c19": {
                    "name": "e0c207a07f72193b84cb1793fa1b8a1b126c19"
                }
            },
            "0f": {
                "2a2066a6b559757085042ac0ef317fe1bcab96": {
                    "name": "2a2066a6b559757085042ac0ef317fe1bcab96"
                },
                "da00e0ea7c00f0550d1a81109f4ec4580fee2c": {
                    "name": "da00e0ea7c00f0550d1a81109f4ec4580fee2c"
                },
                "ee56a7cab656929b005db8411d62357daadeb1": {
                    "name": "ee56a7cab656929b005db8411d62357daadeb1"
                },
                "633d969852eb323fe1f805584e5014282c4c5e": {
                    "name": "633d969852eb323fe1f805584e5014282c4c5e"
                }
            },
            "21": {
                "7f5b00b3f98c009fb340bcec36db0391bb5f98": {
                    "name": "7f5b00b3f98c009fb340bcec36db0391bb5f98"
                },
                "2d4576589158dd6c18e0ba6589efce38c877c0": {
                    "name": "2d4576589158dd6c18e0ba6589efce38c877c0"
                }
            },
            "info": {},
            "b6": {
                "992217aeb8d161993b836a79689424de6ccc80": {
                    "name": "992217aeb8d161993b836a79689424de6ccc80"
                },
                "5a454e26feb51970e8b7f45c69b2711d6e60e3": {
                    "name": "5a454e26feb51970e8b7f45c69b2711d6e60e3"
                },
                "533f299a5b38df807d549640f94ed5696dd850": {
                    "name": "533f299a5b38df807d549640f94ed5696dd850"
                },
                "50a480e6b1b4cae2f330c00086c33629ea19fd": {
                    "name": "50a480e6b1b4cae2f330c00086c33629ea19fd"
                }
            },
            "23": {
                "588593c90b59d6fd3c7a0f46acac99b41544c6": {
                    "name": "588593c90b59d6fd3c7a0f46acac99b41544c6"
                },
                "d890fa8195d3b6206ce8366308428566f05439": {
                    "name": "d890fa8195d3b6206ce8366308428566f05439"
                }
            },
            "ab": {
                "b110dbdd3a10123f3595a6dd42da074a1591b9": {
                    "name": "b110dbdd3a10123f3595a6dd42da074a1591b9"
                },
                "c979a97e311b64a71211c353b568d404ef6011": {
                    "name": "c979a97e311b64a71211c353b568d404ef6011"
                }
            },
            "f4": {
                "81405ad3b1c08a26bd5cfa3e3c706a1400221c": {
                    "name": "81405ad3b1c08a26bd5cfa3e3c706a1400221c"
                },
                "4d3ee1366fe25dd6778f7743dc21650735556c": {
                    "name": "4d3ee1366fe25dd6778f7743dc21650735556c"
                }
            },
            "e8": {
                "e4f778e19be8fc93e9f878a50e5fe234cc2440": {
                    "name": "e4f778e19be8fc93e9f878a50e5fe234cc2440"
                },
                "5fde34f3d0b6de9f8fc943a3c363919a3dbd75": {
                    "name": "5fde34f3d0b6de9f8fc943a3c363919a3dbd75"
                },
                "9abdfc50387b75551c5a1cd526beb70a764a02": {
                    "name": "9abdfc50387b75551c5a1cd526beb70a764a02"
                }
            },
            "26": {
                "b0b4e6dfab793c4b37043fa91608b33f622c82": {
                    "name": "b0b4e6dfab793c4b37043fa91608b33f622c82"
                },
                "cfc7fb1614ff3e3e1cdff6de1d9eac9b3ae770": {
                    "name": "cfc7fb1614ff3e3e1cdff6de1d9eac9b3ae770"
                },
                "1c1876351cdbf4b419ac02cf3e82c1f5ccf3c5": {
                    "name": "1c1876351cdbf4b419ac02cf3e82c1f5ccf3c5"
                },
                "46d39538532b9048cbcf65239715aa8dbc74e9": {
                    "name": "46d39538532b9048cbcf65239715aa8dbc74e9"
                },
                "0c882f6d73548604a9edb0cc4a8105d0b9e132": {
                    "name": "0c882f6d73548604a9edb0cc4a8105d0b9e132"
                },
                "7e706c73057402dadf5504b006080830d0fe47": {
                    "name": "7e706c73057402dadf5504b006080830d0fe47"
                }
            },
            "b1": {
                "84b497600864ad58a5519ce93147edb8f71477": {
                    "name": "84b497600864ad58a5519ce93147edb8f71477"
                },
                "dd6a3200349cf9fd3048b9bd3c28b9ec1dcb88": {
                    "name": "dd6a3200349cf9fd3048b9bd3c28b9ec1dcb88"
                },
                "050e767e39177e085c4ede1d1307fdb87071e9": {
                    "name": "050e767e39177e085c4ede1d1307fdb87071e9"
                }
            },
            "a0": {
                "daccb1171f5476af622d3dcbb0f3c1018898e0": {
                    "name": "daccb1171f5476af622d3dcbb0f3c1018898e0"
                },
                "86fc7d6dcb946ed5886c0d568e3df8038a6e56": {
                    "name": "86fc7d6dcb946ed5886c0d568e3df8038a6e56"
                },
                "c7dbb7eb865e0ddba78f8eeb29a8faa993ae37": {
                    "name": "c7dbb7eb865e0ddba78f8eeb29a8faa993ae37"
                }
            },
            "1b": {
                "3377217b5a2c7f8c9f1f72f1847c6df8cef70c": {
                    "name": "3377217b5a2c7f8c9f1f72f1847c6df8cef70c"
                },
                "ff2fe5d27fa2644d715e5989c7dcf46d712e79": {
                    "name": "ff2fe5d27fa2644d715e5989c7dcf46d712e79"
                }
            },
            "e0": {
                "40f7c037efda0d5b7d1c8288e6bc7bb09686f4": {
                    "name": "40f7c037efda0d5b7d1c8288e6bc7bb09686f4"
                },
                "065e36c87978eac8503df44cdc147b2638da04": {
                    "name": "065e36c87978eac8503df44cdc147b2638da04"
                },
                "2d896981bb2b69b63828a3d90bd8bcbfb6b39b": {
                    "name": "2d896981bb2b69b63828a3d90bd8bcbfb6b39b"
                },
                "6e57ef50a05e4d6743c84351a86168b1a836a5": {
                    "name": "6e57ef50a05e4d6743c84351a86168b1a836a5"
                },
                "1ff9acd8d0b6eccaf931ee18a4e45f502a7887": {
                    "name": "1ff9acd8d0b6eccaf931ee18a4e45f502a7887"
                },
                "0afaa9f9de91896af139e9ebb89cbaaad7a9ca": {
                    "name": "0afaa9f9de91896af139e9ebb89cbaaad7a9ca"
                }
            },
            "0c": {
                "8bc6f9c38946d293c210da3bc0da5b054668f5": {
                    "name": "8bc6f9c38946d293c210da3bc0da5b054668f5"
                }
            },
            "fa": {
                "6f841d9f041020509a32d4a4d05d9160a9d202": {
                    "name": "6f841d9f041020509a32d4a4d05d9160a9d202"
                },
                "03887e033329fa497d7e54d897e7e2aa1ddd60": {
                    "name": "03887e033329fa497d7e54d897e7e2aa1ddd60"
                },
                "3954ee3afeccf2ab585e2763b079da6bc4ac30": {
                    "name": "3954ee3afeccf2ab585e2763b079da6bc4ac30"
                },
                "6b8291a8e2235285b9d14ed05e6721b3df98df": {
                    "name": "6b8291a8e2235285b9d14ed05e6721b3df98df"
                }
            },
            "5d": {
                "05c046b63bc8bbf4e233b14955fbfcf7ad0469": {
                    "name": "05c046b63bc8bbf4e233b14955fbfcf7ad0469"
                },
                "7cec293567e0b419ae0d1064aadce5ed42eb46": {
                    "name": "7cec293567e0b419ae0d1064aadce5ed42eb46"
                },
                "1c77087f9f83cafdec0d48472472193efb2938": {
                    "name": "1c77087f9f83cafdec0d48472472193efb2938"
                },
                "9f86f1deee3296f929604f3392cab4f4b3e512": {
                    "name": "9f86f1deee3296f929604f3392cab4f4b3e512"
                },
                "fed7844a3a0244c219c735e220f85916a1d407": {
                    "name": "fed7844a3a0244c219c735e220f85916a1d407"
                },
                "4e8f51b02a221dbb1a0f7ead01d571ab13e9e6": {
                    "name": "4e8f51b02a221dbb1a0f7ead01d571ab13e9e6"
                },
                "c7c1dc650f9ecae65c4740a4ae6aa2f2f0f65b": {
                    "name": "c7c1dc650f9ecae65c4740a4ae6aa2f2f0f65b"
                },
                "7a9c9fc88acdd298f3c6f918f9ab2f4f4b4790": {
                    "name": "7a9c9fc88acdd298f3c6f918f9ab2f4f4b4790"
                }
            },
            "1a": {
                "28984419429234b2e8e9897ec20cce4216b53c": {
                    "name": "28984419429234b2e8e9897ec20cce4216b53c"
                },
                "5a37f0f2bd8b6d343adc91ac667ae915f26082": {
                    "name": "5a37f0f2bd8b6d343adc91ac667ae915f26082"
                },
                "59b4d6a5fcaf035c92f1f97cf65c92bce40caa": {
                    "name": "59b4d6a5fcaf035c92f1f97cf65c92bce40caa"
                },
                "2213d79ea343bf26ee9137ce0c688c0cb0aa19": {
                    "name": "2213d79ea343bf26ee9137ce0c688c0cb0aa19"
                }
            },
            "7b": {
                "5bbce100d177762d66bf3bc55d7c248cd412c1": {
                    "name": "5bbce100d177762d66bf3bc55d7c248cd412c1"
                },
                "b0cef35793b367d26001876dfd123a2066a1fd": {
                    "name": "b0cef35793b367d26001876dfd123a2066a1fd"
                },
                "5e561ee21ab96c2a3eaa86e91e654d745d2405": {
                    "name": "5e561ee21ab96c2a3eaa86e91e654d745d2405"
                },
                "b6b3fda38edb060cbfa772f3217617e6ed24c8": {
                    "name": "b6b3fda38edb060cbfa772f3217617e6ed24c8"
                }
            },
            "43": {
                "62d684814e123781ad6c03b2af1bf37043cbc0": {
                    "name": "62d684814e123781ad6c03b2af1bf37043cbc0"
                },
                "065eca1036d86df61560fa54ca84e074e571db": {
                    "name": "065eca1036d86df61560fa54ca84e074e571db"
                },
                "5d85d745373338bcd9dca0efa5bc634710e7d7": {
                    "name": "5d85d745373338bcd9dca0efa5bc634710e7d7"
                },
                "8bf71352c4d001a62d203225300f5664a53dd9": {
                    "name": "8bf71352c4d001a62d203225300f5664a53dd9"
                }
            },
            "c7": {
                "a33615f26884748e218d0cc001092318e39ab0": {
                    "name": "a33615f26884748e218d0cc001092318e39ab0"
                },
                "49ac9c595cbe0d0a39d095917484c2ac574bf5": {
                    "name": "49ac9c595cbe0d0a39d095917484c2ac574bf5"
                },
                "19c3ddb242d9adc1a07aae7e6caf365b473fce": {
                    "name": "19c3ddb242d9adc1a07aae7e6caf365b473fce"
                }
            },
            "19": {
                "5d8431fbe39e0a1373cecf96dc6dc96266f2fc": {
                    "name": "5d8431fbe39e0a1373cecf96dc6dc96266f2fc"
                },
                "a5d4b1d70d756e39b8a2a89d3ad9aa43afccbf": {
                    "name": "a5d4b1d70d756e39b8a2a89d3ad9aa43afccbf"
                },
                "18aa84733c955ad9f5891aa1d516c2adf9e044": {
                    "name": "18aa84733c955ad9f5891aa1d516c2adf9e044"
                }
            },
            "2b": {
                "a168f0e5e6809d144873d48a2779b6967ffe08": {
                    "name": "a168f0e5e6809d144873d48a2779b6967ffe08"
                },
                "77c28eedd844fb77ef6843dda2f650d4979039": {
                    "name": "77c28eedd844fb77ef6843dda2f650d4979039"
                },
                "edf88caa2dc0a5419e7d8f04ffa0adff5d69db": {
                    "name": "edf88caa2dc0a5419e7d8f04ffa0adff5d69db"
                }
            },
            "e7": {
                "5580b5a51129bf7aa6b62927fce6dd31825bfe": {
                    "name": "5580b5a51129bf7aa6b62927fce6dd31825bfe"
                },
                "c58750286cff9907cdd97218787a51901ec67f": {
                    "name": "c58750286cff9907cdd97218787a51901ec67f"
                },
                "ec2522f64d12414b4c4e41a4b94fb535d19d27": {
                    "name": "ec2522f64d12414b4c4e41a4b94fb535d19d27"
                },
                "c8e7ee9295d17490031573bfd7c4e6807bcf04": {
                    "name": "c8e7ee9295d17490031573bfd7c4e6807bcf04"
                },
                "9a6c87dc7b48892f2aff490f804be6b86ebe99": {
                    "name": "9a6c87dc7b48892f2aff490f804be6b86ebe99"
                }
            },
            "d3": {
                "547fc1fa2d4dfaa7d0a7d31c624543a58cad39": {
                    "name": "547fc1fa2d4dfaa7d0a7d31c624543a58cad39"
                },
                "240757323ee863c15f40dc137fc4b2a22a8ab1": {
                    "name": "240757323ee863c15f40dc137fc4b2a22a8ab1"
                },
                "201ea4ec3ad5d0d6b2deb9561b248bc3559f46": {
                    "name": "201ea4ec3ad5d0d6b2deb9561b248bc3559f46"
                },
                "a83a5a0a04c78ffb158e61821e01f354a86d1e": {
                    "name": "a83a5a0a04c78ffb158e61821e01f354a86d1e"
                },
                "742c1ee31e26c97c155b1c9a2be3f105e76bb1": {
                    "name": "742c1ee31e26c97c155b1c9a2be3f105e76bb1"
                },
                "977a542e19673686dce68b30ddb0990011b70c": {
                    "name": "977a542e19673686dce68b30ddb0990011b70c"
                }
            },
            "5e": {
                "76af253a1b54b1ead81027487fdf339b314504": {
                    "name": "76af253a1b54b1ead81027487fdf339b314504"
                },
                "df5944c804034ff98bfdd1717e17a0bdfc2735": {
                    "name": "df5944c804034ff98bfdd1717e17a0bdfc2735"
                },
                "acedc58e804355448220bb4f4d9a2f31c22e73": {
                    "name": "acedc58e804355448220bb4f4d9a2f31c22e73"
                },
                "e3458dc521d1973c36f05b1d7fc2952a85f310": {
                    "name": "e3458dc521d1973c36f05b1d7fc2952a85f310"
                }
            },
            "fc": {
                "63c83f0d356a0a2e0129b39ed92bcd7f2435a5": {
                    "name": "63c83f0d356a0a2e0129b39ed92bcd7f2435a5"
                },
                "fbffc144705809b4856277e6aa6be4f2cd283b": {
                    "name": "fbffc144705809b4856277e6aa6be4f2cd283b"
                },
                "a069b46dce31964d580dc600ca7c99fff71483": {
                    "name": "a069b46dce31964d580dc600ca7c99fff71483"
                }
            },
            "d9": {
                "bd217bb3904c93d9fd7b0c3698d1525ac49c88": {
                    "name": "bd217bb3904c93d9fd7b0c3698d1525ac49c88"
                },
                "696ee48e341fed63e0c05de5b0f1055a65c9dd": {
                    "name": "696ee48e341fed63e0c05de5b0f1055a65c9dd"
                }
            },
            "6c": {
                "bbcca4a57d41bf0d5ba6b2689e89e1724ab64e": {
                    "name": "bbcca4a57d41bf0d5ba6b2689e89e1724ab64e"
                },
                "a91b7d450a662c31e0a53994250d36a0b8d79d": {
                    "name": "a91b7d450a662c31e0a53994250d36a0b8d79d"
                }
            },
            "63": {
                "df7e85c5ea8ec85b1c6569972a843279999c38": {
                    "name": "df7e85c5ea8ec85b1c6569972a843279999c38"
                },
                "726e019c1ad7d863992e73be7707c8ec45b58d": {
                    "name": "726e019c1ad7d863992e73be7707c8ec45b58d"
                },
                "12b4ce90d4e30d32671d875b327d72ccb1de77": {
                    "name": "12b4ce90d4e30d32671d875b327d72ccb1de77"
                }
            },
            "c0": {
                "0357c0320491391e94dffac9c8aaecd188e24e": {
                    "name": "0357c0320491391e94dffac9c8aaecd188e24e"
                },
                "33f74a3279006e81deeaca8fea827b03b643f2": {
                    "name": "33f74a3279006e81deeaca8fea827b03b643f2"
                },
                "0774729fbfbf3b01a43cc43f9d232b024563d7": {
                    "name": "0774729fbfbf3b01a43cc43f9d232b024563d7"
                },
                "bea29024812b05a0073d488380b24611e639ea": {
                    "name": "bea29024812b05a0073d488380b24611e639ea"
                }
            },
            "eb": {
                "b6da459f57a4da4c9a5d3bd75bc742309f24e3": {
                    "name": "b6da459f57a4da4c9a5d3bd75bc742309f24e3"
                },
                "ac61d94ae809d40cb5c1c30e71544c494e9b16": {
                    "name": "ac61d94ae809d40cb5c1c30e71544c494e9b16"
                },
                "7836a918e5b597ea4e62a87e9f8cc0b7468c21": {
                    "name": "7836a918e5b597ea4e62a87e9f8cc0b7468c21"
                },
                "f1b9d1e47f40b4d5cc58e0c63ce4e7f13a1533": {
                    "name": "f1b9d1e47f40b4d5cc58e0c63ce4e7f13a1533"
                }
            },
            "84": {
                "ef8ef6e0a035ccabb6282cca33fd27583e1eeb": {
                    "name": "ef8ef6e0a035ccabb6282cca33fd27583e1eeb"
                }
            },
            "0d": {
                "4d7408458f10d3546abc949ee957541160ee53": {
                    "name": "4d7408458f10d3546abc949ee957541160ee53"
                },
                "3e86183000c4187f543ec6770d77dc5c6881e7": {
                    "name": "3e86183000c4187f543ec6770d77dc5c6881e7"
                },
                "3c0bf176a8307432979bbf392602a401361c4f": {
                    "name": "3c0bf176a8307432979bbf392602a401361c4f"
                },
                "582d7ca7a7fb2718930ba74bd9b728f771cc88": {
                    "name": "582d7ca7a7fb2718930ba74bd9b728f771cc88"
                }
            },
            "e6": {
                "eb1a3fb65c3016906f3f7209e1b5c14045ce0a": {
                    "name": "eb1a3fb65c3016906f3f7209e1b5c14045ce0a"
                },
                "eb01915bb00bfba824787e8096ec44ee6ad4c1": {
                    "name": "eb01915bb00bfba824787e8096ec44ee6ad4c1"
                },
                "4b68f7de3efc29187ef4385ac4a83bb75e0fb4": {
                    "name": "4b68f7de3efc29187ef4385ac4a83bb75e0fb4"
                }
            },
            "31": {
                "c40663373e7e77acd85aa9c810e32ef516a6bc": {
                    "name": "c40663373e7e77acd85aa9c810e32ef516a6bc"
                },
                "d2de1079c0ced8b98ae899208b863271d43caa": {
                    "name": "d2de1079c0ced8b98ae899208b863271d43caa"
                },
                "35ff205e84f0d21ceb3424e905df1b2327ad48": {
                    "name": "35ff205e84f0d21ceb3424e905df1b2327ad48"
                },
                "dcca0e1d2e4f853dea49ca50496c4f4e171a3b": {
                    "name": "dcca0e1d2e4f853dea49ca50496c4f4e171a3b"
                },
                "bea33bd5575da7873ed9b409d326b1105198c4": {
                    "name": "bea33bd5575da7873ed9b409d326b1105198c4"
                }
            },
            "97": {
                "67c8821f01998a32c6db9572101136d129440a": {
                    "name": "67c8821f01998a32c6db9572101136d129440a"
                },
                "9d7efc30ef0cab63af00b9f4026f708834ce90": {
                    "name": "9d7efc30ef0cab63af00b9f4026f708834ce90"
                },
                "86dec2043d9a11d0db5da4fa51c54693ac96ee": {
                    "name": "86dec2043d9a11d0db5da4fa51c54693ac96ee"
                },
                "d80adb7df3e9193f3ad0ba1e00eaa2df2ac357": {
                    "name": "d80adb7df3e9193f3ad0ba1e00eaa2df2ac357"
                },
                "97dc0a742959adbe4cc2b3b6ae062e5284a304": {
                    "name": "97dc0a742959adbe4cc2b3b6ae062e5284a304"
                },
                "3a2109f0a4a6c3c90b9b0edb095fc2b4d6e569": {
                    "name": "3a2109f0a4a6c3c90b9b0edb095fc2b4d6e569"
                },
                "3b101d494062e4b0829fd907038ddc10dffdb1": {
                    "name": "3b101d494062e4b0829fd907038ddc10dffdb1"
                },
                "1be925f6eea5b1c02744ae582847aa99fe280e": {
                    "name": "1be925f6eea5b1c02744ae582847aa99fe280e"
                },
                "67921eb2621fc083bdb0b61163bdfc80cd9219": {
                    "name": "67921eb2621fc083bdb0b61163bdfc80cd9219"
                }
            },
            "10": {
                "b54e386d0786e3135e909fdf79fdd91f4670e8": {
                    "name": "b54e386d0786e3135e909fdf79fdd91f4670e8"
                },
                "d6c654699cec65b58138868124e78cb19fa6b4": {
                    "name": "d6c654699cec65b58138868124e78cb19fa6b4"
                }
            },
            "65": {
                "2c86e160e8b964978c8c87c699f2a1696529ee": {
                    "name": "2c86e160e8b964978c8c87c699f2a1696529ee"
                },
                "5d9db7700006b66283cf537dec22f1f926f034": {
                    "name": "5d9db7700006b66283cf537dec22f1f926f034"
                },
                "f1db578f783de0180f102a1fd13f6880979d67": {
                    "name": "f1db578f783de0180f102a1fd13f6880979d67"
                },
                "d9ff55199a900aa77736f7c434e524436f73cb": {
                    "name": "d9ff55199a900aa77736f7c434e524436f73cb"
                },
                "9cffa6f92b6f933d0b330d455005567d8c77b9": {
                    "name": "9cffa6f92b6f933d0b330d455005567d8c77b9"
                },
                "e87285947944f929a299789154e70aa97ff29d": {
                    "name": "e87285947944f929a299789154e70aa97ff29d"
                },
                "caeb75ab7b3ca65fa25ff39bde0ec9f0177589": {
                    "name": "caeb75ab7b3ca65fa25ff39bde0ec9f0177589"
                },
                "d8f0b3b3993d6a09fd539cfe8b32bba8ecaf0c": {
                    "name": "d8f0b3b3993d6a09fd539cfe8b32bba8ecaf0c"
                },
                "5c012897c533536e371c0ce9d09bea96df4555": {
                    "name": "5c012897c533536e371c0ce9d09bea96df4555"
                },
                "b58822a08efc037e39bb99d7e996d2d067b5df": {
                    "name": "b58822a08efc037e39bb99d7e996d2d067b5df"
                }
            },
            "f1": {
                "3490b56ba0564083d61f0e6786bdec590df0e5": {
                    "name": "3490b56ba0564083d61f0e6786bdec590df0e5"
                }
            },
            "e5": {
                "0f9013c74a7419dc6de189c47838652bfe2b39": {
                    "name": "0f9013c74a7419dc6de189c47838652bfe2b39"
                },
                "84a0f54f632b6d917b33cf479c24062a38fc51": {
                    "name": "84a0f54f632b6d917b33cf479c24062a38fc51"
                },
                "255497d1c791fe39d5836ed162a947792a9295": {
                    "name": "255497d1c791fe39d5836ed162a947792a9295"
                },
                "8753dd25115c60cecb82c63cb1dd26451314b1": {
                    "name": "8753dd25115c60cecb82c63cb1dd26451314b1"
                },
                "4c7a634365d4e5335cb197b9bc9d3e4ab35fa9": {
                    "name": "4c7a634365d4e5335cb197b9bc9d3e4ab35fa9"
                },
                "e1b8859646ce59e7598e2db03df2dc114537ed": {
                    "name": "e1b8859646ce59e7598e2db03df2dc114537ed"
                }
            },
            "d4": {
                "f5be24d0fd03ccec46a5526677d2dd24e24328": {
                    "name": "f5be24d0fd03ccec46a5526677d2dd24e24328"
                },
                "f7bc1171de50cea8b5194d1cafc6f7ea46f4ad": {
                    "name": "f7bc1171de50cea8b5194d1cafc6f7ea46f4ad"
                },
                "056d513f222e8acb9484d1e90304ce7f92a937": {
                    "name": "056d513f222e8acb9484d1e90304ce7f92a937"
                }
            },
            "83": {
                "7bd20dd439b2892c9c54bb7b4271776b67b638": {
                    "name": "7bd20dd439b2892c9c54bb7b4271776b67b638"
                },
                "508299a5e292b8e469648c54c75f0ffb0a7c47": {
                    "name": "508299a5e292b8e469648c54c75f0ffb0a7c47"
                },
                "2656e55688ad63b6c961da4915e107ca9d9ead": {
                    "name": "2656e55688ad63b6c961da4915e107ca9d9ead"
                },
                "96ba3521fded9c81a0815c41a69d709bb2819b": {
                    "name": "96ba3521fded9c81a0815c41a69d709bb2819b"
                },
                "f04ff1d5ca3a0f7596f3ad792beb73ef13d398": {
                    "name": "f04ff1d5ca3a0f7596f3ad792beb73ef13d398"
                },
                "59b978bd34bc919b4f95d77017fdd62b96e281": {
                    "name": "59b978bd34bc919b4f95d77017fdd62b96e281"
                },
                "19b527660ed6a60229260104051efb3a2f0a56": {
                    "name": "19b527660ed6a60229260104051efb3a2f0a56"
                },
                "3baaa5f7196e5a5149baace9e685ca4ba9a0ff": {
                    "name": "3baaa5f7196e5a5149baace9e685ca4ba9a0ff"
                }
            },
            "54": {
                "327df80a86be152c2189f68c9fdd971d85674f": {
                    "name": "327df80a86be152c2189f68c9fdd971d85674f"
                },
                "2ce16b6c2bee31e57306713690e9c7a23d346b": {
                    "name": "2ce16b6c2bee31e57306713690e9c7a23d346b"
                },
                "08802b813fb119ca72330157bf8ef6fff096e7": {
                    "name": "08802b813fb119ca72330157bf8ef6fff096e7"
                },
                "7b29da7057362f84afcd9682683d28a121cc83": {
                    "name": "7b29da7057362f84afcd9682683d28a121cc83"
                }
            },
            "68": {
                "2b56b0963df45c13aa9e881752465bbc371cf1": {
                    "name": "2b56b0963df45c13aa9e881752465bbc371cf1"
                },
                "ec28857e80f40ea995641a5506e41dbfd32f08": {
                    "name": "ec28857e80f40ea995641a5506e41dbfd32f08"
                },
                "6108c615129aaca3373eaf6c9bcdcb58c8df30": {
                    "name": "6108c615129aaca3373eaf6c9bcdcb58c8df30"
                },
                "e62f42efe23037d300cf0d6c1ab3b9d0efe3eb": {
                    "name": "e62f42efe23037d300cf0d6c1ab3b9d0efe3eb"
                },
                "13de5b0bcc7046794547dd1a26a3a8f4161878": {
                    "name": "13de5b0bcc7046794547dd1a26a3a8f4161878"
                }
            },
            "c8": {
                "730cceb6a1bb7561fb81c5ea691f355b7ead72": {
                    "name": "730cceb6a1bb7561fb81c5ea691f355b7ead72"
                },
                "6d857cad3270fb34e53b0d14cec175245ddf7d": {
                    "name": "6d857cad3270fb34e53b0d14cec175245ddf7d"
                },
                "922d3063c0ca6f29b269226937e152a37c9a4e": {
                    "name": "922d3063c0ca6f29b269226937e152a37c9a4e"
                },
                "baa74caf39e89aa1307ec38a6304503725ff8f": {
                    "name": "baa74caf39e89aa1307ec38a6304503725ff8f"
                },
                "5d0b393315e6a6c58b29672cd0ebe4a4c909bb": {
                    "name": "5d0b393315e6a6c58b29672cd0ebe4a4c909bb"
                }
            },
            "dd": {
                "569526395bfa430bb44fc42c6d33c9e8f72b72": {
                    "name": "569526395bfa430bb44fc42c6d33c9e8f72b72"
                },
                "702360c3c39d19ac9ebb58d6bf9d2ee85ec689": {
                    "name": "702360c3c39d19ac9ebb58d6bf9d2ee85ec689"
                }
            },
            "75": {
                "51e3520c433528f456fb997ac88ad4e25f0c4b": {
                    "name": "51e3520c433528f456fb997ac88ad4e25f0c4b"
                },
                "88ec12fab54cd456dff3d0a60a6537abe464e4": {
                    "name": "88ec12fab54cd456dff3d0a60a6537abe464e4"
                },
                "1abf8f9f12333ba53a991a7e082aec436560d7": {
                    "name": "1abf8f9f12333ba53a991a7e082aec436560d7"
                },
                "ab3a7115fee1ffc9ab1940e4c6509247324ed1": {
                    "name": "ab3a7115fee1ffc9ab1940e4c6509247324ed1"
                }
            },
            "2c": {
                "cf352e4da746e4675ae616cdf72e40dc513ce5": {
                    "name": "cf352e4da746e4675ae616cdf72e40dc513ce5"
                },
                "7a12b3c92575b105dea09cc85a0511103b4657": {
                    "name": "7a12b3c92575b105dea09cc85a0511103b4657"
                }
            },
            "38": {
                "73033101776e4fb94f9c06d59fe9cd9a4c41b1": {
                    "name": "73033101776e4fb94f9c06d59fe9cd9a4c41b1"
                },
                "a8160431c90244e0cf242d1cd7c4f1d86a2ae9": {
                    "name": "a8160431c90244e0cf242d1cd7c4f1d86a2ae9"
                },
                "dd2ee1449057f78bfac579ca43cc4f30dd16fb": {
                    "name": "dd2ee1449057f78bfac579ca43cc4f30dd16fb"
                }
            },
            "17": {
                "f837fdae7c48eeb16bd794fa49edad10669134": {
                    "name": "f837fdae7c48eeb16bd794fa49edad10669134"
                },
                "6669722f06f60edec19a522070f038ed5f3a33": {
                    "name": "6669722f06f60edec19a522070f038ed5f3a33"
                },
                "fe6d98d0a04dd4a3cc50cf9b8ddab37a5c1a12": {
                    "name": "fe6d98d0a04dd4a3cc50cf9b8ddab37a5c1a12"
                },
                "d8e85a6f4f17ec2108633f0abb9ac2149f01c4": {
                    "name": "d8e85a6f4f17ec2108633f0abb9ac2149f01c4"
                }
            },
            "a6": {
                "4abc17afc3989deea9f355fce1e504e1b90a3f": {
                    "name": "4abc17afc3989deea9f355fce1e504e1b90a3f"
                },
                "1977d27b052fe1386d9e43e2ea94e02a7f5d3b": {
                    "name": "1977d27b052fe1386d9e43e2ea94e02a7f5d3b"
                }
            },
            "c2": {
                "09955aff7bc174531474dba8940ee39a79a4b9": {
                    "name": "09955aff7bc174531474dba8940ee39a79a4b9"
                },
                "d6715bf78325a9378e27c1f01f06ae6569f4e6": {
                    "name": "d6715bf78325a9378e27c1f01f06ae6569f4e6"
                },
                "b3b9d9d0855828418b70a0cbcd2647c7e89740": {
                    "name": "b3b9d9d0855828418b70a0cbcd2647c7e89740"
                }
            },
            "22": {
                "49ca5231ed6629dad375e45e8dc0951251b616": {
                    "name": "49ca5231ed6629dad375e45e8dc0951251b616"
                },
                "b0a53e2e33ba9e14b41e7c275d0290d1ba164f": {
                    "name": "b0a53e2e33ba9e14b41e7c275d0290d1ba164f"
                }
            },
            "b3": {
                "3a09051dbefdc070412b295bfeb4dc5e86a71e": {
                    "name": "3a09051dbefdc070412b295bfeb4dc5e86a71e"
                },
                "f86a3518ece725385470c6f1b4d3f971259181": {
                    "name": "f86a3518ece725385470c6f1b4d3f971259181"
                },
                "41e63c12f441866808a9af7e3723e43f68f2fd": {
                    "name": "41e63c12f441866808a9af7e3723e43f68f2fd"
                },
                "5ad616ad9a1d03a422c1486e9965a0037fe0ca": {
                    "name": "5ad616ad9a1d03a422c1486e9965a0037fe0ca"
                },
                "33fe5afb4e8c90510eb3a2aa28f34d0ef1ddf6": {
                    "name": "33fe5afb4e8c90510eb3a2aa28f34d0ef1ddf6"
                }
            },
            "95": {
                "1fb3302c63a06acc8c7ba7591e4a7cce07dec0": {
                    "name": "1fb3302c63a06acc8c7ba7591e4a7cce07dec0"
                },
                "f68657d49b8881cdedf19114a442d509e05c61": {
                    "name": "f68657d49b8881cdedf19114a442d509e05c61"
                },
                "5304351775930d36aad08384603c3751b8e6c4": {
                    "name": "5304351775930d36aad08384603c3751b8e6c4"
                },
                "835224eb46e945215f62410dc489e4b8a603c8": {
                    "name": "835224eb46e945215f62410dc489e4b8a603c8"
                },
                "ac954a5809cad927ca305e98174a8deca599ca": {
                    "name": "ac954a5809cad927ca305e98174a8deca599ca"
                }
            },
            "18": {
                "4daa10652f76cd57d5e0ad0313282209d6a948": {
                    "name": "4daa10652f76cd57d5e0ad0313282209d6a948"
                },
                "4ec42e9cfd87b394019082734c064c9d56c41c": {
                    "name": "4ec42e9cfd87b394019082734c064c9d56c41c"
                },
                "2905848dff4a3c8bc0d57b22cecc62229ddc8f": {
                    "name": "2905848dff4a3c8bc0d57b22cecc62229ddc8f"
                },
                "4908ea19527e9c98e8be62bc6395df9c442cad": {
                    "name": "4908ea19527e9c98e8be62bc6395df9c442cad"
                },
                "c53d381569b345de35617c25ffd9d783ce219e": {
                    "name": "c53d381569b345de35617c25ffd9d783ce219e"
                }
            },
            "62": {
                "c6b5e4bcfed7f821327d54faad8d827ccbda84": {
                    "name": "c6b5e4bcfed7f821327d54faad8d827ccbda84"
                }
            },
            "59": {
                "5583780a7cfff2095e89695b1f7688ab53750d": {
                    "name": "5583780a7cfff2095e89695b1f7688ab53750d"
                },
                "421a39559690e6a120aca28c398b1b5e1bc785": {
                    "name": "421a39559690e6a120aca28c398b1b5e1bc785"
                },
                "a2c9a28642272c59a8746f922461500eb01fad": {
                    "name": "a2c9a28642272c59a8746f922461500eb01fad"
                },
                "d7e57a93fb905de0871dc393cc5b90bc4df266": {
                    "name": "d7e57a93fb905de0871dc393cc5b90bc4df266"
                },
                "64d5e1ef99e11efd0105b7bb30bc3bbc724a22": {
                    "name": "64d5e1ef99e11efd0105b7bb30bc3bbc724a22"
                },
                "8ce7329c01dc0b500ff30ef0e885bb96a54321": {
                    "name": "8ce7329c01dc0b500ff30ef0e885bb96a54321"
                },
                "0ab9ab4eb71c0a3837f6a395ba7256de041aac": {
                    "name": "0ab9ab4eb71c0a3837f6a395ba7256de041aac"
                }
            },
            "b7": {
                "1ef53898cbdb56826bf19656799ace67a9a363": {
                    "name": "1ef53898cbdb56826bf19656799ace67a9a363"
                },
                "db0151e565150b864c4b4fd055a706090676cf": {
                    "name": "db0151e565150b864c4b4fd055a706090676cf"
                },
                "fde8a02a616090cc2da186fbf302daab04d790": {
                    "name": "fde8a02a616090cc2da186fbf302daab04d790"
                },
                "495fce1908cb4e9160c6a957ac652546c1ddcb": {
                    "name": "495fce1908cb4e9160c6a957ac652546c1ddcb"
                },
                "4eb5a3e793a3463d71aadf867ea9bec9ace5fe": {
                    "name": "4eb5a3e793a3463d71aadf867ea9bec9ace5fe"
                },
                "03687f79d5eb5f3cfc2895c8b6d5c39ef4a391": {
                    "name": "03687f79d5eb5f3cfc2895c8b6d5c39ef4a391"
                }
            },
            "6e": {
                "08916aad0ed5472b97025b20ff5abc0bdee843": {
                    "name": "08916aad0ed5472b97025b20ff5abc0bdee843"
                },
                "70ae4b8b0b871580a135339e764c60d7020507": {
                    "name": "70ae4b8b0b871580a135339e764c60d7020507"
                },
                "b5ef541c7ab0647a2ba9a7f66c1ca707b54799": {
                    "name": "b5ef541c7ab0647a2ba9a7f66c1ca707b54799"
                },
                "10f3f112d144882085e7c1e40c563c66235bfa": {
                    "name": "10f3f112d144882085e7c1e40c563c66235bfa"
                },
                "f3ad77dff41244395e200e315bef2e7ddde759": {
                    "name": "f3ad77dff41244395e200e315bef2e7ddde759"
                }
            },
            "b9": {
                "9fbe3b5df4ab94cda0054353aa2ff4fb57172d": {
                    "name": "9fbe3b5df4ab94cda0054353aa2ff4fb57172d"
                },
                "6a45ccd36688bbce496b820e1bcb0529755e0e": {
                    "name": "6a45ccd36688bbce496b820e1bcb0529755e0e"
                }
            },
            "e9": {
                "9374ca91ce2d32a2f8ecf5d3fbedfff4965ba7": {
                    "name": "9374ca91ce2d32a2f8ecf5d3fbedfff4965ba7"
                },
                "951725f0e81550e3526f8df9dac421824dc135": {
                    "name": "951725f0e81550e3526f8df9dac421824dc135"
                },
                "4197ee23e71b71efeb6edba8d2e7b5b27dadc1": {
                    "name": "4197ee23e71b71efeb6edba8d2e7b5b27dadc1"
                }
            },
            "2f": {
                "582c00476d1ed2c9e38101288aa5b2fa542823": {
                    "name": "582c00476d1ed2c9e38101288aa5b2fa542823"
                }
            }
        },
        "info": {
            "exclude": {
                "name": "exclude"
            }
        },
        "refs": {
            "tags": {},
            "remotes": {
                "origin": {
                    "SorrTask615_Postprocessing_docsend_data": {
                        "name": "SorrTask615_Postprocessing_docsend_data"
                    },
                    "SorrTask522_Follow_up_for_PB_API": {
                        "name": "SorrTask522_Follow_up_for_PB_API"
                    },
                    "SorrTask624_Integrate_text_editor_with_ChatGPT": {
                        "name": "SorrTask624_Integrate_text_editor_with_ChatGPT"
                    },
                    "CmampTask4662_Promote_pandas_version_2": {
                        "name": "CmampTask4662_Promote_pandas_version_2"
                    },
                    "HEAD": {
                        "name": "HEAD"
                    },
                    "Introduce_apply_columns_mode": {
                        "name": "Introduce_apply_columns_mode"
                    },
                    "master": {
                        "name": "master"
                    },
                    "SorrTask596_Extract_email_from_LinkedIn_profiles": {
                        "name": "SorrTask596_Extract_email_from_LinkedIn_profiles"
                    },
                    "SorrTask631_improve_chatgpt_assistant": {
                        "name": "SorrTask631_improve_chatgpt_assistant"
                    },
                    "SorrTask514_Clean-up_PyCharm_doc_fix": {
                        "name": "SorrTask514_Clean-up_PyCharm_doc_fix"
                    },
                    "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib": {
                        "name": "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib"
                    },
                    "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum": {
                        "name": "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum"
                    },
                    "SorrTask606_Follow_up": {
                        "name": "SorrTask606_Follow_up"
                    },
                    "SorrTask584_Use_str_to_timestamp_instead_of_timestamp_as_str_to_timestamp": {
                        "name": "SorrTask584_Use_str_to_timestamp_instead_of_timestamp_as_str_to_timestamp"
                    },
                    "SorrTask588_Move__dassert_is_date_to_a_more_general_lib": {
                        "name": "SorrTask588_Move__dassert_is_date_to_a_more_general_lib"
                    },
                    "Convert_Hubstaff_gDoc_to_Markdown": {
                        "name": "Convert_Hubstaff_gDoc_to_Markdown"
                    },
                    "SorrTask537Factor_out_and_unit_test_marker_generation_code": {
                        "name": "SorrTask537Factor_out_and_unit_test_marker_generation_code"
                    },
                    "SorrTask491_Development___Diagnosing_servernetwork_issues_gdoc_to_MD": {
                        "name": "SorrTask491_Development___Diagnosing_servernetwork_issues_gdoc_to_MD"
                    },
                    "SorrTask546_Test_hpandas_functions_with_multiindex_dataframe": {
                        "name": "SorrTask546_Test_hpandas_functions_with_multiindex_dataframe"
                    },
                    "SorrTask617_adding_documents_for_marketing": {
                        "name": "SorrTask617_adding_documents_for_marketing"
                    },
                    "CmTask6674_build_fast_tests": {
                        "name": "CmTask6674_build_fast_tests"
                    },
                    "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown": {
                        "name": "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown"
                    },
                    "SorrTask459_Unit_test_plot_slippage_boxplot()": {
                        "name": "SorrTask459_Unit_test_plot_slippage_boxplot()"
                    },
                    "CmTask_Fixing_tests": {
                        "name": "CmTask_Fixing_tests"
                    },
                    "SorrTask601_followup_fix": {
                        "name": "SorrTask601_followup_fix"
                    },
                    "AmpTask1786_Integrate_20240108_2": {
                        "name": "AmpTask1786_Integrate_20240108_2"
                    },
                    "SorrTask514_Clean-up_PyCharm_doc": {
                        "name": "SorrTask514_Clean-up_PyCharm_doc"
                    },
                    "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn": {
                        "name": "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn"
                    },
                    "SorrTask600_Use_other_services_to_get_emails_from_a_LinkedIn_profile": {
                        "name": "SorrTask600_Use_other_services_to_get_emails_from_a_LinkedIn_profile"
                    },
                    "SorrTask455_Unit_test_plot_qq_function": {
                        "name": "SorrTask455_Unit_test_plot_qq_function"
                    },
                    "SorrTask612_Get_information_from_Signal": {
                        "name": "SorrTask612_Get_information_from_Signal"
                    },
                    "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib_2": {
                        "name": "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib_2"
                    },
                    "SorrTask592_Extend_unit_testing_of_str_to_timestamp": {
                        "name": "SorrTask592_Extend_unit_testing_of_str_to_timestamp"
                    }
                }
            },
            "heads": {
                "SorrTask522_Follow_up_for_PB_API": {
                    "name": "SorrTask522_Follow_up_for_PB_API"
                },
                "SorrTask624_Integrate_text_editor_with_ChatGPT": {
                    "name": "SorrTask624_Integrate_text_editor_with_ChatGPT"
                },
                "SorrTask416_Figure_out_permissions_and_gspread": {
                    "name": "SorrTask416_Figure_out_permissions_and_gspread"
                },
                "master": {
                    "name": "master"
                },
                "SorrTask596_Extract_email_from_LinkedIn_profiles": {
                    "name": "SorrTask596_Extract_email_from_LinkedIn_profiles"
                },
                "SorrTask631_improve_chatgpt_assistant": {
                    "name": "SorrTask631_improve_chatgpt_assistant"
                },
                "SorrTask514_Clean-up_PyCharm_doc_fix": {
                    "name": "SorrTask514_Clean-up_PyCharm_doc_fix"
                },
                "CmTask5759_Merge_documentation_into_docs": {
                    "name": "CmTask5759_Merge_documentation_into_docs"
                },
                "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum": {
                    "name": "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum"
                },
                "SorrTask606_Follow_up": {
                    "name": "SorrTask606_Follow_up"
                },
                "SorrTask537Factor_out_and_unit_test_marker_generation_code": {
                    "name": "SorrTask537Factor_out_and_unit_test_marker_generation_code"
                },
                "SorrTask617_adding_documents_for_marketing": {
                    "name": "SorrTask617_adding_documents_for_marketing"
                },
                "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown": {
                    "name": "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown"
                },
                "SorrTask459_Unit_test_plot_slippage_boxplot()": {
                    "name": "SorrTask459_Unit_test_plot_slippage_boxplot()"
                },
                "SorrTask601_followup_fix": {
                    "name": "SorrTask601_followup_fix"
                },
                "SorrTask514_Clean-up_PyCharm_doc": {
                    "name": "SorrTask514_Clean-up_PyCharm_doc"
                },
                "SorrTask539_LinkedIn_Flow_follow_up": {
                    "name": "SorrTask539_LinkedIn_Flow_follow_up"
                },
                "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn": {
                    "name": "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn"
                },
                "SorrTask612_Get_information_from_Signal": {
                    "name": "SorrTask612_Get_information_from_Signal"
                }
            }
        },
        "logs": {
            "refs": {
                "remotes": {
                    "origin": {
                        "SorrTask615_Postprocessing_docsend_data": {
                            "name": "SorrTask615_Postprocessing_docsend_data"
                        },
                        "SorrTask522_Follow_up_for_PB_API": {
                            "name": "SorrTask522_Follow_up_for_PB_API"
                        },
                        "SorrTask624_Integrate_text_editor_with_ChatGPT": {
                            "name": "SorrTask624_Integrate_text_editor_with_ChatGPT"
                        },
                        "CmampTask4662_Promote_pandas_version_2": {
                            "name": "CmampTask4662_Promote_pandas_version_2"
                        },
                        "HEAD": {
                            "name": "HEAD"
                        },
                        "Introduce_apply_columns_mode": {
                            "name": "Introduce_apply_columns_mode"
                        },
                        "master": {
                            "name": "master"
                        },
                        "SorrTask596_Extract_email_from_LinkedIn_profiles": {
                            "name": "SorrTask596_Extract_email_from_LinkedIn_profiles"
                        },
                        "SorrTask631_improve_chatgpt_assistant": {
                            "name": "SorrTask631_improve_chatgpt_assistant"
                        },
                        "SorrTask514_Clean-up_PyCharm_doc_fix": {
                            "name": "SorrTask514_Clean-up_PyCharm_doc_fix"
                        },
                        "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib": {
                            "name": "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib"
                        },
                        "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum": {
                            "name": "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum"
                        },
                        "SorrTask606_Follow_up": {
                            "name": "SorrTask606_Follow_up"
                        },
                        "SorrTask584_Use_str_to_timestamp_instead_of_timestamp_as_str_to_timestamp": {
                            "name": "SorrTask584_Use_str_to_timestamp_instead_of_timestamp_as_str_to_timestamp"
                        },
                        "SorrTask588_Move__dassert_is_date_to_a_more_general_lib": {
                            "name": "SorrTask588_Move__dassert_is_date_to_a_more_general_lib"
                        },
                        "Convert_Hubstaff_gDoc_to_Markdown": {
                            "name": "Convert_Hubstaff_gDoc_to_Markdown"
                        },
                        "SorrTask537Factor_out_and_unit_test_marker_generation_code": {
                            "name": "SorrTask537Factor_out_and_unit_test_marker_generation_code"
                        },
                        "SorrTask491_Development___Diagnosing_servernetwork_issues_gdoc_to_MD": {
                            "name": "SorrTask491_Development___Diagnosing_servernetwork_issues_gdoc_to_MD"
                        },
                        "SorrTask546_Test_hpandas_functions_with_multiindex_dataframe": {
                            "name": "SorrTask546_Test_hpandas_functions_with_multiindex_dataframe"
                        },
                        "SorrTask617_adding_documents_for_marketing": {
                            "name": "SorrTask617_adding_documents_for_marketing"
                        },
                        "CmTask6674_build_fast_tests": {
                            "name": "CmTask6674_build_fast_tests"
                        },
                        "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown": {
                            "name": "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown"
                        },
                        "SorrTask459_Unit_test_plot_slippage_boxplot()": {
                            "name": "SorrTask459_Unit_test_plot_slippage_boxplot()"
                        },
                        "CmTask_Fixing_tests": {
                            "name": "CmTask_Fixing_tests"
                        },
                        "SorrTask601_followup_fix": {
                            "name": "SorrTask601_followup_fix"
                        },
                        "AmpTask1786_Integrate_20240108_2": {
                            "name": "AmpTask1786_Integrate_20240108_2"
                        },
                        "SorrTask514_Clean-up_PyCharm_doc": {
                            "name": "SorrTask514_Clean-up_PyCharm_doc"
                        },
                        "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn": {
                            "name": "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn"
                        },
                        "SorrTask600_Use_other_services_to_get_emails_from_a_LinkedIn_profile": {
                            "name": "SorrTask600_Use_other_services_to_get_emails_from_a_LinkedIn_profile"
                        },
                        "SorrTask455_Unit_test_plot_qq_function": {
                            "name": "SorrTask455_Unit_test_plot_qq_function"
                        },
                        "SorrTask612_Get_information_from_Signal": {
                            "name": "SorrTask612_Get_information_from_Signal"
                        },
                        "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib_2": {
                            "name": "SorrTask542_Make_convert_to_multiindex_public_and_move_to_a_general_lib_2"
                        },
                        "SorrTask592_Extend_unit_testing_of_str_to_timestamp": {
                            "name": "SorrTask592_Extend_unit_testing_of_str_to_timestamp"
                        }
                    }
                },
                "heads": {
                    "SorrTask522_Follow_up_for_PB_API": {
                        "name": "SorrTask522_Follow_up_for_PB_API"
                    },
                    "SorrTask624_Integrate_text_editor_with_ChatGPT": {
                        "name": "SorrTask624_Integrate_text_editor_with_ChatGPT"
                    },
                    "SorrTask416_Figure_out_permissions_and_gspread": {
                        "name": "SorrTask416_Figure_out_permissions_and_gspread"
                    },
                    "master": {
                        "name": "master"
                    },
                    "SorrTask596_Extract_email_from_LinkedIn_profiles": {
                        "name": "SorrTask596_Extract_email_from_LinkedIn_profiles"
                    },
                    "SorrTask631_improve_chatgpt_assistant": {
                        "name": "SorrTask631_improve_chatgpt_assistant"
                    },
                    "SorrTask514_Clean-up_PyCharm_doc_fix": {
                        "name": "SorrTask514_Clean-up_PyCharm_doc_fix"
                    },
                    "CmTask5759_Merge_documentation_into_docs": {
                        "name": "CmTask5759_Merge_documentation_into_docs"
                    },
                    "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum": {
                        "name": "CmTask6674_Skip_tests_failed_due_to_s3_in_sorrentum"
                    },
                    "SorrTask606_Follow_up": {
                        "name": "SorrTask606_Follow_up"
                    },
                    "SorrTask537Factor_out_and_unit_test_marker_generation_code": {
                        "name": "SorrTask537Factor_out_and_unit_test_marker_generation_code"
                    },
                    "SorrTask617_adding_documents_for_marketing": {
                        "name": "SorrTask617_adding_documents_for_marketing"
                    },
                    "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown": {
                        "name": "SorrTask568_Convert_Contributor_Scoring_Gdoc_to_Markdown"
                    },
                    "SorrTask459_Unit_test_plot_slippage_boxplot()": {
                        "name": "SorrTask459_Unit_test_plot_slippage_boxplot()"
                    },
                    "SorrTask601_followup_fix": {
                        "name": "SorrTask601_followup_fix"
                    },
                    "SorrTask514_Clean-up_PyCharm_doc": {
                        "name": "SorrTask514_Clean-up_PyCharm_doc"
                    },
                    "SorrTask539_LinkedIn_Flow_follow_up": {
                        "name": "SorrTask539_LinkedIn_Flow_follow_up"
                    },
                    "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn": {
                        "name": "SorrTask601_Build_a_mailing_list_for_AI_VCs_from_tracxn"
                    },
                    "SorrTask612_Get_information_from_Signal": {
                        "name": "SorrTask612_Get_information_from_Signal"
                    }
                }
            },
            "HEAD": {
                "name": "HEAD"
            }
        },
        "index": {
            "name": "index"
        },
        "HEAD": {
            "name": "HEAD"
        },
        "packed-refs": {
            "name": "packed-refs"
        },
        "config": {
            "name": "config"
        },
        "description": {
            "name": "description"
        },
        "FETCH_HEAD": {
            "name": "FETCH_HEAD"
        },
        "COMMIT_EDITMSG": {
            "name": "COMMIT_EDITMSG"
        },
        "ORIG_HEAD": {
            "name": "ORIG_HEAD"
        }
    },
    "optimizer": {
        "devops": {
            "compose": {
                "docker-compose_as_submodule.yml": {
                    "name": "docker-compose_as_submodule.yml"
                },
                "docker-compose.yml": {
                    "name": "docker-compose.yml"
                }
            },
            "docker_run": {
                "aws_credentials.sh": {
                    "name": "aws_credentials.sh"
                },
                "setenv.sh": {
                    "name": "setenv.sh"
                },
                "test_setup.sh": {
                    "name": "test_setup.sh"
                },
                "bashrc": {
                    "name": "bashrc"
                },
                "entrypoint.sh": {
                    "name": "entrypoint.sh"
                },
                "run_jupyter_server.sh": {
                    "name": "run_jupyter_server.sh"
                }
            },
            "debug": {
                "repo_compare.sh": {
                    "name": "repo_compare.sh"
                }
            },
            "docker_build": {
                "create_users.sh": {
                    "name": "create_users.sh"
                },
                "pyproject.toml": {
                    "name": "pyproject.toml"
                },
                "dev.Dockerfile": {
                    "name": "dev.Dockerfile"
                },
                "poetry.lock": {
                    "name": "poetry.lock"
                },
                "install_jupyter_extensions.sh": {
                    "name": "install_jupyter_extensions.sh"
                },
                "etc_sudoers": {
                    "name": "etc_sudoers"
                },
                "install_os_packages.sh": {
                    "name": "install_os_packages.sh"
                },
                "poetry.toml": {
                    "name": "poetry.toml"
                },
                "install_python_packages.sh": {
                    "name": "install_python_packages.sh"
                }
            },
            "env": {
                "default.env": {
                    "name": "default.env"
                }
            }
        },
        "test": {
            "outcomes": {
                "TestForecastEvaluatorWithOptimizer1.test_to_str_intraday_3_assets": {},
                "TestSinglePeriodOptimizer1.test_short_ban": {},
                "TestSinglePeriodOptimizer1.test_only_gmv_constraint_osqp": {},
                "TestDataFrameProcessForecasts1.test_generate_data": {
                    "input": {
                        "prediction_df.csv": {
                            "name": "prediction_df.csv"
                        },
                        "volatility_df.csv": {
                            "name": "volatility_df.csv"
                        },
                        "market_data_df.csv": {
                            "name": "market_data_df.csv"
                        }
                    }
                },
                "TestSinglePeriodOptimizer1.test_mixed_constraints": {},
                "TestSinglePeriodOptimizer1.test_only_gmv_constraint_ecos": {},
                "TestSinglePeriodOptimizer2.test1": {},
                "TestSinglePeriodOptimizer1.test_correlation_risk_model": {},
                "TestSinglePeriodOptimizer1.test_only_gmv_constraint_scs": {},
                "TestGetOptDockerUpDownCmd.test3": {},
                "TestGetOptDockerUpDownCmd.test1": {},
                "TestSinglePeriodOptimizer1.test_only_gmv_constraint": {},
                "TestForecastEvaluatorWithOptimizer1.test_to_str1": {},
                "TestForecastEvaluatorWithOptimizer1.test_to_str_intraday_1_asset": {},
                "TestGetOptDockerUpDownCmd.test2": {}
            },
            "test_single_period_optimization.py": {
                "name": "test_single_period_optimization.py"
            },
            "test_utils.py": {
                "name": "test_utils.py"
            },
            "test_opt_lib_tasks.py": {
                "name": "test_opt_lib_tasks.py"
            },
            "test_forecast_evaluator_with_optimizer.py": {
                "name": "test_forecast_evaluator_with_optimizer.py"
            }
        },
        "notebooks": {
            "AmpTask1817_Implement_baseline_opt.py": {
                "name": "AmpTask1817_Implement_baseline_opt.py"
            },
            "AmpTask1817_Implement_baseline_opt.ipynb": {
                "name": "AmpTask1817_Implement_baseline_opt.ipynb"
            }
        },
        "utils.py": {
            "name": "utils.py"
        },
        "single_period_optimization.py": {
            "name": "single_period_optimization.py"
        },
        "forecast_evaluator_with_optimizer.py": {
            "name": "forecast_evaluator_with_optimizer.py"
        },
        "soft_constraints.py": {
            "name": "soft_constraints.py"
        },
        "version.txt": {
            "name": "version.txt"
        },
        "changelog.txt": {
            "name": "changelog.txt"
        },
        "optimizer_stub.py": {
            "name": "optimizer_stub.py"
        },
        "hard_constraints.py": {
            "name": "hard_constraints.py"
        },
        "opt_lib_tasks.py": {
            "name": "opt_lib_tasks.py"
        },
        "base.py": {
            "name": "base.py"
        },
        "tasks.py": {
            "name": "tasks.py"
        },
        "repo_config.py": {
            "name": "repo_config.py"
        },
        ".dockerignore.dev": {
            "name": ".dockerignore.dev"
        },
        "invoke.yaml": {
            "name": "invoke.yaml"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "docs": {
        "onboarding": {
            "figs": {
                "track_time_with_hubstaff": {
                    "image7.png": {
                        "name": "image7.png"
                    },
                    "image9.png": {
                        "name": "image9.png"
                    },
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image6.png": {
                        "name": "image6.png"
                    },
                    "image3.jpg": {
                        "name": "image3.jpg"
                    },
                    "image4.png": {
                        "name": "image4.png"
                    },
                    "image8.png": {
                        "name": "image8.png"
                    },
                    "image2.png": {
                        "name": "image2.png"
                    },
                    "image5.png": {
                        "name": "image5.png"
                    }
                },
                "development_setup": {
                    "Fig2_gh.png": {
                        "name": "Fig2_gh.png"
                    },
                    "Fig5_putty.png": {
                        "name": "Fig5_putty.png"
                    },
                    "Fig6_putty.png": {
                        "name": "Fig6_putty.png"
                    },
                    "Fig1_Tmux.png": {
                        "name": "Fig1_Tmux.png"
                    },
                    "Fig1_puttygen.png": {
                        "name": "Fig1_puttygen.png"
                    },
                    "Fig3_putty.png": {
                        "name": "Fig3_putty.png"
                    },
                    "Fig4_putty.png": {
                        "name": "Fig4_putty.png"
                    },
                    "Fig2_puttygen.png": {
                        "name": "Fig2_puttygen.png"
                    }
                }
            },
            "all.communicate_in_telegram.how_to_guide.md": {
                "name": "all.communicate_in_telegram.how_to_guide.md"
            },
            "all.organize_email.how_to_guide.md": {
                "name": "all.organize_email.how_to_guide.md"
            },
            "all.receive_crypto_payment.how_to_guide.md": {
                "name": "all.receive_crypto_payment.how_to_guide.md"
            },
            "all.track_time_with_hubstaff.how_to_guide.md": {
                "name": "all.track_time_with_hubstaff.how_to_guide.md"
            },
            "all.sorrentum_intro.reference.md": {
                "name": "all.sorrentum_intro.reference.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "all.sign_up_for_sorrentum.how_to_guide.md": {
                "name": "all.sign_up_for_sorrentum.how_to_guide.md"
            }
        },
        "deploying": {
            "all.model_deployment.how_to_guide.md": {
                "name": "all.model_deployment.how_to_guide.md"
            }
        },
        "trade_execution": {
            "figs": {
                "full_system_execution_experiment": {
                    "image7.png": {
                        "name": "image7.png"
                    },
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image6.png": {
                        "name": "image6.png"
                    },
                    "image4.png": {
                        "name": "image4.png"
                    },
                    "image3.png": {
                        "name": "image3.png"
                    },
                    "image2.png": {
                        "name": "image2.png"
                    },
                    "image5.png": {
                        "name": "image5.png"
                    }
                }
            },
            "ccxt_notes.txt": {
                "name": "ccxt_notes.txt"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "coding": {
            "all.code_design.how_to_guide_figs": {
                "image1.png": {
                    "name": "image1.png"
                },
                "image2.png": {
                    "name": "image2.png"
                }
            },
            "figs": {
                "unit_tests": {
                    "image_1.png": {
                        "name": "image_1.png"
                    },
                    "image_4.png": {
                        "name": "image_4.png"
                    },
                    "image_3.png": {
                        "name": "image_3.png"
                    },
                    "image_2.png": {
                        "name": "image_2.png"
                    }
                },
                "str_to_df": {
                    "image1.png": {
                        "name": "image1.png"
                    }
                },
                "profiling": {
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image2.png": {
                        "name": "image2.png"
                    }
                }
            },
            "all.type_hints.how_to_guide.md": {
                "name": "all.type_hints.how_to_guide.md"
            },
            "all.hplayback.how_to_guide.md": {
                "name": "all.hplayback.how_to_guide.md",
                "gpt_id": "file-ajChbij0RN30dx7P5bX2IQTQ"
            },
            "all.integrate_repos.how_to_guide.md": {
                "name": "all.integrate_repos.how_to_guide.md"
            },
            "all.asyncio.explanation.md": {
                "name": "all.asyncio.explanation.md"
            },
            "all.reading_other_people_code.how_to_guide.md": {
                "name": "all.reading_other_people_code.how_to_guide.md"
            },
            "all.publish_notebook.how_to_guide.md": {
                "name": "all.publish_notebook.how_to_guide.md"
            },
            "all.run_unit_tests.how_to_guide.md": {
                "name": "all.run_unit_tests.how_to_guide.md"
            },
            "all.profiling.how_to_guide.md": {
                "name": "all.profiling.how_to_guide.md"
            },
            "all.code_like_pragmatic_programmer.how_to_guide.md": {
                "name": "all.code_like_pragmatic_programmer.how_to_guide.md"
            },
            "all.qgrid.how_to_guide.md": {
                "name": "all.qgrid.how_to_guide.md"
            },
            "all.hcache.explanation.md": {
                "name": "all.hcache.explanation.md"
            },
            "all.coding_style.how_to_guide.md": {
                "name": "all.coding_style.how_to_guide.md"
            },
            "all.jupyter_notebook.how_to_guide.md": {
                "name": "all.jupyter_notebook.how_to_guide.md"
            },
            "all.code_design.how_to_guide.md": {
                "name": "all.code_design.how_to_guide.md"
            },
            "all.submit_code_for_review.how_to_guide.md": {
                "name": "all.submit_code_for_review.how_to_guide.md"
            },
            "all.imports_and_packages.how_to_guide.md": {
                "name": "all.imports_and_packages.how_to_guide.md"
            },
            "all.write_unit_tests.how_to_guide.md": {
                "name": "all.write_unit_tests.how_to_guide.md"
            },
            "all.code_review.how_to_guide.md": {
                "name": "all.code_review.how_to_guide.md"
            },
            "all.gsheet_into_pandas.how_to_guide.md": {
                "name": "all.gsheet_into_pandas.how_to_guide.md"
            },
            "all.str_to_df.how_to_guide.md": {
                "name": "all.str_to_df.how_to_guide.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "all.plotting_how_to_guide.md": {
                "name": "all.plotting_how_to_guide.md"
            }
        },
        "devops": {
            "compose": {}
        },
        "papers": {
            "lint_latex.sh": {
                "name": "lint_latex.sh"
            },
            "run_latex.sh": {
                "name": "run_latex.sh"
            },
            "DataFlow_stream_computing_framework.tex": {
                "name": "DataFlow_stream_computing_framework.tex"
            },
            "DataFlow_stream_computing_framework.pdf": {
                "name": "DataFlow_stream_computing_framework.pdf"
            }
        },
        "dataflow": {
            "figs": {
                "run_backtest": {
                    "image1.png": {
                        "name": "image1.png"
                    }
                }
            },
            "system": {
                "all.use_system_config.tutorial.ipynb": {
                    "name": "all.use_system_config.tutorial.ipynb"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "all.use_system_config.tutorial.py": {
                    "name": "all.use_system_config.tutorial.py"
                }
            },
            "test": {
                "test_docs_dataflow_notebooks.py": {
                    "name": "test_docs_dataflow_notebooks.py"
                }
            },
            "all.timing_semantic_and_clocks.md": {
                "name": "all.timing_semantic_and_clocks.md"
            },
            "all.train_and_predict_phases.explanation.md": {
                "name": "all.train_and_predict_phases.explanation.md"
            },
            "all.build_first_dag.tutorial.ipynb": {
                "name": "all.build_first_dag.tutorial.ipynb"
            },
            "all.time_series.explanation.md": {
                "name": "all.time_series.explanation.md"
            },
            "all.build_first_dag.tutorial.py": {
                "name": "all.build_first_dag.tutorial.py"
            },
            "all.dataflow.explanation.md": {
                "name": "all.dataflow.explanation.md"
            },
            "all.build_simple_risk_model_dag.tutorial.py": {
                "name": "all.build_simple_risk_model_dag.tutorial.py"
            },
            "all.dataflow_data_format.explanation.md": {
                "name": "all.dataflow_data_format.explanation.md"
            },
            "all.build_simple_risk_model_dag.tutorial.ipynb": {
                "name": "all.build_simple_risk_model_dag.tutorial.ipynb"
            },
            "all.batch_and_streaming_mode_using_tiling.explanation.md": {
                "name": "all.batch_and_streaming_mode_using_tiling.explanation.md"
            },
            "all.computation_as_graphs.explanation.md": {
                "name": "all.computation_as_graphs.explanation.md"
            },
            "all.best_practice_for_building_dags.explanation.md": {
                "name": "all.best_practice_for_building_dags.explanation.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "documentation_meta": {
            "figs": {
                "diataxis": {
                    "diataxis_summary.png": {
                        "name": "diataxis_summary.png"
                    }
                },
                "architecture_diagrams": {
                    "UML.png": {
                        "name": "UML.png"
                    }
                }
            },
            "all.writing_docs.how_to_guide.md": {
                "name": "all.writing_docs.how_to_guide.md"
            },
            "all.architecture_diagrams.explanation.md": {
                "name": "all.architecture_diagrams.explanation.md"
            },
            "all.diataxis.explanation.md": {
                "name": "all.diataxis.explanation.md"
            },
            "plotting_in_latex.how_to_guide.md": {
                "name": "plotting_in_latex.how_to_guide.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "general_background": {
            "all.common_abbreviations.reference.md": {
                "name": "all.common_abbreviations.reference.md"
            },
            "all.reading_list.reference.md": {
                "name": "all.reading_list.reference.md"
            },
            "all.glossary.reference.md": {
                "name": "all.glossary.reference.md"
            },
            "all.literature_review.reference.md": {
                "name": "all.literature_review.reference.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "monitoring": {
            "figs": {
                "system_reconciliation": {
                    "image1.png": {
                        "name": "image1.png"
                    }
                },
                "monitor_system": {
                    "image7.png": {
                        "name": "image7.png"
                    },
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image6.png": {
                        "name": "image6.png"
                    },
                    "image4.png": {
                        "name": "image4.png"
                    },
                    "image8.png": {
                        "name": "image8.png"
                    },
                    "image3.png": {
                        "name": "image3.png"
                    },
                    "image2.png": {
                        "name": "image2.png"
                    },
                    "image5.png": {
                        "name": "image5.png"
                    }
                }
            }
        },
        "work_organization": {
            "figs": {
                "team_collaboration": {
                    "3_Request.png": {
                        "name": "3_Request.png"
                    },
                    "image.png": {
                        "name": "image.png"
                    },
                    "2_Settings.png": {
                        "name": "2_Settings.png"
                    },
                    "1_Visits.png": {
                        "name": "1_Visits.png"
                    }
                },
                "use_github_and_zenhub": {
                    "Zenhub.png": {
                        "name": "Zenhub.png"
                    },
                    "Draft_PR.png": {
                        "name": "Draft_PR.png"
                    }
                },
                "contributor_scoring": {
                    "image1.png": {
                        "name": "image1.png"
                    }
                },
                "buildmeister": {
                    "trend.png": {
                        "name": "trend.png"
                    },
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "Duration trend.png": {
                        "name": "Duration trend.png"
                    },
                    "Duration Distribution.png": {
                        "name": "Duration Distribution.png"
                    },
                    "Reries.png": {
                        "name": "Reries.png"
                    }
                }
            },
            "all.epicmeister.how_to_guide.md": {
                "name": "all.epicmeister.how_to_guide.md"
            },
            "all.organize_your_work.how_to_guide.md": {
                "name": "all.organize_your_work.how_to_guide.md"
            },
            "all.scrum.explanation.md": {
                "name": "all.scrum.explanation.md"
            },
            "all.team_collaboration.how_to_guide.md": {
                "name": "all.team_collaboration.how_to_guide.md"
            },
            "all.contributor_scoring.how_to_guide.md": {
                "name": "all.contributor_scoring.how_to_guide.md"
            },
            "all.rollout.how_to_guide.md": {
                "name": "all.rollout.how_to_guide.md"
            },
            "all.use_github_and_zenhub.how_to_guide.md": {
                "name": "all.use_github_and_zenhub.how_to_guide.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "all.buildmeister.how_to_guide.md": {
                "name": "all.buildmeister.how_to_guide.md"
            }
        },
        "infra": {
            "figs": {
                "use_htmlcov_server": {
                    "image1.png": {
                        "name": "image1.png"
                    }
                }
            },
            "all.rds.comparison.md": {
                "name": "all.rds.comparison.md"
            },
            "all.gh_and_thin_env_requirements.reference.md": {
                "name": "all.gh_and_thin_env_requirements.reference.md"
            },
            "all.pytest_allure.explanation.md": {
                "name": "all.pytest_allure.explanation.md"
            },
            "all.pytest_allure.how_to_guide.md": {
                "name": "all.pytest_allure.how_to_guide.md"
            },
            "linter_gh_workflow.explanation.md": {
                "name": "linter_gh_workflow.explanation.md"
            },
            "all.aws_scripts.reference.md": {
                "name": "all.aws_scripts.reference.md"
            },
            "all.kaizen_infrastructure.reference.md": {
                "name": "all.kaizen_infrastructure.reference.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "work_tools": {
            "figs": {
                "docker": {
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image2.png": {
                        "name": "image2.png"
                    }
                },
                "development": {
                    "Fig1.png": {
                        "name": "Fig1.png"
                    },
                    "Fig2.png": {
                        "name": "Fig2.png"
                    }
                },
                "visual_studio_code": {
                    "image7.png": {
                        "name": "image7.png"
                    },
                    "image9.png": {
                        "name": "image9.png"
                    },
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image6.png": {
                        "name": "image6.png"
                    },
                    "image11.png": {
                        "name": "image11.png"
                    },
                    "image10.png": {
                        "name": "image10.png"
                    },
                    "image4.png": {
                        "name": "image4.png"
                    },
                    "image8.png": {
                        "name": "image8.png"
                    },
                    "image3.png": {
                        "name": "image3.png"
                    },
                    "image5.png": {
                        "name": "image5.png"
                    }
                },
                "pycharm": {
                    "image7.png": {
                        "name": "image7.png"
                    },
                    "image9.png": {
                        "name": "image9.png"
                    },
                    "image15.png": {
                        "name": "image15.png"
                    },
                    "image1.png": {
                        "name": "image1.png"
                    },
                    "image6.png": {
                        "name": "image6.png"
                    },
                    "image11.png": {
                        "name": "image11.png"
                    },
                    "image13.png": {
                        "name": "image13.png"
                    },
                    "image12.png": {
                        "name": "image12.png"
                    },
                    "image14.png": {
                        "name": "image14.png"
                    },
                    "image10.png": {
                        "name": "image10.png"
                    },
                    "image4.png": {
                        "name": "image4.png"
                    },
                    "image8.png": {
                        "name": "image8.png"
                    },
                    "image3.png": {
                        "name": "image3.png"
                    },
                    "image2.png": {
                        "name": "image2.png"
                    },
                    "image5.png": {
                        "name": "image5.png"
                    }
                }
            },
            "all.invoke_workflows.how_to_guide.md": {
                "name": "all.invoke_workflows.how_to_guide.md"
            },
            "all.telegram_notify_bot.how_to_guide.md": {
                "name": "all.telegram_notify_bot.how_to_guide.md"
            },
            "all.conda_environment_obsolete.how_to_guide.md": {
                "name": "all.conda_environment_obsolete.how_to_guide.md"
            },
            "all.visual_studio_code.how_to_guide.md": {
                "name": "all.visual_studio_code.how_to_guide.md"
            },
            "all.git.how_to_guide.md": {
                "name": "all.git.how_to_guide.md"
            },
            "all.sorrentum_development.how_to_guide.md": {
                "name": "all.sorrentum_development.how_to_guide.md"
            },
            "all.jupytext.how_to_guide.md": {
                "name": "all.jupytext.how_to_guide.md"
            },
            "all.docker.how_to_guide.md": {
                "name": "all.docker.how_to_guide.md"
            },
            "all.pycharm.how_to_guide.md": {
                "name": "all.pycharm.how_to_guide.md"
            },
            "all.replace_text.how_to_guide.md": {
                "name": "all.replace_text.how_to_guide.md"
            },
            "all.development.how_to_guide.md": {
                "name": "all.development.how_to_guide.md"
            },
            "all.ssh.how_to_guide.md": {
                "name": "all.ssh.how_to_guide.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "all.chatgpt_api.how_to_guide.md": {
                "name": "all.chatgpt_api.how_to_guide.md"
            },
            "all.bfg_repo_cleaner.how_to_guide.md": {
                "name": "all.bfg_repo_cleaner.how_to_guide.md",
                "gpt_id": "file-PrjlgltV7vkGXhdBdB7tT4dn"
            }
        },
        "datapull": {
            "figs": {
                "create_airflow_dag": {
                    "image1.png": {
                        "name": "image1.png"
                    }
                },
                "datapull": {
                    "data_format.png": {
                        "name": "data_format.png"
                    }
                }
            },
            "all.im_client.reference.ipynb": {
                "name": "all.im_client.reference.ipynb"
            },
            "all.im_client.reference.py": {
                "name": "all.im_client.reference.py"
            },
            "all.datapull_derived_data.explanation.md": {
                "name": "all.datapull_derived_data.explanation.md"
            },
            "all.datapull_sandbox.explanation.md": {
                "name": "all.datapull_sandbox.explanation.md"
            },
            "all.datapull_qa_flow.explanation.md": {
                "name": "all.datapull_qa_flow.explanation.md"
            },
            "all.datapull_client_stack.explanation.md": {
                "name": "all.datapull_client_stack.explanation.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "kaizenflow": {
            "all.run_Mock2_in_batch_mode.how_to_guide.md": {
                "name": "all.run_Mock2_in_batch_mode.how_to_guide.md"
            },
            "all.software_components.reference.md": {
                "name": "all.software_components.reference.md"
            },
            "all.run_Mock2_pipeline_in_notebook.how_to_guide.ipynb": {
                "name": "all.run_Mock2_pipeline_in_notebook.how_to_guide.ipynb"
            },
            "all.install_helpers.how_to_guide.md": {
                "name": "all.install_helpers.how_to_guide.md"
            },
            "all.analyze_Mock2_pipeline_simulation.how_to_guide.py": {
                "name": "all.analyze_Mock2_pipeline_simulation.how_to_guide.py"
            },
            "all.kaizenflow_workflow.explanation.md": {
                "name": "all.kaizenflow_workflow.explanation.md"
            },
            "all.dev_scripts_catalogue.reference.md": {
                "name": "all.dev_scripts_catalogue.reference.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "all.amp_code_organization.reference.md": {
                "name": "all.amp_code_organization.reference.md"
            },
            "all.run_Mock2_pipeline_in_notebook.how_to_guide.py": {
                "name": "all.run_Mock2_pipeline_in_notebook.how_to_guide.py"
            },
            "all.run_end_to_end_Mock2_system.tutorial.md": {
                "name": "all.run_end_to_end_Mock2_system.tutorial.md"
            },
            "all.analyze_Mock2_pipeline_simulation.how_to_guide.ipynb": {
                "name": "all.analyze_Mock2_pipeline_simulation.how_to_guide.ipynb"
            },
            "all.devops_code_organization.reference.md": {
                "name": "all.devops_code_organization.reference.md"
            }
        },
        "marketing": {
            "tra.how_to_guide.md": {
                "name": "tra.how_to_guide.md"
            },
            "signal.how_to_guide.md": {
                "name": "signal.how_to_guide.md"
            },
            "dropcontact.how_to_guide.md": {
                "name": "dropcontact.how_to_guide.md",
                "gpt_id": "file-6x5pUoVbDn1kYF1aRm0DEJSd"
            }
        },
        "meta.md": {
            "name": "meta.md"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "dataflow": {
        "scripts": {
            "process_experiment_result.py": {
                "name": "process_experiment_result.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "system": {
            "test": {
                "outcomes": {
                    "Test_Example1_Time_ForecastSystem_with_DataFramePortfolio1.test_market_data1_dataframe_portfolio": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestRealTimeDagRunner1.test_simulated_replayed_time1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_adapt_dag_to_real_time1.testMvnReturnsBuilder1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestKibotEquityReader.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_source_nodes.py": {
                    "name": "test_source_nodes.py"
                },
                "test_real_time_dag_adapter.py": {
                    "name": "test_real_time_dag_adapter.py"
                },
                "test_real_time_runner.py": {
                    "name": "test_real_time_runner.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "system_builder_utils.py": {
                "name": "system_builder_utils.py"
            },
            "real_time_dag_runner.py": {
                "name": "real_time_dag_runner.py"
            },
            "sink_nodes.py": {
                "name": "sink_nodes.py"
            },
            "system_signature.py": {
                "name": "system_signature.py"
            },
            "system_config_list.py": {
                "name": "system_config_list.py"
            },
            "real_time_dag_adapter.py": {
                "name": "real_time_dag_adapter.py"
            },
            "system.py": {
                "name": "system.py"
            },
            "system_test_case.py": {
                "name": "system_test_case.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "source_nodes.py": {
                "name": "source_nodes.py"
            }
        },
        "pipelines": {
            "event_study": {
                "pipeline.py": {
                    "name": "pipeline.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "features": {
                "test": {
                    "outcomes": {
                        "TestFeaturePipeline.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        }
                    },
                    "test_feature_pipeline.py": {
                        "name": "test_feature_pipeline.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "pipeline.py": {
                    "name": "pipeline.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "execution": {
                "test": {
                    "outcomes": {
                        "TestExecutionPipeline.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        }
                    },
                    "test_execution_pipeline.py": {
                        "name": "test_execution_pipeline.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "execution_pipeline.py": {
                    "name": "execution_pipeline.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "model": {
            "test": {
                "outcomes": {
                    "TestForecastEvaluatorFromPrices1.test_annotate_forecasts_with_extended_stats_1_asset": {},
                    "Test_compute_correlations.test_equal_axes": {},
                    "Test_annotate_forecasts_by_tile.test_annotate_forecasts_by_tile_from_prices": {},
                    "TestForecastEvaluatorFromPrices1.test_annotate_forecasts_with_extended_stats_3_assets": {},
                    "TestDataFrameModeler.test_dump_json1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestAnnotatedMetricsDf.test2": {},
                    "Test_remove_outliers.test1": {},
                    "TestForecastEvaluator1.test_to_str_intraday_4_assets_dollar_neutrality_demean": {},
                    "TestForecastEvaluatorFromPrices1.test_to_str_intraday_3_assets_varying_gmv": {},
                    "TestParquetTileAnalyzer.test_compute_universe_size_by_time": {},
                    "Test_run_master_feature_analyzer": {
                        "input": {
                            "tiled_results": {
                                "asset_id=3303714233": {
                                    "year=2000": {
                                        "month=1": {
                                            "data.parquet": {
                                                "name": "data.parquet"
                                            }
                                        }
                                    }
                                },
                                "asset_id=1467591036": {
                                    "year=2000": {
                                        "month=1": {
                                            "data.parquet": {
                                                "name": "data.parquet"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "Test_run_master_research_backtest_analyzer": {
                        "input": {
                            "tiled_results": {
                                "asset_id=3303714233": {
                                    "year=2000": {
                                        "month=1": {
                                            "data.parquet": {
                                                "name": "data.parquet"
                                            }
                                        }
                                    }
                                },
                                "asset_id=1467591036": {
                                    "year=2000": {
                                        "month=1": {
                                            "data.parquet": {
                                                "name": "data.parquet"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "TestForecastEvaluatorFromPrices1.test_to_str_intraday_3_assets_asset_specific_quantization": {},
                    "Test_compute_correlations.test_unequal_columns": {},
                    "Test_annotate_forecasts_by_tile.test_annotate_forecasts_by_tile_with_optimizer": {},
                    "Test_compute_correlations.test_unequal_indices": {},
                    "TestForecastEvaluator1.test_to_str_multiday_1_asset_targeted_gmv": {},
                    "TestForecastEvaluator1.test_to_str_intraday_3_assets_targeted_gmv": {},
                    "TestModelEvaluator1.test_calculate_stats1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestForecastEvaluatorFromPrices1.test_to_str_intraday_1_asset": {},
                    "TestParquetTileAnalyzer.test_collate_parquet_tile_metadata1": {},
                    "TestDataFrameModeler.test_apply_sklearn_model_predict_with_oos": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestForecastEvaluator1.test_multiday_overnight_returns_injected": {},
                    "TestAnnotatedMetricsDf.test1": {},
                    "TestStatsComputer1.test_compute_portfolio_stats1": {},
                    "TestForecastMixer1.test_generate_portfolio_bar_metrics_df": {},
                    "Test_remove_outliers.test2": {},
                    "TestForecastEvaluator1.test_to_str_intraday_1_asset_floating_gmv": {},
                    "TestForecastEvaluatorFromPrices1.test_to_str_intraday_3_assets": {},
                    "TestAnnotatedMetricsDf.test3": {},
                    "TestModelEvaluator1.test_aggregate_models1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDataFrameModeler.test_apply_sklearn_model_fit_with_oos": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestForecastEvaluatorFromPrices1.test_to_str_intraday_1_asset_longitudinal": {},
                    "TestDataFrameModeler.test_apply_sklearn_model_fit_without_oos": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestForecastEvaluator1.test_to_str_intraday_4_assets_dollar_neutrality_side_preserving": {},
                    "TestForecastEvaluatorFromPrices1.test_to_str_intraday_3_assets_longitudinal": {},
                    "TestDataFrameModeler.test_merge": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestForecastEvaluator1.test_to_str_intraday_1_asset_targeted_gmv": {},
                    "TestParquetTileAnalyzer.test_compute_metadata_stats_by_asset_id": {},
                    "TestRegressionAnalyzer1.test_compute_moments": {},
                    "TestAnnotatedMetricsDf.test4": {},
                    "TestForecastEvaluator1.test_log_portfolio_read_portfolio": {},
                    "TestAnnotatedMetricsDf.test5": {},
                    "TestConvertToMetricsFormat.test1": {},
                    "TestForecastEvaluatorFromPrices1.test_save_portfolio_load_portfolio": {},
                    "TestForecastEvaluator1.test_to_str_intraday_3_assets_floating_gmv": {}
                },
                "test_regression_analyzer.py": {
                    "name": "test_regression_analyzer.py"
                },
                "test_model_plotter.py": {
                    "name": "test_model_plotter.py"
                },
                "test_tiled_flows.py": {
                    "name": "test_tiled_flows.py"
                },
                "test_run_notebooks.py": {
                    "name": "test_run_notebooks.py"
                },
                "test_forecast_mixer.py": {
                    "name": "test_forecast_mixer.py"
                },
                "test_stats_computer.py": {
                    "name": "test_stats_computer.py"
                },
                "test_parquet_tile_analyzer.py": {
                    "name": "test_parquet_tile_analyzer.py"
                },
                "test_forecast_evaluator_from_returns.py": {
                    "name": "test_forecast_evaluator_from_returns.py"
                },
                "test_model_evaluator.py": {
                    "name": "test_model_evaluator.py"
                },
                "test_forecast_evaluator_from_prices.py": {
                    "name": "test_forecast_evaluator_from_prices.py"
                },
                "test_correlation.py": {
                    "name": "test_correlation.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "test_dataframe_modeler.py": {
                    "name": "test_dataframe_modeler.py"
                },
                "test_metrics.py": {
                    "name": "test_metrics.py"
                }
            },
            "notebooks": {
                "LmTask151_Extend_pnl_computation_to_account_for_spread.ipynb": {
                    "name": "LmTask151_Extend_pnl_computation_to_account_for_spread.ipynb"
                },
                "LimeTask146_Profile_the_experiment_notebook.ipynb": {
                    "name": "LimeTask146_Profile_the_experiment_notebook.ipynb"
                },
                "CmampTask5066_Compare_forecast_evaluators.py": {
                    "name": "CmampTask5066_Compare_forecast_evaluators.py"
                },
                "CmampTask5066_Compare_forecast_evaluators.ipynb": {
                    "name": "CmampTask5066_Compare_forecast_evaluators.ipynb"
                },
                "LimeTask171_Memory_issue_in_processing_large_run.ipynb": {
                    "name": "LimeTask171_Memory_issue_in_processing_large_run.ipynb"
                },
                "Master_model_analyzer.ipynb": {
                    "name": "Master_model_analyzer.ipynb"
                },
                "CmTask1805_Deep_dive_into_quantitative_statistics.ipynb": {
                    "name": "CmTask1805_Deep_dive_into_quantitative_statistics.ipynb"
                },
                "Master_model_mixer.ipynb": {
                    "name": "Master_model_mixer.ipynb"
                },
                "LmTask151_Extend_pnl_computation_to_account_for_spread.py": {
                    "name": "LmTask151_Extend_pnl_computation_to_account_for_spread.py"
                },
                "LimeTask171_Memory_issue_in_processing_large_run.py": {
                    "name": "LimeTask171_Memory_issue_in_processing_large_run.py"
                },
                "Master_research_backtest_analyzer.py": {
                    "name": "Master_research_backtest_analyzer.py"
                },
                "Master_save_pnl_and_trades.ipynb": {
                    "name": "Master_save_pnl_and_trades.ipynb"
                },
                "CmTask1805_Deep_dive_into_quantitative_statistics.py": {
                    "name": "CmTask1805_Deep_dive_into_quantitative_statistics.py"
                },
                "Master_save_pnl_and_trades.py": {
                    "name": "Master_save_pnl_and_trades.py"
                },
                "Master_feature_analyzer.py": {
                    "name": "Master_feature_analyzer.py"
                },
                "Master_research_backtest_analyzer.ipynb": {
                    "name": "Master_research_backtest_analyzer.ipynb"
                },
                "LimeTask146_Profile_the_experiment_notebook.py": {
                    "name": "LimeTask146_Profile_the_experiment_notebook.py"
                },
                "Master_model_analyzer.py": {
                    "name": "Master_model_analyzer.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "Master_model_mixer.py": {
                    "name": "Master_model_mixer.py"
                },
                "Master_feature_analyzer.ipynb": {
                    "name": "Master_feature_analyzer.ipynb"
                }
            },
            "forecast_mixer.py": {
                "name": "forecast_mixer.py"
            },
            "regression_analyzer.py": {
                "name": "regression_analyzer.py"
            },
            "tiled_flows.py": {
                "name": "tiled_flows.py"
            },
            "metrics.py": {
                "name": "metrics.py"
            },
            "stats_computer.py": {
                "name": "stats_computer.py"
            },
            "forecast_evaluator_from_returns.py": {
                "name": "forecast_evaluator_from_returns.py"
            },
            "model_plotter.py": {
                "name": "model_plotter.py"
            },
            "dataflow_model_utils.py": {
                "name": "dataflow_model_utils.py"
            },
            "model_evaluator.py": {
                "name": "model_evaluator.py"
            },
            "forecast_evaluator_from_prices.py": {
                "name": "forecast_evaluator_from_prices.py"
            },
            "parquet_tile_analyzer.py": {
                "name": "parquet_tile_analyzer.py"
            },
            "incremental_single_name_model_evaluator.py": {
                "name": "incremental_single_name_model_evaluator.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "correlation.py": {
                "name": "correlation.py"
            },
            "dataframe_modeler.py": {
                "name": "dataframe_modeler.py"
            }
        },
        "test": {
            "test_tutorial_dataflow_notebook.py": {
                "name": "test_tutorial_dataflow_notebook.py"
            },
            "test_gallery_synthetic_data_example_notebook.py": {
                "name": "test_gallery_synthetic_data_example_notebook.py"
            }
        },
        "notebooks": {
            "tutorial_dataflow.ipynb": {
                "name": "tutorial_dataflow.ipynb"
            },
            "gallery_synthetic_data_example.ipynb": {
                "name": "gallery_synthetic_data_example.ipynb"
            },
            "gallery_synthetic_data_example.py": {
                "name": "gallery_synthetic_data_example.py"
            },
            "tutorial_dataflow.py": {
                "name": "tutorial_dataflow.py"
            },
            "CmTask4474_Create_simple_risk_model_estimation_notebook.py": {
                "name": "CmTask4474_Create_simple_risk_model_estimation_notebook.py"
            },
            "CmTask4474_Create_simple_risk_model_estimation_notebook.ipynb": {
                "name": "CmTask4474_Create_simple_risk_model_estimation_notebook.ipynb"
            }
        },
        "core": {
            "nodes": {
                "test": {
                    "outcomes": {
                        "TestMultihorizonReturnsPredictionProcessor.test_invert_zret_3_zscoring1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test11": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSeriesToDfTransformer2.test_drop_nans": {},
                        "TestVolatilityModel.test05": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_fit_with_constant1": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression": {
                            "input": {
                                "data.csv": {
                                    "name": "data.csv"
                                }
                            }
                        },
                        "TestGroupedColDfToDfTransformer3.test_multicolumn_processing2": {},
                        "TestContinuousSkLearnModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDeepARGlobalModel.test_fit_dag1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModulator.test_demodulate1": {
                            "output": {
                                "df_out.txt": {
                                    "name": "df_out.txt"
                                },
                                "df_in.txt": {
                                    "name": "df_in.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestResidualizer.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestCrossSectionalDfToDfTransformer1.test_rank": {},
                        "TestContinuousSkLearnModel.test8": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSmaModel.test5": {},
                        "TestResidualizer.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSmaModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test03": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDiskDataSource.test_datetime_index_parquet1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSeriesToSeriesTransformer3.test_drop_nans_then_join": {},
                        "TestWriteDf.test_pass_through": {},
                        "TestSeriesToDfTransformer2.test_drop_nans_then_join": {},
                        "TestTwapVwapComputer.test2": {},
                        "TestUnsupervisedSkLearnModel.test3": {},
                        "TestContinuousSarimaxModel.test_fit_no_x1": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_predict2": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_summary": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_compare_to_linear_regression1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestWriteDf.test_pass_through_no_writing": {},
                        "TestLinearRegression.test0": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test3": {},
                        "TestVolatilityModel.test06": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSeriesToSeriesTransformer1.test1": {},
                        "TestVolatilityModulator.test_modulate1": {
                            "output": {
                                "df_out.txt": {
                                    "name": "df_out.txt"
                                },
                                "df_in.txt": {
                                    "name": "df_in.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test10": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test12": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSkLearnModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestResidualizer2.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test7": {},
                        "TestSmaModel.test3": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestGroupedColDfToDfTransformer3.test_multicolumn_processing1": {},
                        "TestSeriesToDfTransformer2.test_drop_nans_without_reindexing": {},
                        "TestMultiindexVolatilityModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestUnsupervisedSkLearnModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLocalLevelModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexVolatilityModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSkLearnModel.test4": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexUnsupervisedSkLearnModel.test3": {},
                        "TestSeriesToDfTransformer1.test1": {},
                        "TestWriteCols.test_pass_through": {},
                        "TestContinuousSarimaxModel.test_predict_different_intervals1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultivariateNormalDataSource.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestResidualizer2.test4": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test6": {},
                        "TestSeriesToSeriesTransformer2.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousDeepArModel.test_fit_dag1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestResidualizer.test3": {},
                        "TestSingleColumnVolatilityModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestArmaDataSource.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestGroupedColDfToDfTransformer4.test_drop_nans_without_reindexing": {},
                        "TestContinuousSarimaxModel.test_compare_to_linear_regression2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test02": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_predict_with_nan": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexPooledSkLearnModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultihorizonReturnsPredictionProcessor.test_invert_zret_0_zscoring1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDiskDataSource.test_datetime_col_csv1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSkLearnModel.test6": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSeriesToSeriesTransformer3.test_drop_nans": {},
                        "TestWriteCols.test_write": {},
                        "TestVolatilityModulator.test_col_mode2": {
                            "output": {
                                "df_out.txt": {
                                    "name": "df_out.txt"
                                },
                                "df_in.txt": {
                                    "name": "df_in.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestResidualizer2.test3": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test1": {},
                        "TestResidualizer2.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test4": {},
                        "TestMultiindexLinearRegression.test1": {},
                        "TestVolatilityModel.test01": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSkLearnModel.test5": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDeepARGlobalModel.test_fit1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSingleColumnVolatilityModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexSkLearnModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test07": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestUnsupervisedSkLearnModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDiskDataSource.test_filter_dates_open_boundary1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDiskDataSource.test_datetime_index_csv1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test2": {},
                        "TestContinuousSarimaxModel.test_fit1": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSmaModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestWriteDf.test_write": {},
                        "TestContinuousSkLearnModel.test3": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModel.test04": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestVolatilityModulator.test_col_mode1": {
                            "output": {
                                "df_out.txt": {
                                    "name": "df_out.txt"
                                },
                                "df_in.txt": {
                                    "name": "df_in.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestGroupedColDfToDfTransformer4.test_drop_nans": {},
                        "TestWriteCols.test_pass_through_no_writing": {},
                        "TestMultiindexTwapVwapComputer.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_fit_step_one1": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSingleColumnVolatilityModel.test3": {},
                        "TestSmaModel.test4": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexPooledSkLearnModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousDeepArModel.test_predict_dag1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultihorizonReturnsPredictionProcessor.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexTwapVwapComputer.test2": {},
                        "TestMultiindexSkLearnModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSkLearnModel.test7": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDiskDataSource.test_filter_dates1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSeriesToSeriesTransformer3.test_drop_nans_without_reindexing": {},
                        "TestContinuousSarimaxModel.test_predict_no_x1": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestTwapVwapComputer.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestMultiindexUnsupervisedSkLearnModel.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestLinearRegression.test5": {},
                        "TestMultiindexUnsupervisedSkLearnModel.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestContinuousSarimaxModel.test_predict1": {
                            "output": {
                                "test_df.txt": {
                                    "name": "test_df.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestDiskDataSource.test_datetime_col_parquet1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "TestSeriesToSeriesTransformer2.test2": {}
                    },
                    "test_unsupervised_sklearn_models.py": {
                        "name": "test_unsupervised_sklearn_models.py"
                    },
                    "test_sarimax_models.py": {
                        "name": "test_sarimax_models.py"
                    },
                    "helpers.py": {
                        "name": "helpers.py"
                    },
                    "test_transformers.py": {
                        "name": "test_transformers.py"
                    },
                    "test_regression_models.py": {
                        "name": "test_regression_models.py"
                    },
                    "test_sklearn_models.py": {
                        "name": "test_sklearn_models.py"
                    },
                    "test_volatility_models.py": {
                        "name": "test_volatility_models.py"
                    },
                    "test_sources.py": {
                        "name": "test_sources.py"
                    },
                    "test_gluonts_models.py": {
                        "name": "test_gluonts_models.py"
                    },
                    "test_sinks.py": {
                        "name": "test_sinks.py"
                    },
                    "test_local_level_model.py": {
                        "name": "test_local_level_model.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "unsupervised_sklearn_models.py": {
                    "name": "unsupervised_sklearn_models.py"
                },
                "sources.py": {
                    "name": "sources.py"
                },
                "sarimax_models.py": {
                    "name": "sarimax_models.py"
                },
                "regression_models.py": {
                    "name": "regression_models.py"
                },
                "gluonts_models.py": {
                    "name": "gluonts_models.py"
                },
                "local_level_model.py": {
                    "name": "local_level_model.py"
                },
                "sinks.py": {
                    "name": "sinks.py"
                },
                "transformers.py": {
                    "name": "transformers.py"
                },
                "volatility_models.py": {
                    "name": "volatility_models.py"
                },
                "base.py": {
                    "name": "base.py"
                },
                "sklearn_models.py": {
                    "name": "sklearn_models.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "outcomes": {
                    "TestResultBundle.test_get_tags_for_column1": {},
                    "Test_dataflow_core_DAG5.test_compose_nonempty_with_empty": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_DagBuilder_name_from_string.test3": {},
                    "Test_dataflow_core_DAG2.test_connect_nodes10": {},
                    "Test_dataflow_core_DAG2.test_connect_nodes4": {},
                    "Test_dataflow_core_DAG1.test_add_nodes3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestResultBundle.test_get_columns_for_tag1": {},
                    "Test_dataflow_core_visualization1.test_draw_to_file1": {},
                    "TestResultBundle.test_to_dict_and_back": {},
                    "Test_dataflow_core_DAG1.test_add_nodes5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG1.test_add_nodes2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_df_info_as_string.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestArmaReturnsBuilder.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG1.test_add_nodes1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG4.test_append_to_tail1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG5.test_compose_empty_with_empty": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDagAdapter1.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG4.test_insert_at_head3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes5": {},
                    "Test_dataflow_core_DAG1.test_add_nodes4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_df_info_as_string.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestPredictionResultBundle.test_to_config1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestResultBundle.test_to_config1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_DagBuilder_name_from_string.test2": {},
                    "Test_dataflow_core_DAG4.test_insert_at_head4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes3": {},
                    "Test_dataflow_core_DAG5.test_compose_empty_with_nonempty": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG5.test_compose_nonempty_with_nonempty": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes7": {},
                    "TestResultBundle.test_pickle1": {},
                    "TestResultBundle.test_from_config1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestArmaReturnsBuilder.test_str1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG4.test_insert_at_head1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG4.test_append_to_tail4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes9": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG4.test_insert_at_head2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_DagBuilder_name_from_string.test1": {},
                    "TestMvnReturnsBuilder.test_str1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestRollingFitPredictDagRunner1.test2": {},
                    "Test_dataflow_core_DAG4.test_append_to_tail2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestRollingFitPredictDagRunner1.test3": {},
                    "Test_dataflow_core_DAG4.test_append_to_tail3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_dataflow_core_DAG2.test_connect_nodes8": {},
                    "Test_dataflow_core_DAG2.test_connect_nodes6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestRollingFitPredictDagRunner1.test1": {}
                },
                "test_dag.py": {
                    "name": "test_dag.py"
                },
                "test_utils.py": {
                    "name": "test_utils.py"
                },
                "test_builders.py": {
                    "name": "test_builders.py"
                },
                "test_runners.py": {
                    "name": "test_runners.py"
                },
                "test_result_bundle.py": {
                    "name": "test_result_bundle.py"
                },
                "test_visualization.py": {
                    "name": "test_visualization.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "utils.py": {
                "name": "utils.py"
            },
            "dag.py": {
                "name": "dag.py"
            },
            "dag_runner.py": {
                "name": "dag_runner.py"
            },
            "node.py": {
                "name": "node.py"
            },
            "result_bundle.py": {
                "name": "result_bundle.py"
            },
            "dag_builder_example.py": {
                "name": "dag_builder_example.py"
            },
            "visualization.py": {
                "name": "visualization.py"
            },
            "visitors.py": {
                "name": "visitors.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "dag_builder.py": {
                "name": "dag_builder.py"
            }
        },
        "backtest": {
            "test": {
                "outcomes": {
                    "Test_get_configs_from_command_line_Amp1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "simple_experiment.py": {
                    "name": "simple_experiment.py"
                },
                "test_dataflow_backtest_utils.py": {
                    "name": "test_dataflow_backtest_utils.py"
                },
                "test_run_config_list.py": {
                    "name": "test_run_config_list.py"
                }
            },
            "run_config_list.py": {
                "name": "run_config_list.py"
            },
            "backtest_test_case.py": {
                "name": "backtest_test_case.py"
            },
            "master_backtest.py": {
                "name": "master_backtest.py"
            },
            "run_config_stub.py": {
                "name": "run_config_stub.py"
            },
            "dataflow_backtest_utils.py": {
                "name": "dataflow_backtest_utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "universe.py": {
            "name": "universe.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "ck_alembic": {
        "versions": {
            "411c7363a33d_init.py": {
                "name": "411c7363a33d_init.py"
            },
            "411c7363a33d_init.sql": {
                "name": "411c7363a33d_init.sql"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "59e3f93ea2ca_add_spot_identifier_to_tables_and_.sql": {
                "name": "59e3f93ea2ca_add_spot_identifier_to_tables_and_.sql"
            },
            "59e3f93ea2ca_add_spot_identifier_to_tables_and_.py": {
                "name": "59e3f93ea2ca_add_spot_identifier_to_tables_and_.py"
            }
        },
        "alembic.ini": {
            "name": "alembic.ini"
        },
        "script.py.mako": {
            "name": "script.py.mako"
        },
        "env.py": {
            "name": "env.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        },
        "README": {
            "name": "README"
        }
    },
    "outcomes": {
        "test_class.test_method": {}
    },
    "helpers": {
        "telegram_notify": {
            "telegram_notify.py": {
                "name": "telegram_notify.py"
            },
            "README.md": {
                "name": "README.md"
            },
            "get_chat_id.py": {
                "name": "get_chat_id.py"
            },
            "config.py": {
                "name": "config.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "logging_testing": {
            "logging_module.py": {
                "name": "logging_module.py"
            },
            "logging_main.py": {
                "name": "logging_main.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "__pycache__": {
            "hlogging.cpython-310.pyc": {
                "name": "hlogging.cpython-310.pyc"
            },
            "hchatgpt.cpython-310.pyc": {
                "name": "hchatgpt.cpython-310.pyc"
            },
            "hwarnings.cpython-310.pyc": {
                "name": "hwarnings.cpython-310.pyc"
            },
            "hio.cpython-310.pyc": {
                "name": "hio.cpython-310.pyc"
            },
            "hversion.cpython-310.pyc": {
                "name": "hversion.cpython-310.pyc"
            },
            "hintrospection.cpython-310.pyc": {
                "name": "hintrospection.cpython-310.pyc"
            },
            "hsystem.cpython-310.pyc": {
                "name": "hsystem.cpython-310.pyc"
            },
            "hparser.cpython-310.pyc": {
                "name": "hparser.cpython-310.pyc"
            },
            "hserver.cpython-310.pyc": {
                "name": "hserver.cpython-310.pyc"
            },
            "hgoogle_file_api.cpython-38.pyc": {
                "name": "hgoogle_file_api.cpython-38.pyc"
            },
            "hwall_clock_time.cpython-310.pyc": {
                "name": "hwall_clock_time.cpython-310.pyc"
            },
            "htimer.cpython-310.pyc": {
                "name": "htimer.cpython-310.pyc"
            },
            "hprint.cpython-310.pyc": {
                "name": "hprint.cpython-310.pyc"
            },
            "hgit.cpython-310.pyc": {
                "name": "hgit.cpython-310.pyc"
            },
            "hdbg.cpython-310.pyc": {
                "name": "hdbg.cpython-310.pyc"
            },
            "hunit_test.cpython-310-pytest-7.4.2.pyc": {
                "name": "hunit_test.cpython-310-pytest-7.4.2.pyc"
            },
            "__init__.cpython-310.pyc": {
                "name": "__init__.cpython-310.pyc"
            },
            "henv.cpython-310.pyc": {
                "name": "henv.cpython-310.pyc"
            },
            "hchatgpt_instructions.cpython-310.pyc": {
                "name": "hchatgpt_instructions.cpython-310.pyc"
            }
        },
        "old": {
            "tunnels.py": {
                "name": "tunnels.py"
            },
            "env2.py": {
                "name": "env2.py"
            },
            "conda.py": {
                "name": "conda.py"
            },
            "user_credentials.py": {
                "name": "user_credentials.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "test": {
            "outcomes": {
                "TestSql1.test_duplicate_removal1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_gh_create_pr3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestLibTasksRunTests1.test_find_test_class2": {},
                "TestDryRunTasks2.test_lint2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_compute_file_signature1.test2": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_additional_filters2": {},
                "Test_dassert1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCacheEnableCheckOnlyIfPresent1.test_disk_cache1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_generate_compose_file1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests7_inside_ck_infra": {},
                "Test_to_series1.test3": {},
                "TestPlaybackInputOutput1.test10": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckAndFilterMatchingColumns.test_check_and_filter_matching_columns1": {},
                "Test_find_func_class_uses1.test1": {},
                "TestToPythonCode1.test_dict1": {},
                "TestPlaybackInputOutput1.test9": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_have_same_tz1.test3": {},
                "Test_find_bar_timestamp2.test1": {},
                "test_class.test_method": {},
                "TestDfToStr.test_df_to_str7": {},
                "Test_build_run_command_line1.test_run_fast_tests7_inside_ci": {},
                "Test_Traceback1.test_parse5": {},
                "Test_dedent1.test2": {},
                "Test_obj_to_str2.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTable1.test_unique1": {},
                "TestDryRunTasks2.test_docker_pull": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_generate_compose_file1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_container_type1.test_assert1": {},
                "Test_get_function_name1.test1": {},
                "TestYieldParquetTiles.test_yield_tiles_by_year": {},
                "TestDryRunTasks2.test_git_pull": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_apply_index_mode.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_Traceback1.test_parse2": {},
                "TestToPythonCode1.test_int3": {},
                "Test_purify_from_env_vars.test_end_to_end": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_eq1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_misc1.test_is_instance2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackFileMode1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackInputOutput1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_find_bar_timestamp1.test2": {},
                "Test_apply_column_mode.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_subset_multiindex_df.test4": {},
                "Test_trim_df1.test_trim_df7": {},
                "Test_parallel_execute3.test_parallel_loky3": {},
                "TestDfToStr.test_df_to_str6": {},
                "Test_dassert_increasing_index.test2": {},
                "TestDryRunTasks2.test_gh_issue_title": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_git_branch_files": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_purify_from_environment1.test5": {},
                "Test_Mock_Class1.test_with_mock2": {},
                "Test_Mock_Class_with_decorator1.test1": {},
                "Test_dassert_str_is_date.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        },
                        "test.txt.tmp": {
                            "name": "test.txt.tmp"
                        }
                    }
                },
                "TestDataframeToJson.test_dataframe_to_json_timestamp": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTable1.test_filter_table1": {},
                "TestPlaybackInputOutput1.test12": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckString1.test_check_string_missing2": {
                    "output": {}
                },
                "Test_dassert_is_proportion1.test_assert3": {},
                "Test_obj_to_str2.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackInputOutput1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_related_params1.test3": {},
                "Test_git_submodule2.test_group_hashes3": {},
                "Test_convert_unix_epoch_to_timestamp.test1": {},
                "Test_s3_functions1.test_extract_bucket_from_path1": {},
                "Test_to_series1.test1": {},
                "Test_trim_df1.test_trim_df5": {},
                "TestCheckDataFrame1.test_check_df_missing2": {
                    "output": {}
                },
                "Test_obj_to_str1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGetFunctionFromString1.test1": {},
                "Test_trim_df1.test_types2": {},
                "TestTestCase1.test_assert_equal5": {},
                "TestCheckString1.test_check_string_missing1": {
                    "output": {}
                },
                "Test_convert_unix_epoch_to_timestamp.test3": {},
                "Test_purify_object_representation1.test3": {},
                "TestDryRunTasks1.test_docker_images_ls_repo": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_filter_data_by_values1.test_conjunction1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPartitionedParquet1.test_write_and_read2": {},
                "Test_build_run_command_line1.test_run_fast_tests2_inside_ci": {},
                "Test_str_to_timestamp1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckString1.test_check_string_not_equal1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_purify_from_environment1.test6": {},
                "Test_dassert_eq1.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_git_repo_name1.test_get_repo_name4": {},
                "TestToPythonCode1.test_list1": {},
                "Test_dassert_misc1.test_no_duplicates2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_Traceback1.test_parse1": {},
                "Test_parallel_execute2.test_parallel_asyncio_threading2": {},
                "Test_dassert_is_proportion1.test_assert2": {},
                "TestCheckDataFrame1.test_check_df_equal3": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "Test_git_submodule2.test_group_hashes2": {},
                "TestDryRunTasks2.test_find_test_class1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_misc1.test_not_intersection2": {},
                "TestCompareDataframeRows.test_compare_dataframe_rows2": {},
                "TestCheckString1.test_check_string_not_equal3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_parallel_execute2.test_serial1": {},
                "TestCheckDataFrame1.test_check_df_missing1": {
                    "output": {}
                },
                "TestAddDatePartitionColumns.test_add_date_partition_columns3": {},
                "TestPlaybackInputOutput1.test17": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_find_bar_timestamp1.test3": {},
                "TestSql1.test_copy_rows_with_copy_from1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_parallel_execute2.test_serial2": {},
                "TestPlaybackFileMode1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_git_merge_master": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_pytest_repro_end_to_end.test4": {
                    "input": {
                        "log.txt": {
                            "name": "log.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_sort_dictionary.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_find_bar_timestamp1.test1": {},
                "Test_find_file_with_dir1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPartitionedDataset.test_get_test_data1": {},
                "TestDryRunTasks1.test_docker_ps": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCompareDataframeRows.test_compare_dataframe_rows1": {},
                "TestDfToStr.test_df_to_str1": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_additional_filters1": {},
                "Test_purify_from_environment1.test4": {},
                "Test_find_file_with_dir1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestRemoveDuplicates.test_remove_duplicates2": {},
                "TestAddDatePartitionColumns.test_add_date_partition_columns4": {},
                "Test_is_pickleable1.test_method4": {},
                "Test_pytest_repro_end_to_end.test5": {
                    "input": {
                        "log.txt": {
                            "name": "log.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_obj_to_str2.test6": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_lint1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_find_bar_timestamp2.test2": {},
                "Test_generate_compose_file1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDfToStr.test_df_to_str2": {},
                "Test_dassert_misc1.test_in2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_compare_dfs.test3": {},
                "TestDfToStr.test_df_to_str3": {},
                "TestCheckString1.test_check_string_missing3": {
                    "output": {}
                },
                "Test_purify_object_representation1.test1": {},
                "Test_parallel_execute1.test_serial1": {},
                "TestCacheUpdateFunction1.test1": {},
                "Test_purify_from_environment1.test3": {},
                "Test_find_check_string_output1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_parallel_execute3.test_parallel_asyncio_threading1": {},
                "TestTestCase1.test_get_scratch_space1": {},
                "TestDryRunTasks2.test_git_branch_create1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_git_fetch_master": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCacheEnableReadOnly1.test_disk_cache1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_is_pickleable1.test_lambda1": {},
                "Test_dassert_is_proportion1.test_assert1": {},
                "Test_obj_to_str1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks1.test_print_setup": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_compare_dfs.test4": {},
                "TestTable1.test_filter_table3": {},
                "Test_apply_nan_mode.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_Traceback1.test_parse3": {},
                "TestPlaybackInputOutput1.test18": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPartitionedDataset.test_to_partitioned_dataset": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackInputOutput1.test11": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_all_attributes_are_same1.test3": {},
                "TestToPythonCode1.test_str3": {},
                "TestCheckDataFrame1.test_check_df_not_equal1": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "Test_open_html.test_windows1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_find_short_import1.test1": {},
                "TestPlaybackInputOutput1.test7": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckDataFrame1.test_check_df_not_equal2": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "Test_dassert_all_defined_or_all_None.test2": {},
                "Test_trim_df1.test_trim_df10": {},
                "Test_open_pdf.test_mac1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_obj_to_str2.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_git_repo_name1.test_parse_github_repo_name1": {},
                "TestCheckDataFrame1.test_check_df_not_equal4": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "Test_purify_amp_reference1.test1": {},
                "Test_convert_csv_to_dict.test1": {
                    "input": {
                        "test.csv": {
                            "name": "test.csv"
                        }
                    }
                },
                "TestRemoveDuplicates.test_remove_duplicates3": {},
                "Test_dassert1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_container_type1.test_assert2": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_invalid1": {},
                "TestParquet1.test_write_and_read_everything1": {},
                "Test_parallel_execute1.test_parallel_loky1": {},
                "Test_obj_to_str2.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks1.test_docker_kill_last": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_parallel_execute1.test_parallel_asyncio_threading1": {},
                "Test_dassert_eq1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dedent1.test_roundtrip1": {},
                "Test_trim_df1.test_trim_df11": {},
                "Test_get_df_from_iterator.test1": {},
                "Test_pytest_repro1.test_classes1": {},
                "Test_to_typed_csv.test1": {
                    "input": {
                        "test.csv": {
                            "name": "test.csv"
                        }
                    }
                },
                "Test_multiindex_df_info1.test2": {},
                "Test_dedent1.test1": {},
                "TestDryRunTasks1.test_git_clean": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_lgt1.test3": {},
                "Test_obj_to_str1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_print_setup": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_apply_nan_mode.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_one_year1": {},
                "TestDryRunTasks2.test_gh_create_pr2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_obj_to_str1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckDataFrame1.test_check_df_equal1": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "Test_dassert_issubclass1.test_fail1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_AssertEqual1.test_equal1": {},
                "TestPartitionedParquet1.test_merge1": {},
                "TestPlaybackInputOutput1.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackFileMode1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests5_outside_ck_infra": {},
                "TestCheckAndFilterMatchingColumns.test_check_and_filter_matching_columns4": {},
                "Test_compute_file_signature1.test1": {},
                "Test_apply_nan_mode.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_issubclass1.test_man_fail1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_is_unique1.test_dassert_is_unique2": {},
                "TestLibTasksRemoveSpaces1.test1": {},
                "Test_Traceback1.test_parse4": {},
                "TestDryRunTasks2.test_docker_kill_all": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_parallel_execute1.test_dry_run1": {},
                "TestToPythonCode1.test_config1": {},
                "TestDryRunTasks2.test_git_branch_create": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_tz1.test_dassert_is_datetime_assert1": {},
                "Test_merge_dfs1.test3": {},
                "TestDryRunTasks2.test_git_branch_create2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckDataFrame1.test_check_df_missing3": {
                    "output": {}
                },
                "Test_unit_test1.test_purify_txt_from_client1": {},
                "Test_git_repo_name1.test_get_repo_name_rountrip1": {},
                "Test_filter_data_by_comparison.test_conjunction1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests2_inside_ck_infra": {},
                "Test_build_run_command_line1.test_run_fast_tests1_outside_ck_infra": {},
                "Test_align_on_left1.test1": {},
                "Test_Mock1.test_lazy_attributes1": {},
                "Test_AssertEqual1.test_equal2": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_two_years1": {},
                "Test_dassert_misc1.test_is_sorted2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_purify_txt_from_client1.test2": {},
                "Test_parallel_execute3.test_parallel_loky1": {},
                "Test_dassert_misc1.test_is_instance5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCacheEnableReadOnly1.test_mem_disk_cache1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_multiindex_df_info1.test3": {},
                "Test_git_repo_name1.test_get_repo_name1": {},
                "Test_pytest_repro_end_to_end.test1": {
                    "input": {
                        "cache": {
                            "lastfailed": {
                                "name": "lastfailed"
                            }
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestSql1.test_create_insert_query": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestLibTasksRunTests1.test_find_test_class3": {},
                "Test_dassert_misc1.test_set_eq2": {},
                "TestDfToStr.test_df_to_str4": {},
                "Test_purify_object_representation1.test2": {},
                "TestUnitTestRenamer.test_rename_class1": {},
                "Test_Traceback1.test_parse_empty_traceback1": {},
                "TestAddDatePartitionColumns.test_add_date_partition_columns2": {},
                "TestSql1.test_duplicate_removal2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_pytest_repro_end_to_end.test7": {
                    "input": {
                        "log.txt": {
                            "name": "log.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackFilePath1.test1": {},
                "Test_pytest_repro1.test_files2": {},
                "TestYieldParquetTiles.test_yield_tiles_by_asset": {},
                "TestPlaybackInputOutput1.test15": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestParquet1.test_get_df1": {},
                "Test_convert_timestamp_to_unix_epoch.test1": {},
                "Test_system1.test7": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPythonCode1.test_int2": {},
                "Test_generate_compose_file1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPythonCode1.test_float1": {},
                "Test_AssertEqual1.test_not_equal1": {},
                "TestDataframeToJson.test_dataframe_to_json": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_compute_duration_df.test1": {},
                "TestPartitionedParquet1.test_write_and_read4": {},
                "TestSubsetDf1.test1": {},
                "Test_compute_file_signature1.test3": {},
                "Test_is_pickleable1.test_method3": {},
                "Test_trim_df1.test_trim_df8": {},
                "Test_trim_df1.test_trim_df9": {},
                "Test_purify_from_environment1.test2": {},
                "Test_system1.test8": {},
                "Test_purify_from_environment1.test7": {},
                "TestDryRunTasks2.test_git_clean": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestFilterDataByMethod.test1": {
                    "input": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_is_pickleable1.test_method2": {},
                "Test_parallel_execute3.test_parallel_asyncio_threading2": {},
                "Test_dassert_misc1.test_is_sorted4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestParquet1.test_read_with_filter1": {},
                "Test_trim_df1.test_trim_df12": {},
                "Test_system1.test10": {},
                "Test_git_repo_name1.test_get_task_prefix_from_repo_short_name1": {},
                "Test_dassert1.test6": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPartitionedParquet1.test_write_and_read1": {},
                "TestPlaybackInputOutput1.test16": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_indent1.test1": {},
                "TestFindGapsInDataframes.test_find_gaps_in_dataframes": {},
                "TestDryRunTasks1.test_git_pull": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests2_outside_ck_infra": {},
                "Test_get_dir_signature1.test1": {
                    "input": {
                        "result_0": {
                            "run_notebook.0.log": {
                                "name": "run_notebook.0.log"
                            },
                            "config.txt": {
                                "name": "config.txt"
                            },
                            "config.pkl": {
                                "name": "config.pkl"
                            }
                        },
                        "result_1": {
                            "config.txt": {
                                "name": "config.txt"
                            },
                            "config.pkl": {
                                "name": "config.pkl"
                            },
                            "run_notebook.1.log": {
                                "name": "run_notebook.1.log"
                            }
                        }
                    }
                },
                "Test_load_df_from_json.test1": {
                    "input": {
                        "test.json": {
                            "name": "test.json"
                        }
                    }
                },
                "Test_to_str2.test2": {},
                "Test_purify_txt_from_client1.test3": {},
                "Test_merge_dfs1.test1": {},
                "Test_build_run_command_line1.test_run_fast_tests6_inside_ci": {},
                "TestDryRunTasks2.test_docker_login": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestLibTasksRunTests1.test_find_test_decorator1": {},
                "TestDataframeToJson.test_dataframe_to_json_datetime": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_all_attributes_are_same1.test1": {},
                "Test_compare_dfs.test6": {},
                "Test_parse_linter_output1.test2": {},
                "Test_to_series1.test2": {},
                "TestPlaybackInputOutput1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_compare_dfs.test7": {},
                "TestParquet1.test_write_and_read_two_columns1": {},
                "Test_purify_object_representation1.test4": {},
                "Test_is_pickleable1.test_lambda2": {},
                "Test_apply_nan_mode.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTable1.test_from_text_invalid2": {},
                "Test_convert_timestamp_to_unix_epoch.test3": {},
                "Test_find_file_with_dir1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_open_html.test_linux1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPartitionedParquet1.test_write_and_read3": {},
                "Test_git_repo_name1.test_parse_github_repo_name4": {},
                "Test_is_pickleable1.test_func1": {},
                "Test_git_repo_name1.test_parse_github_repo_name2": {},
                "Test_find_file_with_dir1.test1": {},
                "TestRemoveDuplicates.test_remove_duplicates1": {},
                "Test_dassert_callable1.test_fail1": {},
                "Test_subset_multiindex_df.test3": {},
                "Test_system1.test9": {},
                "Test_compare_dfs.test1": {},
                "Test_dassert1.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_half2": {},
                "Test_find_file_with_dir1.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckDataFrame1.test_check_df_equal2": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "Test_parallel_execute3.test_parallel_asyncio_threading4": {},
                "Test_apply_index_mode.test1": {},
                "Test_apply_nan_mode.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_is_pickleable1.test_method1": {},
                "Test_dassert_tz_compatible1.test_dassert_compatible_timestamp_assert1": {},
                "Test_subset_multiindex_df.test2": {},
                "Test_check_string_debug1.test2": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "TestPytestRenameMethod.test_rename_method2": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_over_two_years1": {},
                "TestDfToStr.test_df_to_str9": {},
                "TestPlaybackInputOutput1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_str_to_timestamp1.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_obj_to_str2.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPlaybackInputOutput1.test8": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests5_inside_ck_infra": {},
                "TestDryRunTasks2.test_gh_workflow_list": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_container_type1.test_assert3": {},
                "TestToPythonCode1.test_str2": {},
                "Test_trim_df1.test_types3": {},
                "Test_trim_df1.test_trim_df6": {},
                "Test_dassert_related_params2.test3": {},
                "Test_trim_df1.test_types1": {},
                "TestCheckString1.test_check_string1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_parallel_execute3.test_serial1": {},
                "Test_dassert_misc1.test_is2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_misc1.test_eq_all2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_git_repo_name1.test_get_repo_name2": {},
                "TestDfToStr.test_df_to_str8": {},
                "Test_build_run_command_line1.test_run_fast_tests5_inside_ci": {},
                "Test_pytest_repro1.test_tests2": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_one_year2": {},
                "TestTable1.test_repr1": {},
                "TestDryRunTasks2.test_gh_create_pr1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPythonCode1.test_str1": {},
                "TestPlaybackInputOutput1.test6": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_purify_from_environment1.test1": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_invalid2": {},
                "TestDropDuplicates.test_drop_duplicates1": {},
                "TestToPythonCode1.test_float3": {},
                "Test_dassert_misc1.test_is_subset2": {},
                "TestCacheEnableReadOnly1.test_mem_cache1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_all_attributes_are_same1.test2": {},
                "TestTable1.test_from_text_invalid1": {},
                "Test_parallel_execute3.test_serial2": {},
                "TestToPythonCode1.test_float2": {},
                "TestTable1.test_unique2": {},
                "Test_check_string_debug1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert_is_proportion1.test_assert4": {},
                "Test_dassert_issubclass1.test_man_fail2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDataframeToJson.test_dataframe_to_json_uuid": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_trim_df1.test_trim_df4": {},
                "Test_from_typed_csv.test1": {
                    "input": {
                        "test.csv.types": {
                            "name": "test.csv.types"
                        },
                        "test.csv": {
                            "name": "test.csv"
                        }
                    }
                },
                "Test_compare_multiindex_dfs.test1": {},
                "Test_pytest_repro_end_to_end.test6": {
                    "input": {
                        "log.txt": {
                            "name": "log.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTable1.test_filter_table2": {},
                "Test_parallel_execute1.test_parallel_asyncio_threading2": {},
                "Test_generate_compose_file1.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestCheckDataFrame1.test_check_df_not_equal3": {
                    "output": {
                        "test_df.txt": {
                            "name": "test_df.txt"
                        }
                    }
                },
                "TestToPythonCode1.test_dataseries1": {},
                "Test_build_run_command_line1.test_run_fast_tests1_inside_ci": {},
                "Test_to_str2.test3": {},
                "Test_find_bar_timestamp1.test4": {},
                "TestDfToStr.test_df_to_str5": {},
                "Test_git_submodule2.test_group_hashes1": {},
                "Test_find_bar_timestamp1.test5": {},
                "Test_get_files_to_process1.test_assert2": {},
                "Test_is_pickleable1.test_func2": {},
                "TestDryRunTasks2.test_docker_ps": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGenerateAwsFiles.test1": {},
                "Test_pytest_repro1.test_classes2": {},
                "TestPlaybackInputOutput1.test13": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_find_check_string_output1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGenerateAwsFiles.test2": {},
                "Test_subset_multiindex_df.test1": {},
                "Test_obj_to_str1.test6": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_convert_unix_epoch_to_timestamp.test2": {},
                "TestLibTasksRunTests1.test_find_test_class1": {},
                "Test_dassert_lgt1.test2": {},
                "TestDropDuplicates.test_drop_duplicates3": {},
                "Test_pytest_repro1.test_tests1": {},
                "Test_dassert_is_unique1.test_dassert_is_unique1": {},
                "TestDryRunTasks2.test_docker_kill_last": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTestCase1.test_assert_not_equal2": {},
                "Test_get_dir_signature1.test2": {
                    "input": {
                        "result_0": {
                            "run_notebook.0.log": {
                                "name": "run_notebook.0.log"
                            },
                            "config.txt": {
                                "name": "config.txt"
                            }
                        },
                        "result_1": {
                            "config.txt": {
                                "name": "config.txt"
                            },
                            "run_notebook.1.log": {
                                "name": "run_notebook.1.log"
                            }
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPythonCode1.test_df1": {},
                "TestTestCase1.test_assert_equal1": {},
                "Test_filter_data_by_comparison.test_disjunction1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests6_outside_ck_infra": {},
                "Test_compare_dfs.test5": {},
                "Test_trim_df1.test_trim_df3": {},
                "Test_Mock1.test_str1": {},
                "Test_to_str2.test1": {},
                "Test_trim_df1.test_trim_df1": {},
                "TestUnitTestRenamer.test_rename_class2": {},
                "TestPytestRenameMethod.test_rename_method1": {},
                "Test_trim_df1.test_trim_df2": {},
                "Test_purify_txt_from_client1.test1": {},
                "Test_parse_linter_output1.test1": {},
                "Test_parallel_execute2.test_parallel_asyncio_threading1": {},
                "Test_change_filename_extension1.test1": {},
                "TestPlaybackInputOutput1.test14": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_compare_nans_in_dataframes.test1": {},
                "Test_pytest_repro_end_to_end.test3": {
                    "input": {
                        "log.txt": {
                            "name": "log.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks1.test_git_fetch_master": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_pytest_repro_end_to_end.test2": {
                    "input": {
                        "log.txt": {
                            "name": "log.txt"
                        }
                    },
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_open_html.test_mac1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_get_files_to_process1.test_assert1": {},
                "TestTestCase1.test_assert_equal_fuzzy_match1": {},
                "TestTestCase1.test_assert_not_equal1": {},
                "TestAddDatePartitionColumns.test_add_date_partition_columns1": {},
                "TestDryRunTasks1.test_docker_kill_all": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_docker_images_ls_repo": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_Mock_Class_with_context_manager1.test1": {},
                "Test_compare_dfs.test2": {},
                "TestGetParquetFiltersFromTimestampInterval1.test_by_month_half1": {},
                "TestCacheEnableCheckOnlyIfPresent1.test_mem_cache1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestToPartitionedDataset.test_to_partitioned_dataset_wrong_column": {},
                "TestDryRunTasks2.test_lint3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDropDuplicates.test_drop_duplicates4": {},
                "TestSql1.test_execute_insert_query1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_filter_data_by_values1.test_disjunction1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_dassert1.test7": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_gh_workflow_run": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_git_repo_name1.test_parse_github_repo_name3": {},
                "Test_multiindex_df_info1.test1": {},
                "Test_build_run_command_line1.test_run_fast_tests1_inside_ck_infra": {},
                "Test_pytest_repro1.test_files1": {},
                "TestDryRunTasks2.test_docker_stats": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_build_run_command_line1.test_run_fast_tests7_outside_ck_infra": {},
                "TestToPythonCode1.test_int1": {},
                "Test_Mock1.test_lazy_methods1": {},
                "TestCheckAndFilterMatchingColumns.test_check_and_filter_matching_columns5": {},
                "Test_convert_timestamp_to_unix_epoch.test2": {},
                "TestCacheEnableCheckOnlyIfPresent1.test_mem_disk_cache1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestParquet1.test_write_and_read_one_column1": {},
                "Test_apply_index_mode.test2": {},
                "TestDryRunTasks2.test_git_clean2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_get_name_from_function1.test1": {},
                "Test_obj_to_str1.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTable1.test_str1": {},
                "Test_parallel_execute3.test_parallel_asyncio_threading3": {},
                "Test_build_run_command_line1.test_run_fast_tests6_inside_ck_infra": {},
                "TestCheckString1.test_check_string_not_equal2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDryRunTasks2.test_gh_create_pr": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDropDuplicates.test_drop_duplicates2": {}
            },
            "test_hlogging.py": {
                "name": "test_hlogging.py"
            },
            "test_hintrospection.py": {
                "name": "test_hintrospection.py"
            },
            "test_hasyncio.py": {
                "name": "test_hasyncio.py"
            },
            "test_git.py": {
                "name": "test_git.py"
            },
            "test_hparquet.py": {
                "name": "test_hparquet.py"
            },
            "test_hsecrets.py": {
                "name": "test_hsecrets.py"
            },
            "test_repo_config_amp.py": {
                "name": "test_repo_config_amp.py"
            },
            "test_hsql.py": {
                "name": "test_hsql.py"
            },
            "test_traceback.py": {
                "name": "test_traceback.py"
            },
            "test_io_.py": {
                "name": "test_io_.py"
            },
            "test_system_interaction.py": {
                "name": "test_system_interaction.py"
            },
            "test_hretry.py": {
                "name": "test_hretry.py"
            },
            "test_lib_tasks_lint.py": {
                "name": "test_lib_tasks_lint.py"
            },
            "test_lib_tasks.py": {
                "name": "test_lib_tasks.py"
            },
            "test_dbg.py": {
                "name": "test_dbg.py"
            },
            "test_timer.py": {
                "name": "test_timer.py"
            },
            "test_sql.py": {
                "name": "test_sql.py"
            },
            "test_env.py": {
                "name": "test_env.py"
            },
            "test_hstring.py": {
                "name": "test_hstring.py"
            },
            "test_hserver.py": {
                "name": "test_hserver.py"
            },
            "test_lib_tasks_utils.py": {
                "name": "test_lib_tasks_utils.py"
            },
            "test_lib_tasks_pytest.py": {
                "name": "test_lib_tasks_pytest.py"
            },
            "test_cache.py": {
                "name": "test_cache.py"
            },
            "test_lib_tasks_find.py": {
                "name": "test_lib_tasks_find.py"
            },
            "test_s3.py": {
                "name": "test_s3.py"
            },
            "test_joblib_helpers.py": {
                "name": "test_joblib_helpers.py"
            },
            "test_unit_test_mock.py": {
                "name": "test_unit_test_mock.py"
            },
            "test_dataframe.py": {
                "name": "test_dataframe.py"
            },
            "test_hs3.py": {
                "name": "test_hs3.py"
            },
            "test_hdatetime.py": {
                "name": "test_hdatetime.py"
            },
            "test_csv_helpers.py": {
                "name": "test_csv_helpers.py"
            },
            "test_versioning.py": {
                "name": "test_versioning.py"
            },
            "test_open.py": {
                "name": "test_open.py"
            },
            "test_table.py": {
                "name": "test_table.py"
            },
            "test_unit_test.py": {
                "name": "test_unit_test.py"
            },
            "test_playback.py": {
                "name": "test_playback.py"
            },
            "test_lib_tasks_integrate.py": {
                "name": "test_lib_tasks_integrate.py"
            },
            "test_hpandas.py": {
                "name": "test_hpandas.py"
            },
            "test_lib_tasks_gh.py": {
                "name": "test_lib_tasks_gh.py"
            },
            "test_hunit_test_utils.py": {
                "name": "test_hunit_test_utils.py"
            },
            "test_lib_tasks_docker.py": {
                "name": "test_lib_tasks_docker.py"
            },
            "test_hobject.py": {
                "name": "test_hobject.py"
            },
            "test_repo_config_utils.py": {
                "name": "test_repo_config_utils.py"
            },
            "test_lib_tasks_git.py": {
                "name": "test_lib_tasks_git.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "test_dict.py": {
                "name": "test_dict.py"
            },
            "test_list.py": {
                "name": "test_list.py"
            },
            "test_printing.py": {
                "name": "test_printing.py"
            },
            "test_hnumpy.py": {
                "name": "test_hnumpy.py"
            }
        },
        "notebooks": {
            "gallery_s3.py": {
                "name": "gallery_s3.py"
            },
            "PartTask2291_Playback_approach_for_unit_testing.py": {
                "name": "PartTask2291_Playback_approach_for_unit_testing.py"
            },
            "cache.py": {
                "name": "cache.py"
            },
            "sage_tutorial.py": {
                "name": "sage_tutorial.py"
            },
            "PartTask2291_Playback_approach_for_unit_testing.ipynb": {
                "name": "PartTask2291_Playback_approach_for_unit_testing.ipynb"
            },
            "notebook_skeleton.py": {
                "name": "notebook_skeleton.py"
            },
            "notebook_skeleton.ipynb": {
                "name": "notebook_skeleton.ipynb"
            },
            "cache.ipynb": {
                "name": "cache.ipynb"
            },
            "gallery_s3.ipynb": {
                "name": "gallery_s3.ipynb"
            },
            "sage_tutorial.ipynb": {
                "name": "sage_tutorial.ipynb"
            },
            "gallery_parquet.py": {
                "name": "gallery_parquet.py"
            },
            "gallery_parquet.ipynb": {
                "name": "gallery_parquet.ipynb"
            }
        },
        "lib_tasks_perms.py": {
            "name": "lib_tasks_perms.py"
        },
        "hunit_test_utils.py": {
            "name": "hunit_test_utils.py"
        },
        "lib_tasks_print.py": {
            "name": "lib_tasks_print.py"
        },
        "hchatgpt_instructions.py": {
            "name": "hchatgpt_instructions.py",
            "gpt_id": "file-q1IWUAJrqbTs3PckuGVTlNcS"
        },
        "lib_tasks_git.py": {
            "name": "lib_tasks_git.py"
        },
        "hprint.py": {
            "name": "hprint.py"
        },
        "hunit_test.py": {
            "name": "hunit_test.py"
        },
        "hgoogle_file_api.py": {
            "name": "hgoogle_file_api.py"
        },
        "hintrospection.py": {
            "name": "hintrospection.py"
        },
        "hjoblib.py": {
            "name": "hjoblib.py"
        },
        "htable.py": {
            "name": "htable.py"
        },
        "htest_logger.py": {
            "name": "htest_logger.py"
        },
        "hs3.py": {
            "name": "hs3.py"
        },
        "hpytest.py": {
            "name": "hpytest.py"
        },
        "hwall_clock_time.py": {
            "name": "hwall_clock_time.py"
        },
        "hsql_implementation.py": {
            "name": "hsql_implementation.py"
        },
        "htranslate.py": {
            "name": "htranslate.py"
        },
        "hgit.py": {
            "name": "hgit.py"
        },
        "hthreading.py": {
            "name": "hthreading.py"
        },
        "README.md": {
            "name": "README.md"
        },
        "hasyncio.py": {
            "name": "hasyncio.py"
        },
        "hsystem.py": {
            "name": "hsystem.py"
        },
        "lib_tasks_lint.py": {
            "name": "lib_tasks_lint.py"
        },
        "hjupyter.py": {
            "name": "hjupyter.py"
        },
        "unit_test_skeleton.py": {
            "name": "unit_test_skeleton.py"
        },
        "hcache.py": {
            "name": "hcache.py"
        },
        "lib_tasks_docker.py": {
            "name": "lib_tasks_docker.py"
        },
        "lib_tasks_integrate.py": {
            "name": "lib_tasks_integrate.py"
        },
        "lib_tasks.py": {
            "name": "lib_tasks.py"
        },
        "hsecrets.py": {
            "name": "hsecrets.py"
        },
        "hmoto.py": {
            "name": "hmoto.py"
        },
        "hretry.py": {
            "name": "hretry.py"
        },
        "hchatgpt.py": {
            "name": "hchatgpt.py",
            "gpt_id": "file-TG4cGSFBTyjZS49ImUcyZwjb"
        },
        "hdatetime.py": {
            "name": "hdatetime.py"
        },
        "hlist.py": {
            "name": "hlist.py"
        },
        "haws.py": {
            "name": "haws.py"
        },
        "htypes.py": {
            "name": "htypes.py"
        },
        "hplayback.md": {
            "name": "hplayback.md"
        },
        "hplayback.py": {
            "name": "hplayback.py"
        },
        "htqdm.py": {
            "name": "htqdm.py"
        },
        "htimer.py": {
            "name": "htimer.py"
        },
        "hsql_test.py": {
            "name": "hsql_test.py"
        },
        "hopen.py": {
            "name": "hopen.py"
        },
        "hobject.py": {
            "name": "hobject.py"
        },
        "hversion.py": {
            "name": "hversion.py"
        },
        "hio.py": {
            "name": "hio.py"
        },
        "lib_tasks_find.py": {
            "name": "lib_tasks_find.py"
        },
        "hcsv.py": {
            "name": "hcsv.py"
        },
        "hsql.py": {
            "name": "hsql.py"
        },
        "hdataframe.py": {
            "name": "hdataframe.py"
        },
        "repo_config_utils.py": {
            "name": "repo_config_utils.py"
        },
        "lib_tasks_docker_release.py": {
            "name": "lib_tasks_docker_release.py"
        },
        "hpandas.py": {
            "name": "hpandas.py"
        },
        "lib_tasks_pytest.py": {
            "name": "lib_tasks_pytest.py"
        },
        "hdict.py": {
            "name": "hdict.py"
        },
        "hcache.md": {
            "name": "hcache.md"
        },
        "hdocker.py": {
            "name": "hdocker.py"
        },
        "hpickle.py": {
            "name": "hpickle.py"
        },
        "hparser.py": {
            "name": "hparser.py"
        },
        "lib_tasks_gh.py": {
            "name": "lib_tasks_gh.py"
        },
        "hwarnings.py": {
            "name": "hwarnings.py"
        },
        "hdbg.py": {
            "name": "hdbg.py"
        },
        "hlogging.py": {
            "name": "hlogging.py"
        },
        "hnumba.py": {
            "name": "hnumba.py"
        },
        "hstring.py": {
            "name": "hstring.py"
        },
        "code_organization.md": {
            "name": "code_organization.md"
        },
        "hnumpy.py": {
            "name": "hnumpy.py"
        },
        "htraceback.py": {
            "name": "htraceback.py"
        },
        "henv.py": {
            "name": "henv.py"
        },
        "hserver.py": {
            "name": "hserver.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        },
        "lib_tasks_utils.py": {
            "name": "lib_tasks_utils.py"
        },
        "hparquet.py": {
            "name": "hparquet.py"
        },
        "build_helpers_package.sh": {
            "name": "build_helpers_package.sh"
        },
        "hnetwork.py": {
            "name": "hnetwork.py"
        },
        "hemail.py": {
            "name": "hemail.py"
        }
    },
    "data_schema": {
        "test": {
            "outcomes": {
                "TestBuildS3DatasetPathFromArgs1.test_build_s3_dataset_path_from_invalid_args1": {},
                "TestGetImDbTableNameFromSignature.test_get_im_db_table_name_from_signature": {},
                "TestBuildS3DatasetPathFromArgs1.test_build_s3_dataset_path_from_missing_args1": {}
            },
            "test_dataset_schema_utils.py": {
                "name": "test_dataset_schema_utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "dataset_schema_versions": {
            "dataset_schema_v3.json": {
                "name": "dataset_schema_v3.json"
            }
        },
        "validate_dataset_signature.py": {
            "name": "validate_dataset_signature.py"
        },
        "changelog.txt": {
            "name": "changelog.txt"
        },
        "dataset_schema_utils.py": {
            "name": "dataset_schema_utils.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "documentation": {
        "scripts": {
            "test": {
                "outcomes": {
                    "Test_render_md2.test_render_command1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_preprocess1.test2": {
                        "input": {
                            "input1.txt": {
                                "name": "input1.txt"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_render_md3.test_render_plantuml3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_render_md1.test_uml_file_names1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_pandoc1.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_render_md3.test_render_plantuml2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_render_md3.test_render_plantuml_playback1": {
                        "input": {
                            "im_architecture.md.test": {
                                "name": "im_architecture.md.test"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_pandoc1.test1": {
                        "input": {
                            "code_style.txt.test": {
                                "name": "code_style.txt.test"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_lint_txt1.test_process1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_render_md3.test_render_plantuml1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_preprocess1.test1": {
                        "input": {
                            "input1.txt": {
                                "name": "input1.txt"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_render_md3.test_render_plantuml4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_render_md.py": {
                    "name": "test_render_md.py"
                },
                "test_all.py": {
                    "name": "test_all.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "lint_txt.py": {
                "name": "lint_txt.py"
            },
            "replace_latex.sh": {
                "name": "replace_latex.sh"
            },
            "latex_abbrevs.sty": {
                "name": "latex_abbrevs.sty"
            },
            "replace_latex.py": {
                "name": "replace_latex.py"
            },
            "pandoc.latex": {
                "name": "pandoc.latex"
            },
            "render_md.py": {
                "name": "render_md.py"
            },
            "pandoc.py": {
                "name": "pandoc.py"
            },
            "transform_txt.py": {
                "name": "transform_txt.py"
            },
            "generate_latex_sty.py": {
                "name": "generate_latex_sty.py"
            },
            "generate_script_catalog.py": {
                "name": "generate_script_catalog.py"
            },
            "convert_txt_to_pandoc.py": {
                "name": "convert_txt_to_pandoc.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "gh-md-toc": {
                "name": "gh-md-toc"
            }
        },
        "media": {
            "workflow.jpg": {
                "name": "workflow.jpg"
            }
        },
        "general": {
            "images": {
                "github_zenhub": {
                    "zenhub_connect_PR_to_issue.png": {
                        "name": "zenhub_connect_PR_to_issue.png"
                    }
                }
            },
            "collaboration_rules.md": {
                "name": "collaboration_rules.md"
            },
            "author_guidelines.md": {
                "name": "author_guidelines.md"
            },
            "reading_list.md": {
                "name": "reading_list.md"
            },
            "git.md": {
                "name": "git.md"
            },
            "email.md": {
                "name": "email.md"
            },
            "scrum_methodology.md": {
                "name": "scrum_methodology.md"
            },
            "ssh.md": {
                "name": "ssh.md"
            },
            "research_methodology.md": {
                "name": "research_methodology.md"
            },
            "how_to_read_other_people_code.md": {
                "name": "how_to_read_other_people_code.md"
            },
            "architecture_diagrams.md": {
                "name": "architecture_diagrams.md"
            },
            "code_review.md": {
                "name": "code_review.md"
            },
            "the_pragramatic_programmer.md": {
                "name": "the_pragramatic_programmer.md"
            },
            "datasets.md": {
                "name": "datasets.md"
            },
            "setup_dev_environment.md": {
                "name": "setup_dev_environment.md"
            },
            "design_philosophy.md": {
                "name": "design_philosophy.md"
            },
            "common_abbreviations.md": {
                "name": "common_abbreviations.md"
            },
            "converting_gdocs_to_md.md": {
                "name": "converting_gdocs_to_md.md"
            },
            "code_style.md": {
                "name": "code_style.md"
            },
            "type_hints.md": {
                "name": "type_hints.md"
            },
            "jupytext.md": {
                "name": "jupytext.md"
            }
        },
        "technical": {
            "old": {
                "development_environment_internals.md": {
                    "name": "development_environment_internals.md"
                }
            },
            "backtesting_design.md": {
                "name": "backtesting_design.md"
            },
            "github_label_maker.md": {
                "name": "github_label_maker.md"
            },
            "qgrid.md": {
                "name": "qgrid.md"
            },
            "time_series.md": {
                "name": "time_series.md"
            },
            "literature_review.md": {
                "name": "literature_review.md"
            },
            "event_study_design.md": {
                "name": "event_study_design.md"
            },
            "plotting.md": {
                "name": "plotting.md"
            },
            "package_dependencies.md": {
                "name": "package_dependencies.md"
            },
            "rollout_process.md": {
                "name": "rollout_process.md"
            },
            "gsheet_into_pandas.md": {
                "name": "gsheet_into_pandas.md"
            }
        },
        "README.md": {
            "name": "README.md"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "dev_scripts": {
        "github": {
            "labels": {
                "backup": {
                    "labels.ParticleDev.infra.json": {
                        "name": "labels.ParticleDev.infra.json"
                    },
                    "labels.alphamatic.amp.json": {
                        "name": "labels.alphamatic.amp.json"
                    },
                    "labels.ParticleDev.commodity_research.json": {
                        "name": "labels.ParticleDev.commodity_research.json"
                    }
                },
                "set_labels.sh": {
                    "name": "set_labels.sh"
                },
                "gh_tech_labels.json": {
                    "name": "gh_tech_labels.json"
                },
                "gh_org_labels.json": {
                    "name": "gh_org_labels.json"
                }
            },
            "set_secrets.py": {
                "name": "set_secrets.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "to_clean": {
            "gen_utils.ORIG.py": {
                "name": "gen_utils.ORIG.py"
            },
            "gen_utils.py": {
                "name": "gen_utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "git": {
            "git_hooks": {
                "test": {
                    "outcomes": {
                        "Test_git_hooks_utils1.test_check_words_in_text1": {},
                        "Test_git_hooks_utils1.test_caesar1": {}
                    },
                    "test_install_hooks.py": {
                        "name": "test_install_hooks.py"
                    }
                },
                "utils.py": {
                    "name": "utils.py"
                },
                "commit-msg.py": {
                    "name": "commit-msg.py"
                },
                "install_hooks.py": {
                    "name": "install_hooks.py"
                },
                "translate.py": {
                    "name": "translate.py"
                },
                "pre-commit-dry-run.py": {
                    "name": "pre-commit-dry-run.py"
                },
                "pre-commit.py": {
                    "name": "pre-commit.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "gs_to_files.sh": {
                "name": "gs_to_files.sh"
            },
            "gup.py": {
                "name": "gup.py"
            },
            "gs": {
                "name": "gs"
            },
            "gpa": {
                "name": "gpa"
            },
            "git_shrink_repo.sh": {
                "name": "git_shrink_repo.sh"
            },
            "git_submodules_stash.sh": {
                "name": "git_submodules_stash.sh"
            },
            "gp": {
                "name": "gp"
            },
            "gctheirs": {
                "name": "gctheirs"
            },
            "git_previous_commit_files.sh": {
                "name": "git_previous_commit_files.sh"
            },
            "git_graph.sh": {
                "name": "git_graph.sh"
            },
            "gd_master.sh": {
                "name": "gd_master.sh"
            },
            "gco": {
                "name": "gco"
            },
            "gcours": {
                "name": "gcours"
            },
            "git_submodules_are_updated.sh": {
                "name": "git_submodules_are_updated.sh"
            },
            "git_branch_name.sh": {
                "name": "git_branch_name.sh"
            },
            "gllmy": {
                "name": "gllmy"
            },
            "git_branch.sh": {
                "name": "git_branch.sh"
            },
            "git_hash_head.sh": {
                "name": "git_hash_head.sh"
            },
            "gd_notebook.py": {
                "name": "gd_notebook.py"
            },
            "gsp.py": {
                "name": "gsp.py"
            },
            "git_files.sh": {
                "name": "git_files.sh"
            },
            "git_submodules_roll_fwd.sh": {
                "name": "git_submodules_roll_fwd.sh"
            },
            "git_conflict_files.sh": {
                "name": "git_conflict_files.sh"
            },
            "git_branch_point.sh": {
                "name": "git_branch_point.sh"
            },
            "gd": {
                "name": "gd"
            },
            "gcl": {
                "name": "gcl"
            },
            "grc": {
                "name": "grc"
            },
            "git_root.sh": {
                "name": "git_root.sh"
            },
            "git_conflict_show.sh": {
                "name": "git_conflict_show.sh"
            },
            "git_submodules_clean.sh": {
                "name": "git_submodules_clean.sh"
            },
            "gll": {
                "name": "gll"
            },
            "git_submodules.py": {
                "name": "git_submodules.py"
            },
            "gss": {
                "name": "gss"
            },
            "git_backup.sh": {
                "name": "git_backup.sh"
            },
            "grs": {
                "name": "grs"
            },
            "git_submodules_commit.sh": {
                "name": "git_submodules_commit.sh"
            },
            "gd_names.sh": {
                "name": "gd_names.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "git_submodules_pull.sh": {
                "name": "git_submodules_pull.sh"
            },
            "gsl": {
                "name": "gsl"
            },
            "gdc": {
                "name": "gdc"
            },
            "gdpy": {
                "name": "gdpy"
            },
            "git_revert.sh": {
                "name": "git_revert.sh"
            },
            "git_clone.sh": {
                "name": "git_clone.sh"
            },
            "git_untracked_files.sh": {
                "name": "git_untracked_files.sh"
            }
        },
        "poetry": {
            "run_poetry_debug.py": {
                "name": "run_poetry_debug.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "chatgpt": {
            "example_data": {
                "gpt_linted_dropcontact.how_to_guide.md": {
                    "name": "gpt_linted_dropcontact.how_to_guide.md"
                },
                "corrupted_dropcontact.how_to_guide.md": {
                    "name": "corrupted_dropcontact.how_to_guide.md"
                }
            },
            "chatgpt_assistant_manager.py.log": {
                "name": "chatgpt_assistant_manager.py.log"
            },
            "chatgpt_assistant_manager.py": {
                "name": "chatgpt_assistant_manager.py",
                "gpt_id": "file-ndzhEh7txd02lrlQILFkE4iN"
            },
            "chatgpt_assistant_runner.py.log": {
                "name": "chatgpt_assistant_runner.py.log"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "chatgpt_assistant_runner.py": {
                "name": "chatgpt_assistant_runner.py",
                "gpt_id": "file-Y6tIzEbGHm3QsHm41MQxcue1"
            }
        },
        "cleanup_scripts": {
            "CmTask5743_Replace_the_aliases_of_builtin_types_to_Python_native_data_types_20231023.sh": {
                "name": "CmTask5743_Replace_the_aliases_of_builtin_types_to_Python_native_data_types_20231023.sh"
            },
            "CmTask4090_Add_a_reader_for_TWAP_fills.20230327.sh": {
                "name": "CmTask4090_Add_a_reader_for_TWAP_fills.20230327.sh"
            },
            "CmTask972_Merge_dataframe_to_str_and_df_to_short_str_into_hpandas.py": {
                "name": "CmTask972_Merge_dataframe_to_str_and_df_to_short_str_into_hpandas.py"
            },
            "CmTask974_Move_dataframe_to_str_and_df_to_short_str_to_hpandas.sh": {
                "name": "CmTask974_Move_dataframe_to_str_and_df_to_short_str_to_hpandas.sh"
            },
            "CMTask2669_Rename_real_time_loop_time_out_in_secs.sh": {
                "name": "CMTask2669_Rename_real_time_loop_time_out_in_secs.sh"
            },
            "SorrTask259_Make_to_multi_line_cmd_public.sh": {
                "name": "SorrTask259_Make_to_multi_line_cmd_public.sh"
            },
            "Cmtask3554_Rename_run_tiled_backtest.202230111.sh": {
                "name": "Cmtask3554_Rename_run_tiled_backtest.202230111.sh"
            },
            "CMTask2692_Refactor_system_test_case.sh": {
                "name": "CMTask2692_Refactor_system_test_case.sh"
            },
            "CmTask5767_replace_pandas_is_monotonic_20231016.sh": {
                "name": "CmTask5767_replace_pandas_is_monotonic_20231016.sh"
            },
            "LimeTask506_Get_E8f_in_prod.sh": {
                "name": "LimeTask506_Get_E8f_in_prod.sh"
            },
            "CmTask3470_Rename_prediction_column_for_C1b_20230103.sh": {
                "name": "CmTask3470_Rename_prediction_column_for_C1b_20230103.sh"
            },
            "CMTask2669_Rename_initial_replayed_delay.sh": {
                "name": "CMTask2669_Rename_initial_replayed_delay.sh"
            },
            "CMTask3514_revert_rename_prediction_column.20230116.sh": {
                "name": "CMTask3514_revert_rename_prediction_column.20230116.sh"
            },
            "rename_ModelBuilder.sh": {
                "name": "rename_ModelBuilder.sh"
            },
            "CMTask2669_Rename_initial_replayed_dt.sh": {
                "name": "CMTask2669_Rename_initial_replayed_dt.sh"
            },
            "SorrTask584_Use_str_to_timestamp_instead_of_timestamp_as_str_to_timestamp.sh": {
                "name": "SorrTask584_Use_str_to_timestamp_instead_of_timestamp_as_str_to_timestamp.sh"
            },
            "CmTask3122_handle_infs_in_compare_visually_dataframes_20221103.sh": {
                "name": "CmTask3122_handle_infs_in_compare_visually_dataframes_20221103.sh"
            },
            "AmpTask1786_Integrate_20220916.sh": {
                "name": "AmpTask1786_Integrate_20220916.sh"
            },
            "CMTask2746_Move_every_test_case_20220905.sh": {
                "name": "CMTask2746_Move_every_test_case_20220905.sh"
            },
            "CMTask2829_Rename_functions_to_use_object_names_20220916.sh": {
                "name": "CMTask2829_Rename_functions_to_use_object_names_20220916.sh"
            },
            "CMTask3514_rename_predictions.20230124.sh": {
                "name": "CMTask3514_rename_predictions.20230124.sh"
            },
            "CmTask972_Merge_dataframe_to_str_and_df_to_short_str_into_hpandas.sh": {
                "name": "CmTask972_Merge_dataframe_to_str_and_df_to_short_str_into_hpandas.sh"
            },
            "SorrTask188_Move_Code_Style_doc_to_md.sh": {
                "name": "SorrTask188_Move_Code_Style_doc_to_md.sh"
            },
            "CMTask1072_Rename_files_and_methods_MarketData_ImClient.sh": {
                "name": "CMTask1072_Rename_files_and_methods_MarketData_ImClient.sh"
            },
            "CmTask1292_Rename_old_aws_env_vars.py": {
                "name": "CmTask1292_Rename_old_aws_env_vars.py"
            },
            "CmTask1206_Move_core_pandas_to_helpers_hpandas_for_s3_usage.sh": {
                "name": "CmTask1206_Move_core_pandas_to_helpers_hpandas_for_s3_usage.sh"
            },
            "SorrTask258_Replace_pytest_raises_with_self_assertraises.sh": {
                "name": "SorrTask258_Replace_pytest_raises_with_self_assertraises.sh"
            },
            "CMTask3336_rename_SimulatedBroker.sh": {
                "name": "CMTask3336_rename_SimulatedBroker.sh"
            },
            "CMTask2739_Introduce_NonTime_ForecastSystem_20220908.sh": {
                "name": "CMTask2739_Introduce_NonTime_ForecastSystem_20220908.sh"
            },
            "CMTask2573_Move_get_config_from_nested_dict_to_Config.sh": {
                "name": "CMTask2573_Move_get_config_from_nested_dict_to_Config.sh"
            },
            "CMTask2669_Rename_sleep_interval_in_secs.sh": {
                "name": "CMTask2669_Rename_sleep_interval_in_secs.sh"
            },
            "CmampTask4662_Promote_pandas_version_5_replace_series.sh": {
                "name": "CmampTask4662_Promote_pandas_version_5_replace_series.sh"
            },
            "CmTask531_Move_test_golden_outcomes_out_of_the_way.sh": {
                "name": "CmTask531_Move_test_golden_outcomes_out_of_the_way.sh"
            },
            "CmTask1292_Rename_old_aws_env_vars.sh": {
                "name": "CmTask1292_Rename_old_aws_env_vars.sh"
            },
            "rename_bm_config.sh": {
                "name": "rename_bm_config.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "CmTask1590_Clean_up_type_hints_for_args_and_kwargs.sh": {
                "name": "CmTask1590_Clean_up_type_hints_for_args_and_kwargs.sh"
            },
            "SorrTask298_rename_get_docker_cmd_to_get_docker_run_cmd.sh": {
                "name": "SorrTask298_rename_get_docker_cmd_to_get_docker_run_cmd.sh"
            },
            "AmpTask1786_Integrate_20220902.sh": {
                "name": "AmpTask1786_Integrate_20220902.sh"
            }
        },
        "cvxpy_setup": {
            "build.sh": {
                "name": "build.sh"
            },
            "setenv.sh": {
                "name": "setenv.sh"
            },
            "requirements.txt": {
                "name": "requirements.txt"
            }
        },
        "infra": {
            "old": {
                "ssh_tunnels.py": {
                    "name": "ssh_tunnels.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "test_all.py": {
                    "name": "test_all.py"
                }
            },
            "gdrive.py": {
                "name": "gdrive.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "client_setup": {
            "build.sh": {
                "name": "build.sh"
            },
            "requirements.txt": {
                "name": "requirements.txt"
            }
        },
        "testing": {
            "rename_test_names.sh": {
                "name": "rename_test_names.sh"
            },
            "pytest_count_files.sh": {
                "name": "pytest_count_files.sh"
            },
            "pytest_log": {
                "name": "pytest_log"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "scraping_script": {
            "SorrTask396_scraping_script.ipynb": {
                "name": "SorrTask396_scraping_script.ipynb"
            }
        },
        "release_sorrentum": {
            "docker_bfg": {
                "README.md": {
                    "name": "README.md"
                },
                "bfg.sh": {
                    "name": "bfg.sh"
                },
                "Dockerfile": {
                    "name": "Dockerfile"
                },
                "entrypoint.sh": {
                    "name": "entrypoint.sh"
                }
            },
            "filter_repo": {
                "lint_history.py": {
                    "name": "lint_history.py"
                },
                "git-filter-repo": {
                    "name": "git-filter-repo"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "git_gc.sh": {
                "name": "git_gc.sh"
            },
            "git_release_sorrentum_repo.sh": {
                "name": "git_release_sorrentum_repo.sh"
            },
            "nb-clean.sh": {
                "name": "nb-clean.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "rsync_sorrentum_sandbox.sh": {
                "name": "rsync_sorrentum_sandbox.sh"
            }
        },
        "integrate_repos": {
            "integrate.sh": {
                "name": "integrate.sh"
            },
            "setup.sh": {
                "name": "setup.sh"
            }
        },
        "old": {
            "create_conda": {
                "install": {
                    "conda_envs": {
                        "develop.saggese.Linux.ip-172-31-24-5.txt": {
                            "name": "develop.saggese.Linux.ip-172-31-24-5.txt"
                        },
                        "p1_develop.greg.Linux.computer.txt": {
                            "name": "p1_develop.greg.Linux.computer.txt"
                        },
                        "p1_develop.julia.Linux.ip-172-31-16-23.txt": {
                            "name": "p1_develop.julia.Linux.ip-172-31-16-23.txt"
                        },
                        "p1_develop.asya.Darwin.MacBook-Pro-Asa.local.txt": {
                            "name": "p1_develop.asya.Darwin.MacBook-Pro-Asa.local.txt"
                        },
                        "amp_develop.saggese.Linux.ip-172-31-16-23.txt": {
                            "name": "amp_develop.saggese.Linux.ip-172-31-16-23.txt"
                        },
                        "p1_develop.julia.Linux.vostro.txt": {
                            "name": "p1_develop.julia.Linux.vostro.txt"
                        },
                        "p1_develop.saggese.Darwin.giacintos-mbp.lan.txt": {
                            "name": "p1_develop.saggese.Darwin.giacintos-mbp.lan.txt"
                        },
                        "p1_develop.daniil.Linux.daniil.txt": {
                            "name": "p1_develop.daniil.Linux.daniil.txt"
                        },
                        "p1_develop.paul.Linux.ip-172-31-16-23.txt": {
                            "name": "p1_develop.paul.Linux.ip-172-31-16-23.txt"
                        },
                        "develop.gp.Linux.twitter-data.txt": {
                            "name": "develop.gp.Linux.twitter-data.txt"
                        },
                        "pymc3.saggese.Darwin.gpmac.lan.txt": {
                            "name": "pymc3.saggese.Darwin.gpmac.lan.txt"
                        },
                        "pymc.saggese.Darwin.gpmac.lan.txt": {
                            "name": "pymc.saggese.Darwin.gpmac.lan.txt"
                        },
                        "p1_develop.paul.Darwin.Pauls-MBP.txt": {
                            "name": "p1_develop.paul.Darwin.Pauls-MBP.txt"
                        },
                        "develop.paul.Darwin.Pauls-MBP.txt": {
                            "name": "develop.paul.Darwin.Pauls-MBP.txt"
                        },
                        "amp_develop.paul.Darwin.Pauls-MBP.txt": {
                            "name": "amp_develop.paul.Darwin.Pauls-MBP.txt"
                        },
                        "p1_develop.greg.Linux.ip-172-31-16-23.txt": {
                            "name": "p1_develop.greg.Linux.ip-172-31-16-23.txt"
                        },
                        "amp_develop.saggese.Darwin.gpmac.lan.txt": {
                            "name": "amp_develop.saggese.Darwin.gpmac.lan.txt"
                        },
                        "p1_develop.saggese.Linux.ip-172-31-16-23.txt": {
                            "name": "p1_develop.saggese.Linux.ip-172-31-16-23.txt"
                        }
                    },
                    "requirements": {
                        "sage.txt": {
                            "name": "sage.txt"
                        },
                        "pymc.txt": {
                            "name": "pymc.txt"
                        }
                    },
                    "show_jupyter_extensions.sh": {
                        "name": "show_jupyter_extensions.sh"
                    },
                    "create_conda.py": {
                        "name": "create_conda.py"
                    },
                    "install_jupyter_extensions.sh": {
                        "name": "install_jupyter_extensions.sh"
                    },
                    "print_conda_packages.py": {
                        "name": "print_conda_packages.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "create_conda.amp_develop.sh": {
                        "name": "create_conda.amp_develop.sh"
                    },
                    "check_develop_packages.py": {
                        "name": "check_develop_packages.py"
                    },
                    "test_bootstrap.sh": {
                        "name": "test_bootstrap.sh"
                    }
                },
                "test": {
                    "test_amp_dev_scripts.py": {
                        "name": "test_amp_dev_scripts.py"
                    }
                },
                "_setenv_amp.py": {
                    "name": "_setenv_amp.py"
                },
                "conda_environment.md": {
                    "name": "conda_environment.md"
                },
                "_bootstrap.py": {
                    "name": "_bootstrap.py"
                },
                "setenv_amp.jenkins.sh": {
                    "name": "setenv_amp.jenkins.sh"
                },
                "_setenv_lib.py": {
                    "name": "_setenv_lib.py"
                },
                "setenv_amp.sh": {
                    "name": "setenv_amp.sh"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "linter": {
                "pre_pr_checklist.py": {
                    "name": "pre_pr_checklist.py"
                },
                "linter.py": {
                    "name": "linter.py"
                },
                "process_jupytext.py": {
                    "name": "process_jupytext.py"
                },
                "linter_master_report.py": {
                    "name": "linter_master_report.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "fix_helpers_imports.sh": {
                "name": "fix_helpers_imports.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "test": {
            "outcomes": {
                "TestMergeToml.test2": {},
                "TestRunNotebook3": {
                    "input": {
                        "simple_notebook.py": {
                            "name": "simple_notebook.py"
                        },
                        "simple_notebook.ipynb": {
                            "name": "simple_notebook.ipynb"
                        }
                    }
                },
                "TestRunNotebook3.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestMergeToml.test1": {},
                "Test_get_files_to_replace.test1": {
                    "input": {
                        "file1.txt": {
                            "name": "file1.txt"
                        },
                        "file2.txt": {
                            "name": "file2.txt"
                        },
                        "file3.txt": {
                            "name": "file3.txt"
                        }
                    }
                },
                "Test_publish_notebook1.test_publish_local_notebook1": {
                    "input": {
                        "simple_notebook.py": {
                            "name": "simple_notebook.py"
                        },
                        "simple_notebook.ipynb": {
                            "name": "simple_notebook.ipynb"
                        }
                    }
                }
            },
            "test_find_unused_golden_files.py": {
                "name": "test_find_unused_golden_files.py"
            },
            "test_notebook.sh": {
                "name": "test_notebook.sh"
            },
            "test_toml_merge.py": {
                "name": "test_toml_merge.py"
            },
            "test_replace_text.py": {
                "name": "test_replace_text.py"
            },
            "test_amp_dev_scripts.py": {
                "name": "test_amp_dev_scripts.py"
            },
            "test_run_notebook.py": {
                "name": "test_run_notebook.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "test_publish_notebook.py": {
                "name": "test_publish_notebook.py"
            }
        },
        "notebooks": {
            ".ipynb_checkpoints": {
                "gpt_text_cleaner-checkpoint.ipynb": {
                    "name": "gpt_text_cleaner-checkpoint.ipynb"
                }
            },
            "profile_test_durations.py": {
                "name": "profile_test_durations.py"
            },
            "publish_notebook.py": {
                "name": "publish_notebook.py"
            },
            "run_notebook.py": {
                "name": "run_notebook.py"
            },
            "run_notebook_test_case.py": {
                "name": "run_notebook_test_case.py"
            },
            "process_all_jupytext.sh": {
                "name": "process_all_jupytext.sh"
            },
            "fix_vim_plugin.sh": {
                "name": "fix_vim_plugin.sh"
            },
            "ipynb_format.py": {
                "name": "ipynb_format.py"
            },
            "gpt_text_cleaner.ipynb": {
                "name": "gpt_text_cleaner.ipynb"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "run_jupyter_server.py": {
                "name": "run_jupyter_server.py"
            },
            "profile_test_durations.ipynb": {
                "name": "profile_test_durations.ipynb"
            },
            "gpt_text_cleaner.py": {
                "name": "gpt_text_cleaner.py"
            }
        },
        "aws": {
            "AWS_dashboard.ipynb": {
                "name": "AWS_dashboard.ipynb"
            },
            "am_aws.py": {
                "name": "am_aws.py"
            },
            "get_inst_ip.sh": {
                "name": "get_inst_ip.sh"
            },
            "AWS_dashboard.py": {
                "name": "AWS_dashboard.py"
            },
            "get_inst_status.sh": {
                "name": "get_inst_status.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "latex": {
            "latexdockercmd.sh": {
                "name": "latexdockercmd.sh"
            }
        },
        "ctags.sh": {
            "name": "ctags.sh"
        },
        "vit": {
            "name": "vit"
        },
        "transform_skeleton.py": {
            "name": "transform_skeleton.py"
        },
        "grsync.py": {
            "name": "grsync.py"
        },
        "manage_cache.py": {
            "name": "manage_cache.py"
        },
        "find_unused_golden_files.py": {
            "name": "find_unused_golden_files.py"
        },
        "clean_up_text_files.sh": {
            "name": "clean_up_text_files.sh"
        },
        "timestamp": {
            "name": "timestamp"
        },
        "string_to_file.py": {
            "name": "string_to_file.py"
        },
        "measure_import_times.py": {
            "name": "measure_import_times.py"
        },
        "jackmd": {
            "name": "jackmd"
        },
        "script_skeleton.py": {
            "name": "script_skeleton.py"
        },
        "traceback_to_cfile.py": {
            "name": "traceback_to_cfile.py"
        },
        "ffind.py": {
            "name": "ffind.py"
        },
        "compile_all.py": {
            "name": "compile_all.py"
        },
        "tg.py": {
            "name": "tg.py"
        },
        "remove_escape_chars.py": {
            "name": "remove_escape_chars.py"
        },
        "jackpy": {
            "name": "jackpy"
        },
        "tmux_amp.sh": {
            "name": "tmux_amp.sh"
        },
        "lint_md.sh": {
            "name": "lint_md.sh"
        },
        "tree.sh": {
            "name": "tree.sh"
        },
        "README.md": {
            "name": "README.md"
        },
        "vic": {
            "name": "vic"
        },
        "path": {
            "name": "path"
        },
        "remove_empty_lines.sh": {
            "name": "remove_empty_lines.sh"
        },
        "email_notify.py": {
            "name": "email_notify.py"
        },
        "vigitp": {
            "name": "vigitp"
        },
        "diff_to_vimdiff.py": {
            "name": "diff_to_vimdiff.py"
        },
        "mk_targets": {
            "name": "mk_targets"
        },
        "ack": {
            "name": "ack"
        },
        "helpers.sh": {
            "name": "helpers.sh"
        },
        "release_encrypted_model.sh": {
            "name": "release_encrypted_model.sh"
        },
        "cie": {
            "name": "cie"
        },
        "lib_tasks_data_qa.py": {
            "name": "lib_tasks_data_qa.py"
        },
        "remove_redundant_paths.sh": {
            "name": "remove_redundant_paths.sh"
        },
        "go_amp.sh": {
            "name": "go_amp.sh"
        },
        "create_class_diagram.sh": {
            "name": "create_class_diagram.sh"
        },
        "jack": {
            "name": "jack"
        },
        "lib_tasks_data_reconcile.py": {
            "name": "lib_tasks_data_reconcile.py"
        },
        "convert_docx_to_markdown.py": {
            "name": "convert_docx_to_markdown.py"
        },
        "fix_perms.sh": {
            "name": "fix_perms.sh"
        },
        "lint_solidity.sh": {
            "name": "lint_solidity.sh"
        },
        "compress_files.sh": {
            "name": "compress_files.sh"
        },
        "docker_clean_postgres.sh": {
            "name": "docker_clean_postgres.sh"
        },
        "remove_jupyter_metadata.sh": {
            "name": "remove_jupyter_metadata.sh"
        },
        "encrypt_model.py": {
            "name": "encrypt_model.py"
        },
        "replace_text.py": {
            "name": "replace_text.py"
        },
        "lib_tasks_run_notebooks.py": {
            "name": "lib_tasks_run_notebooks.py"
        },
        "tmux_kill_session.sh": {
            "name": "tmux_kill_session.sh"
        },
        "jackppy": {
            "name": "jackppy"
        },
        "jackipynb": {
            "name": "jackipynb"
        },
        "jackmk": {
            "name": "jackmk"
        },
        "jackpyc": {
            "name": "jackpyc"
        },
        "viack": {
            "name": "viack"
        },
        "save_screenshot.sh": {
            "name": "save_screenshot.sh"
        },
        "url.py": {
            "name": "url.py"
        },
        "kga": {
            "name": "kga"
        },
        "setenv_amp.configure_env.sh": {
            "name": "setenv_amp.configure_env.sh"
        },
        "toml_merge.py": {
            "name": "toml_merge.py"
        },
        "parallel_script_skeleton.py": {
            "name": "parallel_script_skeleton.py"
        },
        "docker_clean_all.sh": {
            "name": "docker_clean_all.sh"
        },
        "run_profiling.sh": {
            "name": "run_profiling.sh"
        },
        "sync_repo.sh": {
            "name": "sync_repo.sh"
        },
        "viw": {
            "name": "viw"
        },
        "mkbak": {
            "name": "mkbak"
        },
        "vigit": {
            "name": "vigit"
        },
        "print_paths.sh": {
            "name": "print_paths.sh"
        },
        "call_graph.sh": {
            "name": "call_graph.sh"
        },
        "setenv_amp.sh": {
            "name": "setenv_amp.sh"
        },
        "__init__.py": {
            "name": "__init__.py"
        },
        "code_stats.sh": {
            "name": "code_stats.sh"
        },
        "zip_files.py": {
            "name": "zip_files.py"
        },
        "invite_github_collaborator.py": {
            "name": "invite_github_collaborator.py"
        },
        "jacktxt": {
            "name": "jacktxt"
        },
        "convert_docx_to_markdown.sh": {
            "name": "convert_docx_to_markdown.sh"
        },
        "vil": {
            "name": "vil"
        },
        "process_prof.py": {
            "name": "process_prof.py"
        },
        "export_vars.sh": {
            "name": "export_vars.sh"
        }
    },
    ".github.OLD": {
        "workflows": {
            "slow_tests.yml": {
                "name": "slow_tests.yml"
            },
            "ib_connector.build_image.yml.DISABLED": {
                "name": "ib_connector.build_image.yml.DISABLED"
            },
            "test_coverage.yml": {
                "name": "test_coverage.yml"
            },
            "import_cycles_detector.yml": {
                "name": "import_cycles_detector.yml"
            },
            "build_image.dev.yml": {
                "name": "build_image.dev.yml"
            },
            "linter.yml.DISABLED": {
                "name": "linter.yml.DISABLED"
            },
            "superslow_tests.yml.DISABLED": {
                "name": "superslow_tests.yml.DISABLED"
            },
            "release_new_preprod_ecs_task_definition.yml": {
                "name": "release_new_preprod_ecs_task_definition.yml"
            },
            "superslow_tests.yml": {
                "name": "superslow_tests.yml"
            },
            "build_image.cmamp.yml": {
                "name": "build_image.cmamp.yml"
            },
            "fast_tests.yml": {
                "name": "fast_tests.yml"
            },
            "release_new_prod_ecs_task_definition.yml": {
                "name": "release_new_prod_ecs_task_definition.yml"
            }
        },
        "gh_requirements.txt": {
            "name": "gh_requirements.txt"
        }
    },
    ".github": {
        "workflows": {
            "fast_tests.yml": {
                "name": "fast_tests.yml"
            }
        },
        "gh_requirements.txt": {
            "name": "gh_requirements.txt"
        }
    },
    "ravenpack": {
        "CmTask3863_Predict_price_by_sentiment.ipynb": {
            "name": "CmTask3863_Predict_price_by_sentiment.ipynb"
        },
        "CmTask4037_Correlate_RP_sentiment_and_returns.ipynb": {
            "name": "CmTask4037_Correlate_RP_sentiment_and_returns.ipynb"
        },
        "CmTask3863_Check_coin_coverage.ipynb": {
            "name": "CmTask3863_Check_coin_coverage.ipynb"
        },
        "CmTask3863_Check_event_coverage.ipynb": {
            "name": "CmTask3863_Check_event_coverage.ipynb"
        }
    },
    "sorrentum_sandbox": {
        "docker_common": {
            "update.sh": {
                "name": "update.sh"
            },
            "version.sh": {
                "name": "version.sh"
            },
            "README.md": {
                "name": "README.md"
            },
            "install_jupyter_extensions.sh": {
                "name": "install_jupyter_extensions.sh"
            },
            "repo_diff.sh": {
                "name": "repo_diff.sh"
            },
            "etc_sudoers": {
                "name": "etc_sudoers"
            },
            "bashrc": {
                "name": "bashrc"
            },
            "create_links.sh": {
                "name": "create_links.sh"
            },
            "utils.sh": {
                "name": "utils.sh"
            }
        },
        "devops": {
            "airflow_data": {
                "dags": {
                    "download_periodic_2mins_bitcoin_prices.py": {
                        "name": "download_periodic_2mins_bitcoin_prices.py"
                    },
                    "validate_and_resample_periodic_1min_postgres_ohlcv_binance.py": {
                        "name": "validate_and_resample_periodic_1min_postgres_ohlcv_binance.py"
                    },
                    "download_periodic_1min_postgres_ohlcv_binance.py": {
                        "name": "download_periodic_1min_postgres_ohlcv_binance.py"
                    },
                    "download_forecast_bitcoin_prices.py": {
                        "name": "download_forecast_bitcoin_prices.py"
                    },
                    "airflow_tutorial.py": {
                        "name": "airflow_tutorial.py"
                    },
                    "download_periodic_1hr_postgres_uniswap.py": {
                        "name": "download_periodic_1hr_postgres_uniswap.py"
                    },
                    "validate_and_extract_features_periodic_5min_mongo_posts_reddit.py": {
                        "name": "validate_and_extract_features_periodic_5min_mongo_posts_reddit.py"
                    },
                    "download_periodic_5min_mongo_posts_reddit.py": {
                        "name": "download_periodic_5min_mongo_posts_reddit.py"
                    },
                    "download_periodic_2mins_outlier.py": {
                        "name": "download_periodic_2mins_outlier.py"
                    },
                    "download_periodic_12hr_postgres_uniswap.py": {
                        "name": "download_periodic_12hr_postgres_uniswap.py"
                    },
                    "uniswap_1h_analysis_calculation.py": {
                        "name": "uniswap_1h_analysis_calculation.py"
                    },
                    "download_periodic_1min_postgres_uniswap.py": {
                        "name": "download_periodic_1min_postgres_uniswap.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "mongo_data": {
                "diagnostic.data": {
                    "metrics.2023-05-11T19-08-11Z-00000": {
                        "name": "metrics.2023-05-11T19-08-11Z-00000"
                    },
                    "metrics.2023-05-11T19-10-28Z-00000": {
                        "name": "metrics.2023-05-11T19-10-28Z-00000"
                    }
                },
                "index-6--1313211621341898853.wt": {
                    "name": "index-6--1313211621341898853.wt"
                },
                "index-3--1313211621341898853.wt": {
                    "name": "index-3--1313211621341898853.wt"
                },
                "collection-2--1313211621341898853.wt": {
                    "name": "collection-2--1313211621341898853.wt"
                },
                "index-1--1313211621341898853.wt": {
                    "name": "index-1--1313211621341898853.wt"
                },
                "index-5--1313211621341898853.wt": {
                    "name": "index-5--1313211621341898853.wt"
                },
                "collection-0--1313211621341898853.wt": {
                    "name": "collection-0--1313211621341898853.wt"
                },
                "collection-4--1313211621341898853.wt": {
                    "name": "collection-4--1313211621341898853.wt"
                }
            },
            "docker_cmd.sh": {
                "name": "docker_cmd.sh"
            },
            "docker_prune.sh": {
                "name": "docker_prune.sh"
            },
            "init_airflow_setup.sh": {
                "name": "init_airflow_setup.sh"
            },
            "docker-compose.yml": {
                "name": "docker-compose.yml"
            },
            "docker_build.sh": {
                "name": "docker_build.sh"
            },
            "docker_bash.sh": {
                "name": "docker_bash.sh"
            },
            "docker_push.sh": {
                "name": "docker_push.sh"
            },
            "docker_prune_all.sh": {
                "name": "docker_prune_all.sh"
            },
            "setenv.sh": {
                "name": "setenv.sh"
            },
            "docker_clean.sh": {
                "name": "docker_clean.sh"
            },
            "reset_airflow_setup.sh": {
                "name": "reset_airflow_setup.sh"
            },
            "docker_name.sh": {
                "name": "docker_name.sh"
            },
            "Dockerfile": {
                "name": "Dockerfile"
            },
            "docker_exec.sh": {
                "name": "docker_exec.sh"
            },
            "docker_kill.sh": {
                "name": "docker_kill.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "docker_pull.sh": {
                "name": "docker_pull.sh"
            },
            ".env": {
                "name": ".env"
            }
        },
        "examples": {
            "systems": {
                "reddit": {
                    "validate.py": {
                        "name": "validate.py"
                    },
                    "transform.py": {
                        "name": "transform.py"
                    },
                    "db.py": {
                        "name": "db.py"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "download.py": {
                        "name": "download.py"
                    },
                    "load_validate_transform.py": {
                        "name": "load_validate_transform.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "binance": {
                    "test": {
                        "test_download_to_csv.py": {
                            "name": "test_download_to_csv.py"
                        }
                    },
                    "validate.py": {
                        "name": "validate.py"
                    },
                    "download_to_csv.py": {
                        "name": "download_to_csv.py"
                    },
                    "db.py": {
                        "name": "db.py"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "load_and_validate.py": {
                        "name": "load_and_validate.py"
                    },
                    "download.py": {
                        "name": "download.py"
                    },
                    "load_validate_transform.py": {
                        "name": "load_validate_transform.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "altdata_notebooks": {
                "github.com.py": {
                    "name": "github.com.py"
                },
                "kaiko.com.py": {
                    "name": "kaiko.com.py"
                },
                "kaiko.com.ipynb": {
                    "name": "kaiko.com.ipynb"
                },
                "google_trends.py": {
                    "name": "google_trends.py"
                },
                "Glassnode.py": {
                    "name": "Glassnode.py"
                },
                "CoinMarketCap.py": {
                    "name": "CoinMarketCap.py"
                },
                "YahooFinance.ipynb": {
                    "name": "YahooFinance.ipynb"
                },
                "Blockchain.com.py": {
                    "name": "Blockchain.com.py"
                },
                "Kibot.py": {
                    "name": "Kibot.py"
                },
                "Glassnode.ipynb": {
                    "name": "Glassnode.ipynb"
                },
                "Chainlink.py": {
                    "name": "Chainlink.py"
                },
                "CoinGecko.py": {
                    "name": "CoinGecko.py"
                },
                "twitter.com.ipynb": {
                    "name": "twitter.com.ipynb"
                },
                "Chainlink.ipynb": {
                    "name": "Chainlink.ipynb"
                },
                "bitquery_uniswap.py": {
                    "name": "bitquery_uniswap.py"
                },
                "Kibot.ipynb": {
                    "name": "Kibot.ipynb"
                },
                "bitquery_uniswap.ipynb": {
                    "name": "bitquery_uniswap.ipynb"
                },
                "Blockchain.com.ipynb": {
                    "name": "Blockchain.com.ipynb"
                },
                "github.com.ipynb": {
                    "name": "github.com.ipynb"
                },
                "twitter.com.py": {
                    "name": "twitter.com.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "google_trends.ipynb": {
                    "name": "google_trends.ipynb"
                },
                "CoinGecko.ipynb": {
                    "name": "CoinGecko.ipynb"
                },
                "CoinMarketCap.ipynb": {
                    "name": "CoinMarketCap.ipynb"
                },
                "YahooFinance.py": {
                    "name": "YahooFinance.py"
                }
            },
            "ml_projects": {
                "Issue24_Team5_Implement_sandbox_for_Alpha_Vantage": {
                    "airflow": {
                        "dags": {
                            "download_sp500.py": {
                                "name": "download_sp500.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "Dockerfile": {
                            "name": "Dockerfile"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "processing": {
                        "style.mplstyle": {
                            "name": "style.mplstyle"
                        },
                        "anomalies.py": {
                            "name": "anomalies.py"
                        },
                        "graphing.py": {
                            "name": "graphing.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "models": {
                        "ticker.py": {
                            "name": "ticker.py"
                        },
                        "list_of_tickers.py": {
                            "name": "list_of_tickers.py"
                        },
                        "time_series.py": {
                            "name": "time_series.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "api": {
                        "mongo_db.py": {
                            "name": "mongo_db.py"
                        },
                        "alpha_vantage.py": {
                            "name": "alpha_vantage.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    ".gitignore": {
                        "name": ".gitignore"
                    },
                    "docker-compose.yml": {
                        "name": "docker-compose.yml"
                    },
                    "main.ipynb": {
                        "name": "main.ipynb"
                    },
                    "docker_bash.sh": {
                        "name": "docker_bash.sh"
                    },
                    "Dockerfile": {
                        "name": "Dockerfile"
                    },
                    "requirements.txt": {
                        "name": "requirements.txt"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "Issue25_Team6_Implement_sandbox_for_Bitquery_and_Uniswap": {
                    "docker": {
                        "bitquery": {
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "scripts": {
                        "app.py": {
                            "name": "app.py"
                        },
                        "bitquery_to_Postgress.py": {
                            "name": "bitquery_to_Postgress.py"
                        },
                        "docker-compose.yml": {
                            "name": "docker-compose.yml"
                        },
                        "analysis.ipynb": {
                            "name": "analysis.ipynb"
                        },
                        "get_data.py": {
                            "name": "get_data.py"
                        },
                        "test.py": {
                            "name": "test.py"
                        },
                        "requirements.txt": {
                            "name": "requirements.txt"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        "dockerfile": {
                            "name": "dockerfile"
                        }
                    },
                    "uniswap_data": {
                        "uniswap.csv": {
                            "name": "uniswap.csv"
                        }
                    },
                    "test": {
                        "bitquery_raw.csv": {
                            "name": "bitquery_raw.csv"
                        }
                    },
                    "Readme.txt": {
                        "name": "Readme.txt"
                    },
                    "download_to_csv.py": {
                        "name": "download_to_csv.py"
                    },
                    "docker_build.sh": {
                        "name": "docker_build.sh"
                    },
                    "docker_bash.sh": {
                        "name": "docker_bash.sh"
                    },
                    "analysis.ipynb": {
                        "name": "analysis.ipynb"
                    },
                    "Dask_analysis.ipynb": {
                        "name": "Dask_analysis.ipynb"
                    },
                    "db.py": {
                        "name": "db.py"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "api_query.py": {
                        "name": "api_query.py"
                    },
                    "Dask.ipynb": {
                        "name": "Dask.ipynb"
                    },
                    "download.py": {
                        "name": "download.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "uniswap_notebook.ipynb": {
                        "name": "uniswap_notebook.ipynb"
                    },
                    "dask_script.py": {
                        "name": "dask_script.py"
                    },
                    ".env": {
                        "name": ".env"
                    }
                },
                "Issue26_Team7_Implement_sandbox_for_Chainlink": {
                    "chainlink_data": {
                        "chainlink_data.csv": {
                            "name": "chainlink_data.csv"
                        }
                    },
                    "chainlink_data_anlaysis.ipynb": {
                        "name": "chainlink_data_anlaysis.ipynb"
                    },
                    "download_to_csv.py": {
                        "name": "download_to_csv.py"
                    },
                    "compute_to_db.py": {
                        "name": "compute_to_db.py"
                    },
                    "db.py": {
                        "name": "db.py"
                    },
                    "chainlink_compute_airflow_dag.py": {
                        "name": "chainlink_compute_airflow_dag.py"
                    },
                    "compute_data.ipynb": {
                        "name": "compute_data.ipynb"
                    },
                    "query_API.py": {
                        "name": "query_API.py"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "chainlink_BTC_airflow_dag.py": {
                        "name": "chainlink_BTC_airflow_dag.py"
                    },
                    "compute.py": {
                        "name": "compute.py"
                    },
                    "download.py": {
                        "name": "download.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "SorrIssue2_Cross_exchange_arbitrage_CEX_CEX": {
                    "Making Single Dataframe.ipynb": {
                        "name": "Making Single Dataframe.ipynb"
                    },
                    "Single_Dataframe.ipynb": {
                        "name": "Single_Dataframe.ipynb"
                    },
                    "Merging_Dfs.ipynb": {
                        "name": "Merging_Dfs.ipynb"
                    },
                    ".git_placeholder": {
                        "name": ".git_placeholder"
                    }
                },
                "SorrIssue8_Predict_Intraday_Trading_Volume": {
                    "intraday_volume_task1.ipynb": {
                        "name": "intraday_volume_task1.ipynb"
                    }
                },
                "SorrIssue14_Team1_Implement_sandbox_for_Google_Trends": {
                    "Jupyter Notebooks": {
                        "Feature_Predictions.ipynb": {
                            "name": "Feature_Predictions.ipynb"
                        }
                    },
                    "src": {
                        "validate.py": {
                            "name": "validate.py"
                        },
                        "download_to_csv.py": {
                            "name": "download_to_csv.py"
                        },
                        "db.py": {
                            "name": "db.py"
                        },
                        "download_to_db.py": {
                            "name": "download_to_db.py"
                        },
                        "test.py": {
                            "name": "test.py"
                        },
                        "load_and_validate.py": {
                            "name": "load_and_validate.py"
                        },
                        "download.py": {
                            "name": "download.py"
                        },
                        "load_validate_transform.py": {
                            "name": "load_validate_transform.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "airflow": {
                        "dags": {
                            "airflow_predictions_scheduler.py": {
                                "name": "airflow_predictions_scheduler.py"
                            },
                            "download_historical_postgres_google_trends.py": {
                                "name": "download_historical_postgres_google_trends.py"
                            },
                            "airflow_tutorial.py": {
                                "name": "airflow_tutorial.py"
                            },
                            "download_periodic_1hr_postgres_google_trends.py": {
                                "name": "download_periodic_1hr_postgres_google_trends.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "docker-compose.yaml": {
                            "name": "docker-compose.yaml"
                        },
                        "requirements_airflow.txt": {
                            "name": "requirements_airflow.txt"
                        },
                        "Dockerfile": {
                            "name": "Dockerfile"
                        },
                        "docker_exec.sh": {
                            "name": "docker_exec.sh"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        ".env": {
                            "name": ".env"
                        }
                    },
                    "devops": {
                        "docker-compose.yaml": {
                            "name": "docker-compose.yaml"
                        },
                        "requirements.txt": {
                            "name": "requirements.txt"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        ".env": {
                            "name": ".env"
                        }
                    },
                    "utilities": {
                        "custom_logger.py": {
                            "name": "custom_logger.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "common": {
                        "validate.py": {
                            "name": "validate.py"
                        },
                        "save.py": {
                            "name": "save.py"
                        },
                        "client.py": {
                            "name": "client.py"
                        },
                        "download.py": {
                            "name": "download.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "notebooks": {
                        "Deliverable_3.ipynb": {
                            "name": "Deliverable_3.ipynb"
                        }
                    },
                    "files": {
                        "ipad.csv": {
                            "name": "ipad.csv"
                        },
                        "data.json": {
                            "name": "data.json"
                        }
                    },
                    "docker_jupyter.sh": {
                        "name": "docker_jupyter.sh"
                    },
                    ".git_placeholder": {
                        "name": ".git_placeholder"
                    },
                    "set_env.sh": {
                        "name": "set_env.sh"
                    },
                    "Dockerfile": {
                        "name": "Dockerfile"
                    },
                    "requirements.txt": {
                        "name": "requirements.txt"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "run_jupyter.sh": {
                        "name": "run_jupyter.sh"
                    }
                },
                "SorrIssue21_Team2_Implement_sandbox_for_GitHub_2": {
                    "airflow_dag_BTC_team2.py": {
                        "name": "airflow_dag_BTC_team2.py"
                    },
                    "download_to_csv_team2.py": {
                        "name": "download_to_csv_team2.py"
                    },
                    "airflow_dag_SOL_team2.py": {
                        "name": "airflow_dag_SOL_team2.py"
                    },
                    "Anomaly_Detection_Script.py": {
                        "name": "Anomaly_Detection_Script.py"
                    },
                    "download_to_db_team2.py": {
                        "name": "download_to_db_team2.py"
                    },
                    "db_team2.py": {
                        "name": "db_team2.py"
                    },
                    "github_commits.csv": {
                        "name": "github_commits.csv"
                    },
                    "Anomaly_Detection_Github_Data_Team2_Dask.ipynb": {
                        "name": "Anomaly_Detection_Github_Data_Team2_Dask.ipynb"
                    },
                    "download_to_db_team2.py.log": {
                        "name": "download_to_db_team2.py.log"
                    },
                    "Anomaly_Detection_Github_Data_Team2.ipynb": {
                        "name": "Anomaly_Detection_Github_Data_Team2.ipynb"
                    },
                    "airflow_dag_DOGE_team2.py": {
                        "name": "airflow_dag_DOGE_team2.py"
                    },
                    "requirements.txt": {
                        "name": "requirements.txt"
                    },
                    "extracted_api.py": {
                        "name": "extracted_api.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "download_team2.py": {
                        "name": "download_team2.py"
                    },
                    "github_main.csv": {
                        "name": "github_main.csv"
                    },
                    "github_issues.csv": {
                        "name": "github_issues.csv"
                    }
                },
                "SorrIssue3_Implement_Avellaneda_model": {
                    ".git_placeholder": {
                        "name": ".git_placeholder"
                    }
                },
                "Issue28_Team9_Implement_sandbox_for_Kaiko": {
                    "dags": {
                        "realtime.py": {
                            "name": "realtime.py"
                        },
                        "analysis.py": {
                            "name": "analysis.py"
                        },
                        "historical.py": {
                            "name": "historical.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "kaiko-api-master": {
                        "kaiko": {
                            "utils.py": {
                                "name": "utils.py"
                            },
                            "constants.py": {
                                "name": "constants.py"
                            },
                            "kaiko.py": {
                                "name": "kaiko.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        ".gitignore": {
                            "name": ".gitignore"
                        },
                        "LICENSE": {
                            "name": "LICENSE"
                        },
                        "README.md": {
                            "name": "README.md"
                        },
                        "setup.cfg": {
                            "name": "setup.cfg"
                        },
                        "setup.py": {
                            "name": "setup.py"
                        },
                        "requirements.txt": {
                            "name": "requirements.txt"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "common": {
                        "validate.py": {
                            "name": "validate.py"
                        },
                        "save.py": {
                            "name": "save.py"
                        },
                        "client.py": {
                            "name": "client.py"
                        },
                        "download.py": {
                            "name": "download.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "download_kaiko.py": {
                        "name": "download_kaiko.py"
                    },
                    "download_to_csv.py": {
                        "name": "download_to_csv.py"
                    },
                    "realtime_data_analysis.ipynb": {
                        "name": "realtime_data_analysis.ipynb"
                    },
                    "historical_data_analysis.py": {
                        "name": "historical_data_analysis.py"
                    },
                    "docker-build.sh": {
                        "name": "docker-build.sh"
                    },
                    "docker-run.sh": {
                        "name": "docker-run.sh"
                    },
                    "download_to_db.py.log": {
                        "name": "download_to_db.py.log"
                    },
                    "download_to_csv.py.log": {
                        "name": "download_to_csv.py.log"
                    },
                    "load_data.py": {
                        "name": "load_data.py"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "db_kaiko.py": {
                        "name": "db_kaiko.py"
                    },
                    "data_analysis.py": {
                        "name": "data_analysis.py"
                    },
                    "data_analysis.ipynb": {
                        "name": "data_analysis.ipynb"
                    },
                    "test.py": {
                        "name": "test.py"
                    },
                    "Dockerfile": {
                        "name": "Dockerfile"
                    },
                    "tempCodeRunnerFile.py": {
                        "name": "tempCodeRunnerFile.py"
                    },
                    "read_kaiko.py": {
                        "name": "read_kaiko.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "docker-bash.sh": {
                        "name": "docker-bash.sh"
                    },
                    "dask_work.py": {
                        "name": "dask_work.py"
                    },
                    "real_data_analysis.py": {
                        "name": "real_data_analysis.py"
                    }
                },
                "Issue29_Team10_Implement_sandbox_for_coingecko": {
                    "dags": {
                        "download_periodic_1min_postgres_cg.py": {
                            "name": "download_periodic_1min_postgres_cg.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "plugins": {
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "coingecko_data.csv": {
                        "name": "coingecko_data.csv"
                    },
                    "dowonload_to_db.py": {
                        "name": "dowonload_to_db.py"
                    },
                    "docker-compose.yml": {
                        "name": "docker-compose.yml"
                    },
                    "db_analysis.ipynb": {
                        "name": "db_analysis.ipynb"
                    },
                    "download_to_csv_cg.py": {
                        "name": "download_to_csv_cg.py"
                    },
                    "db_coingecko.py": {
                        "name": "db_coingecko.py"
                    },
                    "Dockerfile": {
                        "name": "Dockerfile"
                    },
                    "download_coingecko.py": {
                        "name": "download_coingecko.py"
                    },
                    "requirements.txt": {
                        "name": "requirements.txt"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    ".env": {
                        "name": ".env"
                    }
                },
                "SorrIssue4_Predict_bid_ask_movements_with_order_book_data": {
                    ".git_placeholder": {
                        "name": ".git_placeholder"
                    }
                },
                "Issue23_Team4_Implement_sandbox_for_Blockchain_2": {
                    "common_save.py": {
                        "name": "common_save.py"
                    },
                    "download_periodic_2mins_bitcoin_prices.py": {
                        "name": "download_periodic_2mins_bitcoin_prices.py"
                    },
                    "download_to_csv.py": {
                        "name": "download_to_csv.py"
                    },
                    "download_to_db_forecast.py": {
                        "name": "download_to_db_forecast.py"
                    },
                    "Block_download.py": {
                        "name": "Block_download.py"
                    },
                    "common_download.py": {
                        "name": "common_download.py"
                    },
                    "Hist_And_Realtime_Analysis.ipynb": {
                        "name": "Hist_And_Realtime_Analysis.ipynb"
                    },
                    "Data_Access.py": {
                        "name": "Data_Access.py"
                    },
                    "Block_db.py": {
                        "name": "Block_db.py"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "data605.ipynb": {
                        "name": "data605.ipynb"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "download_db_all.py.log": {
                        "name": "download_db_all.py.log"
                    },
                    "Final_Analysis.py": {
                        "name": "Final_Analysis.py"
                    }
                },
                "Issue22_Team3_Implement_sandbox_for_Coinmarketcap": {
                    "airflow": {
                        "dags": {
                            "mongodb_coinmarketcap_bitcoin_download_periodic_1min.py": {
                                "name": "mongodb_coinmarketcap_bitcoin_download_periodic_1min.py"
                            },
                            "compute_features_10mins_coinmarketcap_bitcoin.py": {
                                "name": "compute_features_10mins_coinmarketcap_bitcoin.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "old_files": {
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "compute_features.py": {
                        "name": "compute_features.py"
                    },
                    "db.py": {
                        "name": "db.py"
                    },
                    "Team3_Coinmarketcap_Deliverable3.ipynb": {
                        "name": "Team3_Coinmarketcap_Deliverable3.ipynb"
                    },
                    "download_to_db.py": {
                        "name": "download_to_db.py"
                    },
                    "Team3_Coinmarketcap_Deliverable4.ipynb": {
                        "name": "Team3_Coinmarketcap_Deliverable4.ipynb"
                    },
                    "save_features_to_db.py": {
                        "name": "save_features_to_db.py"
                    },
                    "load_data_from_db.py": {
                        "name": "load_data_from_db.py"
                    },
                    "download_to_jsonfile.py": {
                        "name": "download_to_jsonfile.py"
                    },
                    "download.py": {
                        "name": "download.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "Issue23_Team4_Implement_sandbox_for_Blockchain": {
                    "demo.py": {
                        "name": "demo.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "Issue27_Team8_Implement_sandbox_for_Yahoo_Finance": {
                    "app": {
                        "dags": {
                            "dag_1min.py": {
                                "name": "dag_1min.py"
                            },
                            ".DS_Store": {
                                "name": ".DS_Store"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "common": {
                            "validate.py": {
                                "name": "validate.py"
                            },
                            "save.py": {
                                "name": "save.py"
                            },
                            "client.py": {
                                "name": "client.py"
                            },
                            "download.py": {
                                "name": "download.py"
                            },
                            "__init__.py": {
                                "name": "__init__.py"
                            }
                        },
                        "download_yahoo.py": {
                            "name": "download_yahoo.py"
                        },
                        "Anomaly.ipynb": {
                            "name": "Anomaly.ipynb"
                        },
                        "download_db_yahoo.py": {
                            "name": "download_db_yahoo.py"
                        },
                        "docker-compose.yaml": {
                            "name": "docker-compose.yaml"
                        },
                        "Latest_Data.py": {
                            "name": "Latest_Data.py"
                        },
                        "api.py": {
                            "name": "api.py"
                        },
                        "dask_db.py": {
                            "name": "dask_db.py"
                        },
                        "db_yahoo.py": {
                            "name": "db_yahoo.py"
                        },
                        "download_to_csv_yahoo.py": {
                            "name": "download_to_csv_yahoo.py"
                        },
                        "Dockerfile": {
                            "name": "Dockerfile"
                        },
                        "requirements.txt": {
                            "name": "requirements.txt"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "README.md": {
                        "name": "README.md"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "SorrIssue1_Predict_large_asset_movements_with_NLP": {
                    ".git_placeholder": {
                        "name": ".git_placeholder"
                    },
                    "task_1_compute_returns.ipynb": {
                        "name": "task_1_compute_returns.ipynb"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "docker_jupyter.sh": {
                "name": "docker_jupyter.sh"
            },
            "version.sh": {
                "name": "version.sh"
            },
            "docker_build.sh": {
                "name": "docker_build.sh"
            },
            "docker_bash.sh": {
                "name": "docker_bash.sh"
            },
            "docker_push.sh": {
                "name": "docker_push.sh"
            },
            "install_jupyter_extensions.sh": {
                "name": "install_jupyter_extensions.sh"
            },
            "docker_clean.sh": {
                "name": "docker_clean.sh"
            },
            "etc_sudoers": {
                "name": "etc_sudoers"
            },
            "bashrc": {
                "name": "bashrc"
            },
            "tutorial_jupyter.ipynb": {
                "name": "tutorial_jupyter.ipynb"
            },
            "set_env.sh": {
                "name": "set_env.sh"
            },
            "Dockerfile": {
                "name": "Dockerfile"
            },
            "docker_exec.sh": {
                "name": "docker_exec.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "docker_build.version.log": {
                "name": "docker_build.version.log"
            },
            "run_jupyter.sh": {
                "name": "run_jupyter.sh"
            }
        },
        "projects": {
            "SorrIssue8_Predict_Intraday_Trading_Volume": {
                "intraday_volume_task2.ipynb": {
                    "name": "intraday_volume_task2.ipynb"
                },
                "intraday_volume_task1.ipynb": {
                    "name": "intraday_volume_task1.ipynb"
                }
            },
            "SorrIssue1_Predict_large_asset_movements_with_NLP": {
                "ravenpack_analysis.ipynb": {
                    "name": "ravenpack_analysis.ipynb"
                }
            }
        },
        "common": {
            "validate.py": {
                "name": "validate.py"
            },
            "save.py": {
                "name": "save.py"
            },
            "client.py": {
                "name": "client.py"
            },
            "download.py": {
                "name": "download.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "README.md": {
            "name": "README.md"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "infra": {
        "scripts": {
            "docker": {
                "docker-prune": {
                    "name": "docker-prune"
                }
            },
            "aws": {
                "test": {
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "test_aws.py": {
                        "name": "test_aws.py"
                    }
                },
                "dev_server_config_template": {
                    "name": "dev_server_config_template"
                },
                "populate_test_dashboard.py": {
                    "name": "populate_test_dashboard.py"
                },
                "README.md": {
                    "name": "README.md"
                },
                "tasks.py": {
                    "name": "tasks.py"
                },
                "requirements.txt": {
                    "name": "requirements.txt"
                },
                "invoke.yaml": {
                    "name": "invoke.yaml"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "aws_manager.py": {
                    "name": "aws_manager.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "defi": {
        "dao_etf": {
            "tests": {
                "dao_etf_test.py": {
                    "name": "dao_etf_test.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "contracts": {
                "DaoETF.sol": {
                    "name": "DaoETF.sol"
                }
            },
            "package-lock.json": {
                "name": "package-lock.json"
            },
            "package.json": {
                "name": "package.json"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "devops": {
            "docker_cmd.sh": {
                "name": "docker_cmd.sh"
            },
            "create_users.sh": {
                "name": "create_users.sh"
            },
            "docker_jupyter.sh": {
                "name": "docker_jupyter.sh"
            },
            "version.sh": {
                "name": "version.sh"
            },
            "docker-compose.yml": {
                "name": "docker-compose.yml"
            },
            "docker_build.sh": {
                "name": "docker_build.sh"
            },
            "docker_bash.sh": {
                "name": "docker_bash.sh"
            },
            "ganache_kill.sh": {
                "name": "ganache_kill.sh"
            },
            "docker_push.sh": {
                "name": "docker_push.sh"
            },
            "install_jupyter_extensions.sh": {
                "name": "install_jupyter_extensions.sh"
            },
            "docker_clean.sh": {
                "name": "docker_clean.sh"
            },
            "etc_sudoers": {
                "name": "etc_sudoers"
            },
            "bashrc": {
                "name": "bashrc"
            },
            "install_node_modules.sh": {
                "name": "install_node_modules.sh"
            },
            "docker_name.sh": {
                "name": "docker_name.sh"
            },
            "Dockerfile": {
                "name": "Dockerfile"
            },
            "docker_exec.sh": {
                "name": "docker_exec.sh"
            },
            "run_ganache.sh": {
                "name": "run_ganache.sh"
            },
            "docker_kill.sh": {
                "name": "docker_kill.sh"
            },
            "docker_pull.sh": {
                "name": "docker_pull.sh"
            },
            "run_jupyter.sh": {
                "name": "run_jupyter.sh"
            }
        },
        "papers": {
            "sorrentum_figs": {
                "image7.png": {
                    "name": "image7.png"
                },
                "image9.png": {
                    "name": "image9.png"
                },
                "image15.png": {
                    "name": "image15.png"
                },
                "image1.png": {
                    "name": "image1.png"
                },
                "image6.png": {
                    "name": "image6.png"
                },
                "image11.png": {
                    "name": "image11.png"
                },
                "image13.png": {
                    "name": "image13.png"
                },
                "image12.png": {
                    "name": "image12.png"
                },
                "image14.png": {
                    "name": "image14.png"
                },
                "image10.png": {
                    "name": "image10.png"
                },
                "image4.png": {
                    "name": "image4.png"
                },
                "image8.png": {
                    "name": "image8.png"
                },
                "image3.png": {
                    "name": "image3.png"
                },
                "image2.png": {
                    "name": "image2.png"
                },
                "image5.png": {
                    "name": "image5.png"
                }
            },
            "run_local_latex.sh": {
                "name": "run_local_latex.sh"
            },
            "deloc.pdf": {
                "name": "deloc.pdf"
            },
            "tulip.tex": {
                "name": "tulip.tex"
            },
            "README.md": {
                "name": "README.md"
            },
            "sorrentum.md": {
                "name": "sorrentum.md"
            },
            "run_remote_latex.sh": {
                "name": "run_remote_latex.sh"
            },
            "tulip.pdf": {
                "name": "tulip.pdf"
            },
            "daocross_daoswap.pdf": {
                "name": "daocross_daoswap.pdf"
            }
        },
        "tokens": {
            "contracts": {
                "TokenTimelock.sol": {
                    "name": "TokenTimelock.sol"
                },
                "SorrentumTokenETF.sol": {
                    "name": "SorrentumTokenETF.sol"
                },
                "MockERC20.sol": {
                    "name": "MockERC20.sol"
                },
                "SorrentumToken.sol": {
                    "name": "SorrentumToken.sol"
                }
            },
            "test": {
                "test_sorrentum_token.py": {
                    "name": "test_sorrentum_token.py"
                },
                "test_time_lock.py": {
                    "name": "test_time_lock.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "package-lock.json": {
                "name": "package-lock.json"
            },
            "package.json": {
                "name": "package.json"
            },
            "CmTask3798_deploy_sorrentum_token_goerli.ipynb": {
                "name": "CmTask3798_deploy_sorrentum_token_goerli.ipynb"
            },
            "CmTask3864_deploy_vesting_contract.ipynb": {
                "name": "CmTask3864_deploy_vesting_contract.ipynb"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "brownie-config.yaml": {
                "name": "brownie-config.yaml"
            }
        },
        "uniswap": {
            "uni_swap.py": {
                "name": "uni_swap.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "tutorial_web3_py": {
            "web3.ipynb": {
                "name": "web3.ipynb"
            },
            "contract.sol": {
                "name": "contract.sol"
            }
        },
        "tutorial_brownie": {
            "proj_files": {
                "deploy.py": {
                    "name": "deploy.py"
                },
                "hello_world_contract.sol": {
                    "name": "hello_world_contract.sol"
                },
                "deploy_interact.py": {
                    "name": "deploy_interact.py"
                },
                "interact.py": {
                    "name": "interact.py"
                },
                "surre_token_v2.sol": {
                    "name": "surre_token_v2.sol"
                },
                "surre_token_v1.sol": {
                    "name": "surre_token_v1.sol"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "goerli.json": {
                    "name": "goerli.json"
                },
                "brownie-config.yaml": {
                    "name": "brownie-config.yaml"
                }
            },
            "hello_world_contract.ipynb": {
                "name": "hello_world_contract.ipynb"
            },
            "tutorial_brownie.md": {
                "name": "tutorial_brownie.md"
            },
            "surre_token1.sh": {
                "name": "surre_token1.sh"
            },
            "surre_token1.ipynb": {
                "name": "surre_token1.ipynb"
            },
            "hello_world_contract.py": {
                "name": "hello_world_contract.py"
            },
            "bake_token1.ipynb": {
                "name": "bake_token1.ipynb"
            },
            "bake_token1.sh": {
                "name": "bake_token1.sh"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "hello_world_contract.sh": {
                "name": "hello_world_contract.sh"
            }
        },
        "tulip": {
            "services": {
                "twap_vwap_adapter": {
                    "devops": {
                        "Dockerfile": {
                            "name": "Dockerfile"
                        }
                    },
                    "twap_vwap_adapter.py": {
                        "name": "twap_vwap_adapter.py"
                    },
                    "readme.md": {
                        "name": "readme.md"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "indexer": {
                    "devops": {
                        "Dockerfile": {
                            "name": "Dockerfile"
                        }
                    },
                    "TulipABI.json": {
                        "name": "TulipABI.json"
                    },
                    "events_indexer.py": {
                        "name": "events_indexer.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "matching": {
                    "order_matcher.py": {
                        "name": "order_matcher.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "implementation": {
                "uni_swap.py": {
                    "name": "uni_swap.py"
                },
                "order.py": {
                    "name": "order.py"
                },
                "optimize.py": {
                    "name": "optimize.py"
                },
                "supply_demand.py": {
                    "name": "supply_demand.py"
                },
                "order_matching.py": {
                    "name": "order_matching.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "contracts": {
                "Tulip.sol": {
                    "name": "Tulip.sol"
                },
                "OrderMinHeap.sol": {
                    "name": "OrderMinHeap.sol"
                },
                "MockERC20.sol": {
                    "name": "MockERC20.sol"
                },
                "Factory.sol": {
                    "name": "Factory.sol"
                },
                "TwapVwapAdapter.sol": {
                    "name": "TwapVwapAdapter.sol"
                },
                "PriceFeedOracle.sol": {
                    "name": "PriceFeedOracle.sol"
                },
                "DaoCross.sol": {
                    "name": "DaoCross.sol"
                },
                "MockV3Aggregator.sol": {
                    "name": "MockV3Aggregator.sol"
                }
            },
            "test": {
                "test_order_matching.py": {
                    "name": "test_order_matching.py"
                },
                "test_dao_cross_sol.py": {
                    "name": "test_dao_cross_sol.py"
                },
                "test_uniswap.py": {
                    "name": "test_uniswap.py"
                },
                "test_optimize.py": {
                    "name": "test_optimize.py"
                },
                "test_order.py": {
                    "name": "test_order.py"
                }
            },
            "notebooks": {
                "SorrTask154_Create_linear_supply_demand_curves_using_orders.py": {
                    "name": "SorrTask154_Create_linear_supply_demand_curves_using_orders.py"
                },
                "DaoCross_match_orders.py": {
                    "name": "DaoCross_match_orders.py"
                },
                "SorrTask80_Implement_DaoSwap_optimization.ipynb": {
                    "name": "SorrTask80_Implement_DaoSwap_optimization.ipynb"
                },
                "SorrTask80_Implement_DaoSwap_optimization.py": {
                    "name": "SorrTask80_Implement_DaoSwap_optimization.py"
                },
                "SorrTask139_Create_some_pathological_cases_for_supply_demand_curve.ipynb": {
                    "name": "SorrTask139_Create_some_pathological_cases_for_supply_demand_curve.ipynb"
                },
                "CmTask3731_Get_token_prices_with_chainlink_oracle.ipynb": {
                    "name": "CmTask3731_Get_token_prices_with_chainlink_oracle.ipynb"
                },
                "DaoCross_match_orders.ipynb": {
                    "name": "DaoCross_match_orders.ipynb"
                },
                "SorrTask154_Create_linear_supply_demand_curves_using_orders.ipynb": {
                    "name": "SorrTask154_Create_linear_supply_demand_curves_using_orders.ipynb"
                },
                "SorrTask80_dao_cross_optimization.ipynb": {
                    "name": "SorrTask80_dao_cross_optimization.ipynb"
                },
                "SorrTask139_Create_some_pathological_cases_for_supply_demand_curve.py": {
                    "name": "SorrTask139_Create_some_pathological_cases_for_supply_demand_curve.py"
                },
                "CmTask3874_deploy_daoswap_to_optimism_testnet.ipynb": {
                    "name": "CmTask3874_deploy_daoswap_to_optimism_testnet.ipynb"
                },
                "CmTask3748_dao_swap_measure_gas.ipynb": {
                    "name": "CmTask3748_dao_swap_measure_gas.ipynb"
                },
                "SorrTask80_dao_cross_optimization.py": {
                    "name": "SorrTask80_dao_cross_optimization.py"
                }
            },
            "package-lock.json": {
                "name": "package-lock.json"
            },
            "package.json": {
                "name": "package.json"
            },
            "README.md": {
                "name": "README.md"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "brownie-config.yaml": {
                "name": "brownie-config.yaml"
            },
            "tulip_v3_diagram.png": {
                "name": "tulip_v3_diagram.png"
            }
        },
        "From_0_to_Web3.md": {
            "name": "From_0_to_Web3.md"
        },
        "README.md": {
            "name": "README.md"
        },
        "__init__.py": {
            "name": "__init__.py"
        },
        "web3_utils.py": {
            "name": "web3_utils.py"
        }
    },
    "test": {
        "test_tasks.py": {
            "name": "test_tasks.py"
        }
    },
    "core": {
        "event_study": {
            "test": {
                "outcomes": {
                    "TestBuildLocalTimeseries.test_multiple_responses_daily1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestBuildLocalTimeseries.test_minutely1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestUnwrapLocalTimeseries.test_daily1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestBuildLocalTimeseries.test_daily1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestUnwrapLocalTimeseries.test_minutely1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestBuildLocalTimeseries.test_daily_shift_freq1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_core.py": {
                    "name": "test_core.py"
                }
            },
            "core.py": {
                "name": "core.py"
            },
            "visualization.py": {
                "name": "visualization.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "statistics": {
            "test": {
                "outcomes": {
                    "Test_compute_avg_turnover_and_holding_period.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_bet_stats.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyKpssTest.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyLjungBoxTest.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_jensen_ratio.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyAdfTest.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeInterarrivalTimeStats.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_empirical_cdf_with_bounds1.test_gaussian1": {},
                    "TestApplyLjungBoxTest.test8": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeInterarrivalTimeStats.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyKpssTest.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeRegressionCoefficients2.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_avg_turnover_and_holding_period.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyLjungBoxTest.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_avg_turnover_and_holding_period.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test9": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_empirical_cdf_with_bounds1.test_gaussian2": {},
                    "Test_compute_jensen_ratio.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_sharpe_ratio.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMultiTTest.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_bet_stats.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeMoments.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeMoments.test7": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyKpssTest.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMultipleTests.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMaximizeWeightEntropy1.test1": {},
                    "TestApplyLjungBoxTest.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyNormalityTest.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_bet_stats.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_jensen_ratio.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_zscore_oos_sharpe_ratio.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_run_ends.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_jensen_ratio.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_turnover.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_bet_starts.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeRegressionCoefficients1": {
                        "input": {
                            "data.csv": {
                                "name": "data.csv"
                            }
                        }
                    },
                    "Test_compute_returns_per_bet.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestFindNearestAffinePoint1.test1": {},
                    "TestGetInterarrivalTime.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_zscore_oos_sharpe_ratio.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_signed_run_lengths.test12": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeMoments.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMultiTTest.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_returns_per_bet.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeAnnualizedSharpeRatio.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test8": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_forecastability.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyKpssTest.test7": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestGetInterarrivalTime.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_zscore_oos_sharpe_ratio.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyAdfTest.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_forecastability.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_zscore_oos_sharpe_ratio.test_nans1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyAdfTest.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeMoments.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_jensen_ratio.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyAdfTest.test7": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeRegressionCoefficients1.test0": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_time_under_water.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyLjungBoxTest.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyLjungBoxTest.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyNormalityTest.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_signed_run_lengths.test11": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_turnover.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeMoments.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMultiTTest.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_turnover.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_zscore_oos_sharpe_ratio.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyNormalityTest.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_empirical_cdf1.test_with_duplicates": {},
                    "Test_zscore_oos_sharpe_ratio.test_zeros1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_avg_turnover_and_holding_period.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test12": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_empirical_cdf1.test_gaussian": {},
                    "TestCalculateHitRate.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_drawdown.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_run_ends.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test8": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_forecastability.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyNormalityTest.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_turnover.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_annualized_return_and_volatility.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_time_under_water.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_signed_run_lengths.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_forecastability.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_bet_starts.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeRegressionCoefficients2.test0": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_annualized_return_and_volatility.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyLjungBoxTest.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestTTest1samp.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test7": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test10": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMultiTTest.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestTTest1samp.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyAdfTest.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestMultiTTest.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyKpssTest.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeSpecialValueStats.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeRegressionCoefficients2": {
                        "input": {
                            "data.csv": {
                                "name": "data.csv"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyKpssTest.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestApplyAdfTest.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeSpecialValueStats.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_signed_run_lengths.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeZeroDiffProportion.test11": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestCalculateHitRate.test7": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_time_index_info.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestComputeRegressionCoefficients1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_normality.py": {
                    "name": "test_normality.py"
                },
                "test_turnover.py": {
                    "name": "test_turnover.py"
                },
                "test_requires_statsmodels.py": {
                    "name": "test_requires_statsmodels.py"
                },
                "test_descriptive.py": {
                    "name": "test_descriptive.py"
                },
                "test_drawdown.py": {
                    "name": "test_drawdown.py"
                },
                "test_interarrival_time.py": {
                    "name": "test_interarrival_time.py"
                },
                "test_binning.py": {
                    "name": "test_binning.py"
                },
                "test_covariance_shrinkage.py": {
                    "name": "test_covariance_shrinkage.py"
                },
                "test_regression.py": {
                    "name": "test_regression.py"
                },
                "test_q_values.py": {
                    "name": "test_q_values.py"
                },
                "test_t_test.py": {
                    "name": "test_t_test.py"
                },
                "test_forecastability.py": {
                    "name": "test_forecastability.py"
                },
                "test_sharpe_ratio.py": {
                    "name": "test_sharpe_ratio.py"
                },
                "test_entropy.py": {
                    "name": "test_entropy.py"
                },
                "test_signed_runs.py": {
                    "name": "test_signed_runs.py"
                },
                "test_returns_and_volatility.py": {
                    "name": "test_returns_and_volatility.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "test_empirical_distribution_function.py": {
                    "name": "test_empirical_distribution_function.py"
                }
            },
            "empirical_distribution_function.py": {
                "name": "empirical_distribution_function.py"
            },
            "covariance_shrinkage.py": {
                "name": "covariance_shrinkage.py"
            },
            "descriptive.py": {
                "name": "descriptive.py"
            },
            "binning.py": {
                "name": "binning.py"
            },
            "turnover.py": {
                "name": "turnover.py"
            },
            "q_values.py": {
                "name": "q_values.py"
            },
            "local_level_model.py": {
                "name": "local_level_model.py"
            },
            "interarrival_time.py": {
                "name": "interarrival_time.py"
            },
            "forecastability.py": {
                "name": "forecastability.py"
            },
            "requires_statsmodels.py": {
                "name": "requires_statsmodels.py"
            },
            "normality.py": {
                "name": "normality.py"
            },
            "sharpe_ratio.py": {
                "name": "sharpe_ratio.py"
            },
            "regression.py": {
                "name": "regression.py"
            },
            "drawdown.py": {
                "name": "drawdown.py"
            },
            "returns_and_volatility.py": {
                "name": "returns_and_volatility.py"
            },
            "random_samples.py": {
                "name": "random_samples.py"
            },
            "cross_validation.py": {
                "name": "cross_validation.py"
            },
            "signed_runs.py": {
                "name": "signed_runs.py"
            },
            "requires_pymc3.py": {
                "name": "requires_pymc3.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "correlation.py": {
                "name": "correlation.py"
            },
            "entropy.py": {
                "name": "entropy.py"
            },
            "t_test.py": {
                "name": "t_test.py"
            }
        },
        "information_bars": {
            "test": {
                "outcomes": {
                    "TestBars.test_get_volume_bars": {
                        "input": {
                            "input.csv": {
                                "name": "input.csv"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestBars.test_get_dollar_bars": {
                        "input": {
                            "input.csv": {
                                "name": "input.csv"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestBars.test_get_tick_bars": {
                        "input": {
                            "input.csv": {
                                "name": "input.csv"
                            }
                        },
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_bars.py": {
                    "name": "test_bars.py"
                }
            },
            "notebooks": {
                "information_bars.ipynb": {
                    "name": "information_bars.ipynb"
                },
                "information_bars.py": {
                    "name": "information_bars.py"
                }
            },
            "bars.py": {
                "name": "bars.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "config": {
            "test": {
                "outcomes": {
                    "Test_build_config_list_varying_tiled_periods1.test_1tile_3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_build_config_list_varying_tiled_periods1.test_2tiles_1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_to_string.test4": {},
                    "Test_nested_config_update1.test_update3": {},
                    "Test_nested_config_misc1.test_roundtrip_transform1": {},
                    "Test_subtract_configs1.test2": {},
                    "Test_nested_config_update2.test_assert_on_overwrite1": {},
                    "Test_nested_config_set1.test_not_existing_key1": {},
                    "Test_make_hashable.test5": {},
                    "Test_flat_config_get1.test_existing_key_with_type1": {},
                    "Test_nested_config_misc1.test_config_print1": {},
                    "Test_convert_to_dataframe1.test1": {},
                    "Test_basic1.test1": {},
                    "Test_build_config_list_varying_tiled_periods1.test_2tiles_2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_flat_config_get1.test_non_existing_key3": {},
                    "Test_basic1.test2": {},
                    "Test_nested_config_get1.test_non_existing_key1": {},
                    "Test_validate_configs1.test_check_same_configs_error": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_nested_config_set_execute_stmt1.test_check_string_str1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_to_string.test1": {},
                    "Test_nested_config_set_execute_stmt1.test_assert_string_str1": {},
                    "Test_nested_config_set_execute_stmt1.test_check_string_repr1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_nested_config_set_execute_stmt1.test_assert_string_repr1": {},
                    "Test_get_config_from_flattened_dict1.test1": {},
                    "Test_mark_as_used1.test4": {},
                    "Test_to_dict2.test2": {},
                    "Test_to_dict1.test2": {},
                    "Test_from_dict1.test4": {},
                    "Test_nested_config_update2.test_assign_if_missing1": {},
                    "Test_nested_config_get1.test_existing_key3": {},
                    "Test_nested_config_misc1.test_config_to_python1": {},
                    "Test_nested_config_set_step_through1.test_check_string_str1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_basic1.test3": {},
                    "Test_make_read_only1.test_set4": {},
                    "Test_nested_config_in1.test_not_in1": {},
                    "Test_flat_config_get1.test_existing_key_with_type2": {},
                    "Test_intersect_configs1.test1": {},
                    "Test_nested_config_set1.test_existing_key4": {},
                    "Test_flat_config_in1.test_in1": {},
                    "Test_from_dict1.test2": {},
                    "Test_nested_config_get1.test_non_existing_key3": {},
                    "Test_mark_as_used1.test1": {},
                    "Test_nested_config_get1.test_existing_key1": {},
                    "Test_save_to_file.test1": {},
                    "Test_diff_configs1.test2": {},
                    "Test_build_config_diff_dataframe1.test3": {},
                    "TestGetConfigsFromBuilder1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_to_dict1.test3": {},
                    "Test_mark_as_used1.test2": {},
                    "Test_make_read_only1.test_set1": {},
                    "Test_from_dict1.test1": {},
                    "Test_to_dict1.test1": {},
                    "Test_build_config_diff_dataframe1.test2": {},
                    "Test_flat_config_get1.test_non_existing_key4": {},
                    "Test_build_config_list_varying_tiled_periods1.test_1tile_1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_build_config_list_with_tiled_universe.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_nested_config_in1.test_not_in2": {},
                    "Test_nested_config_flatten1.test_flatten2": {},
                    "Test_nested_config_get1.test_existing_key2": {},
                    "Test_subtract_config1.test1": {},
                    "Test_nested_config_update1.test_update1": {},
                    "Test_make_hashable.test4": {},
                    "Test_nested_config_update2.test_assert_on_overwrite2": {},
                    "Test_build_config_list_varying_tiled_periods1.test_1tile_2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_to_pickleable_string.test2": {},
                    "Test_to_pickleable_string.test1": {},
                    "Test_flat_config_get1.test_non_existing_key2": {},
                    "Test_from_dict1.test3": {},
                    "Test_to_string.test2": {},
                    "Test_build_config_list_varying_tiled_periods1.test_3tiles_1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_nested_config_get1.test_existing_key4": {},
                    "Test_get_config_from_flattened_dict1.test2": {},
                    "Test_to_string.test5": {},
                    "Test_make_read_only1.test_set3": {},
                    "Test_to_string.test3": {},
                    "Test_make_hashable.test2": {},
                    "Test_subtract_configs1.test1": {},
                    "Test_flat_config_get1.test_existing_key2": {},
                    "Test_nested_config_in1.test_in2": {},
                    "Test_diff_configs1.test1": {},
                    "Test_nested_config_in1.test_not_in3": {},
                    "Test_make_hashable.test6": {},
                    "Test_make_read_only1.test_set2": {},
                    "Test_nested_config_update1.test_update2": {},
                    "Test_nested_config_in1.test_in1": {},
                    "Test_nested_config_flatten1.test_flatten1": {},
                    "Test_make_hashable.test1": {},
                    "Test_flat_config_set1.test_roundtrip_transform1": {},
                    "Test_save_to_file.test2": {},
                    "Test_flat_config_get1.test_non_existing_key1": {},
                    "Test_mark_as_used1.test3": {},
                    "Test_nested_config_update2.test_overwrite1": {},
                    "Test_flat_config_set1.test_set1": {},
                    "Test_nested_config_set_step_through1.test_check_string_repr1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_nested_config_in1.test_not_in4": {},
                    "Test_to_dict2.test1": {},
                    "Test_flat_config_get1.test_existing_key1": {},
                    "Test_build_config_list_with_tiled_universe_and_periods.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_nested_config_misc1.test_config1": {},
                    "Test_subtract_config1.test2": {},
                    "Test_nested_config_get1.test_non_existing_key2": {},
                    "Test_flat_config_in1.test_not_in1": {},
                    "Test_nested_config_set1.test_existing_key3": {},
                    "Test_diff_configs1.test_same_config": {},
                    "Test_make_hashable.test3": {},
                    "Test_build_config_diff_dataframe1.test1": {},
                    "Test_nested_config_set1.test_existing_key1": {},
                    "Test_flat_config_get1.test_existing_key_with_type3": {},
                    "Test_subtract_configs1.test3": {},
                    "Test_flat_config_get1.test_non_existing_key_with_type1": {}
                },
                "test_config.py": {
                    "name": "test_config.py"
                },
                "test_config_builder.py": {
                    "name": "test_config_builder.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "test_config_list_builder.py": {
                    "name": "test_config_list_builder.py"
                },
                "test_config_utils.py": {
                    "name": "test_config_utils.py"
                }
            },
            "config_list.py": {
                "name": "config_list.py"
            },
            "config_.py": {
                "name": "config_.py"
            },
            "config_builder.py": {
                "name": "config_builder.py"
            },
            "config_utils.py": {
                "name": "config_utils.py"
            },
            "config_list_builder.py": {
                "name": "config_list_builder.py"
            },
            "config_example.txt": {
                "name": "config_example.txt"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "test": {
            "outcomes": {
                "TestTransformFromGluon.test_transform_none_x_vars": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_generate_arima_signal_and_response.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_compressed_mean": {},
                "TestGeneratePredictions.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestResampleIndex1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_normalized_difference2": {},
                "TestFilterByTime.test_filter_by_column4": {},
                "TestDfRollingApply.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformFromGluon.test_transform": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformToGluon.test_transform_local_ts": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPcaFactorComputer2.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestFilterByTime.test_filter_by_column2": {},
                "TestGeneratePredictions.test4": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPcaFactorComputer1.test_linearize_eigval_eigvec": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformFromSklean.test_transform1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_execute_with_real_time_loop1.test_simulated_replayed_time1": {},
                "TestTransformToSklean.test_transform1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDfRollingApply.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestFilterByTime.test_filter_by_index4": {},
                "Test_execute_with_real_time_loop1.test_exit_condition1": {},
                "TestCreateIterSingleIndex.test_truncate1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_normalized_difference_to_gaussian2": {},
                "Test_cross_feature_pair.test_mean_of_logs": {},
                "TestGeneratePredictions.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGeneratePredictions.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPcaFactorComputer2.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestArmaProcess.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestMapDictToDataframeTest1.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestGenerateRecipeDataset.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_difference1": {},
                "Test_cross_feature_pairs.test1": {},
                "TestFilterByTime.test_filter_by_column3": {},
                "TestFilterByTime.test_filter_by_index2": {},
                "TestMapDictToDataframeTest1.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_explore1.test_rolling_pca_over_time1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_difference2": {},
                "Test_select_cols_by_greedy_volume.test3": {},
                "Test_cross_feature_pair.test_normalized_difference1": {},
                "TestMapDictToDataframeTest1.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestReplayedTime1.test1": {},
                "TestArmaProcess.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformFromGluonForecasts.test_transform1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDfRollingApply.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_execute_with_real_time_loop1.test_simulated_time1": {},
                "TestCreateIterSingleIndex.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPcaFactorComputer1.test_stabilize_eigenvec1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestDfRollingApply.test5": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_execute_with_real_time_loop1.test_replayed_time1": {},
                "TestFilterByTime.test_filter_by_index3": {},
                "TestDfRollingApply.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformToGluon.test_transform": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPcaFactorComputer1.test_stabilize_eigenvec2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_combine_cols_instance1.test1": {},
                "TestFilterByTime.test_filter_by_column1": {},
                "Test_cross_feature_pair.test_compressed_difference1": {},
                "TestTransformToSklean.test_transform_none_x_vars1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestMultivariateNormalProcess.test2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformFromGluon.test_transform_artificial_ts": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestPcaFactorComputer1.test_sort_eigval2": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_compressed_difference2": {},
                "TestPcaFactorComputer1.test_sort_eigval1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestMultivariateNormalProcess.test1": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformToGluon.test_transform_none_x_vars": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "TestTransformToGluon.test_transform_series_target": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_difference_of_logs": {},
                "TestFilterByTime.test_filter_by_index1": {},
                "TestArmaProcess.test3": {
                    "output": {
                        "test.txt": {
                            "name": "test.txt"
                        }
                    }
                },
                "Test_cross_feature_pair.test_mean": {}
            },
            "test_residualizer.py": {
                "name": "test_residualizer.py"
            },
            "test_gallery_signal_processing.py": {
                "name": "test_gallery_signal_processing.py"
            },
            "test_real_time.py": {
                "name": "test_real_time.py"
            },
            "test_backtest.py": {
                "name": "test_backtest.py"
            },
            "test_artificial_signal_generators.py": {
                "name": "test_artificial_signal_generators.py"
            },
            "test_timeseries_study.py": {
                "name": "test_timeseries_study.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "test_data_adapters.py": {
                "name": "test_data_adapters.py"
            },
            "test_explore.py": {
                "name": "test_explore.py"
            },
            "test_pandas_helpers.py": {
                "name": "test_pandas_helpers.py"
            },
            "test_features.py": {
                "name": "test_features.py"
            }
        },
        "notebooks": {
            ".ipynb_checkpoints": {},
            "gallery_signal_processing.ipynb": {
                "name": "gallery_signal_processing.ipynb"
            },
            "time_memory_profiling_example.py": {
                "name": "time_memory_profiling_example.py"
            },
            "gallery_timeseries_study.py": {
                "name": "gallery_timeseries_study.py"
            },
            "gallery_signal_processing.py": {
                "name": "gallery_signal_processing.py"
            },
            "AmpTask1818_Add_cvxopt_to_environment.py": {
                "name": "AmpTask1818_Add_cvxopt_to_environment.py"
            },
            "gallery_examples.py": {
                "name": "gallery_examples.py"
            },
            "AmpTask1818_Add_cvxopt_to_environment.ipynb": {
                "name": "AmpTask1818_Add_cvxopt_to_environment.ipynb"
            },
            "time_memory_profiling_example.ipynb": {
                "name": "time_memory_profiling_example.ipynb"
            },
            "gallery_examples.ipynb": {
                "name": "gallery_examples.ipynb"
            },
            "gallery_timeseries_study.ipynb": {
                "name": "gallery_timeseries_study.ipynb"
            },
            "gsheet_into_pandas_example.py": {
                "name": "gsheet_into_pandas_example.py"
            },
            "gsheet_into_pandas_example.ipynb": {
                "name": "gsheet_into_pandas_example.ipynb"
            }
        },
        "signal_processing": {
            "test": {
                "outcomes": {
                    "Test_compute_rolling_zscore1.test_arma_atol1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_arma_nan2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test__compute_ipca_step.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestProcessNonfinite1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_smooth_moving_average_weights.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestProcessNonfinite1.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay1_arma_zero2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay2_arma_zero1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_process_outliers1.test_set_to_nan2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_ipca.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_ipca.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt.test_output_mode2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_digitize1.test_heaviside1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_ipca.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_annualized_sharpe_ratio.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt_1.test_db2_smooth_1": {},
                    "Test_compute_rolling_zscore1.test_delay2_arma_atol1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_smooth_moving_average_weights.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay1_arma_clean1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_process_outliers1.test_winsorize2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_gaussian_rank2.test_default": {},
                    "Test_compute_fir_zscore.test_default_zscoring": {},
                    "Test_compute_swt_high_pass.test1": {},
                    "Test_compute_smooth_moving_average1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_norm1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_gaussian_rank1.test_gaussian_rank_3_quantiles": {},
                    "Test_compute_swt_low_pass.test1": {},
                    "Test_compute_rolling_moment1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_process_outliers1.test_set_to_zero1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay1_arma_atol1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_ipca.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_gaussian_rank1.test_gaussian_rank_3_quantiles_middle_removed": {},
                    "Test_extract_smooth_moving_average_weights.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt_1.test_haar_smooth_2": {},
                    "Test_compute_rolling_zscore1.test_delay1_arma_nan1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_fir_filter_weights.test5": {},
                    "Test_compute_rolling_demean1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_kurtosis1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_skew1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_smooth_moving_average_weights.test6": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test__compute_lagged_cumsum.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_arma_zero1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt.test_timing_mode1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_fir_filter_weights.test4": {},
                    "Test_compute_rolling_zscore1.test_arma_zero2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test__compute_ipca_step.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test__compute_lagged_cumsum.test_lag_1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt_1.test_haar_smooth_3": {},
                    "Test_compute_rolling_zscore1.test_delay1_arma_zero1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_var1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt.test_timing_mode3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_weighted_sum1.test1": {},
                    "Test_get_swt.test_output_mode3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_summarize_discrete_wavelets.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt_3.test_knowledge_time_1": {},
                    "Test_process_outliers1.test_set_to_nan1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_corr1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_gaussian_rank2.test_nan": {},
                    "Test_get_swt_1.test_haar_smooth_1": {},
                    "Test_get_swt_3.test_knowledge_time_3": {},
                    "Test_get_swt_2.test_scaling_invariance_1": {},
                    "Test__compute_ipca_step.test3": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_arma_nan1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_ipca.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_calculate_inverse.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_fir_filter_weights.test3": {},
                    "Test_compute_rolling_zscore1.test_delay2_arma_zero2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test__compute_ipca_step.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_correlate_with_lagged_cumsum.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_fir_filter_weights.test1": {},
                    "Test_extract_fir_filter_weights.test2": {},
                    "Test_get_swt_3.test_knowledge_time_2": {},
                    "Test_get_knowledge_time_warmup_lengths.test1": {},
                    "Test_compute_rolling_zscore1.test_arma_clean1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay2_arma_nan1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay2_arma_inf2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt_1.test_db2_smooth_3": {},
                    "Test__compute_ipca_step.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestProcessNonfinite1.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_smooth_moving_average_weights.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_ipca.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_sharpe_ratio1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_default_values1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_default_values2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay1_arma_inf1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_correlate_with_lagged_cumsum.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_process_outliers1.test_set_to_zero2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt.test_timing_mode2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay1_arma_nan2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test__compute_lagged_cumsum.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_digitize1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_arma_inf2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_calculate_presudoinverse.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_smooth_derivative1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_std1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_gaussian_rank2.test_ffill": {},
                    "Test_get_swt_1.test_db2_smooth_2": {},
                    "Test_gaussian_rank2.test_zero": {},
                    "Test_compute_rolling_zscore1.test_arma_inf1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt.test_output_mode1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt.test_clean1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_process_outliers1.test_winsorize1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_extract_smooth_moving_average_weights.test7": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_get_swt_1.test_db3_smooth_1": {},
                    "Test_extract_smooth_moving_average_weights.test4": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay2_arma_clean1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_uniform_rank1.test1": {},
                    "Test_compute_rolling_zscore1.test_delay2_arma_inf1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_gaussian_rank1.test_gaussian_rank": {},
                    "Test_extract_fir_filter_weights.test6": {},
                    "Test_compute_swt_var_summary.test1": {},
                    "Test_compute_rolling_zcorr1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay2_arma_nan2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_rolling_zscore1.test_delay1_arma_inf2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    }
                },
                "test_swt.py": {
                    "name": "test_swt.py"
                },
                "test_misc_transformations.py": {
                    "name": "test_misc_transformations.py"
                },
                "test_ema_smoothing.py": {
                    "name": "test_ema_smoothing.py"
                },
                "test_fir_utils.py": {
                    "name": "test_fir_utils.py"
                },
                "test_outliers.py": {
                    "name": "test_outliers.py"
                },
                "test_incremental_pca.py": {
                    "name": "test_incremental_pca.py"
                },
                "test_cross_sectional.py": {
                    "name": "test_cross_sectional.py"
                },
                "test_cross_correlation.py": {
                    "name": "test_cross_correlation.py"
                }
            },
            "decorrelation.py": {
                "name": "decorrelation.py"
            },
            "coarse_graining.py": {
                "name": "coarse_graining.py"
            },
            "outliers.py": {
                "name": "outliers.py"
            },
            "cross_correlation.py": {
                "name": "cross_correlation.py"
            },
            "swt.py": {
                "name": "swt.py"
            },
            "ema_smoothing.py": {
                "name": "ema_smoothing.py"
            },
            "incremental_pca.py": {
                "name": "incremental_pca.py"
            },
            "fir_utils.py": {
                "name": "fir_utils.py"
            },
            "special_functions.py": {
                "name": "special_functions.py"
            },
            "cross_sectional.py": {
                "name": "cross_sectional.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "misc_transformations.py": {
                "name": "misc_transformations.py"
            }
        },
        "plotting": {
            ".ipynb_checkpoints": {
                "boxplot-checkpoint.ipynb": {
                    "name": "boxplot-checkpoint.ipynb"
                }
            },
            "test": {
                "__pycache__": {
                    "test_plots.cpython-310-pytest-7.4.2.pyc": {
                        "name": "test_plots.cpython-310-pytest-7.4.2.pyc"
                    }
                },
                ".ipynb_checkpoints": {
                    "test_plots-checkpoint.ipynb": {
                        "name": "test_plots-checkpoint.ipynb"
                    }
                },
                "test_gallery_notebook.py": {
                    "name": "test_gallery_notebook.py"
                },
                "test_correlation.py": {
                    "name": "test_correlation.py"
                },
                "test_plots.py": {
                    "name": "test_plots.py"
                },
                "test_portfolio_stats.py": {
                    "name": "test_portfolio_stats.py"
                }
            },
            "notebooks": {
                ".ipynb_checkpoints": {
                    "gallery_notebook-checkpoint.ipynb": {
                        "name": "gallery_notebook-checkpoint.ipynb"
                    }
                },
                "gallery_animation.ipynb": {
                    "name": "gallery_animation.ipynb"
                },
                "gallery_notebook.py": {
                    "name": "gallery_notebook.py"
                },
                "gallery_animation.py": {
                    "name": "gallery_animation.py"
                },
                "gallery_notebook.ipynb": {
                    "name": "gallery_notebook.ipynb"
                }
            },
            "counts.py": {
                "name": "counts.py"
            },
            "pnl.py": {
                "name": "pnl.py"
            },
            "boxplot.py": {
                "name": "boxplot.py"
            },
            "extreme_value_distributions.py": {
                "name": "extreme_value_distributions.py"
            },
            "turnover.py": {
                "name": "turnover.py"
            },
            "p_values.py": {
                "name": "p_values.py"
            },
            "portfolio_stats.py": {
                "name": "portfolio_stats.py"
            },
            "normality.py": {
                "name": "normality.py"
            },
            "sharpe_ratio.py": {
                "name": "sharpe_ratio.py"
            },
            "pca.py": {
                "name": "pca.py"
            },
            "drawdown.py": {
                "name": "drawdown.py"
            },
            "misc_plotting.py": {
                "name": "misc_plotting.py"
            },
            "visual_stationarity_test.py": {
                "name": "visual_stationarity_test.py"
            },
            "plotting_utils.py": {
                "name": "plotting_utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "correlation.py": {
                "name": "correlation.py"
            }
        },
        "finance": {
            "target_position_df_processing": {
                "fill_stats.py": {
                    "name": "fill_stats.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "combine_with_portfolio_df.py": {
                    "name": "combine_with_portfolio_df.py"
                }
            },
            "portfolio_df_processing": {
                "binned_stats.py": {
                    "name": "binned_stats.py"
                },
                "slippage.py": {
                    "name": "slippage.py"
                },
                "combine_with_order_df.py": {
                    "name": "combine_with_order_df.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "outcomes": {
                    "Test_remove_weekends.test_bypass": {},
                    "Test_set_weekends_to_nan.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_resample_time_bars1.test2": {},
                    "Test_quantize_holdings.test_round_to_nearest_lot": {},
                    "Test_generate_limit_orders_and_estimate_execution1.test1": {},
                    "Test_resample_df.test_only_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_adjust_holdings_for_overnight.test_adjust_for_splits": {},
                    "Test_quantize_holdings.test_no_quantization": {},
                    "Test_compute_stochastic.test4": {},
                    "Test_resample_srs.test_only_business_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_accumulate_returns_and_volatility1.test1": {},
                    "Test_resample_srs.test_day_to_business_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_resample_srs.test_day_to_week1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_MarketData_builders1.test1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_resample_srs.test_only_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestResamplePortfolioBarMetrics1.test_resampling_invariance": {},
                    "Test_compute_parkinson_var1.test1": {},
                    "Test_quantize_shares.test_no_quantization": {},
                    "Test_resample_srs.test_only_minute1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_twap_vwap1.test_with_no_nans1": {},
                    "Test_compute_target_positions_longitudinally1.test_1asset_with_params": {},
                    "Test_resample_ohlcv_bars1.test2": {},
                    "Test_compute_midrange.test1": {},
                    "Test_estimate_squared_volatility.test1": {},
                    "Test_remove_weekends.test_remove": {},
                    "Test_resample_df.test_day_to_year1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_estimate_limit_order_execution1.test_execution": {},
                    "Test_compute_stochastic.test2": {},
                    "Test_generate_random_ohlcv_bars.test1": {},
                    "Test_resample_ohlcv_bars1.test1": {},
                    "Test_compute_twap_vwap1.test_with_offset": {},
                    "Test_compute_twap_vwap1.test_with_no_nans2": {},
                    "Test_resample_df.test_upsample_month_to_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_prices_from_rets.test5": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_target_positions_longitudinally1.test_4assets_with_defaults": {},
                    "Test_compute_twap_vwap1.test_with_nans2": {},
                    "Test_compute_target_positions_cross_sectionally1.test_4assets_with_defaults": {},
                    "Test_resample_ohlcv_bars1.test3": {},
                    "Test_compute_stochastic.test1": {},
                    "Test_estimate_market_order_price.test_estimate_market_order_price": {},
                    "Test_compute_bid_ask_execution_quality1.test1": {},
                    "Test_compute_target_positions_cross_sectionally1.test_4assets_with_custom_config": {},
                    "Test_transform_bid_ask_long_data_to_wide.test1": {},
                    "Test_compute_money_transacted.test1": {},
                    "Test_resample_df.test_only_minute1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_quantize_shares.test_round_to_nearest_share": {},
                    "Test_quantize_shares.test_asset_specific_rounding_for_series": {},
                    "Test_compute_stochastic.test_log": {},
                    "Test_resample_df.test_no_freq_day_to_business_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_resample_srs.test_day_to_year1": {},
                    "Test_quantize_shares.test_asset_specific_rounding": {},
                    "Test_adjust_holdings_for_overnight.test_liquidate_at_end_of_day_with_ffill": {},
                    "Test_resample_srs.test_upsample_business_day_to_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_resample_df.test_day_to_business_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_estimate_squared_volatility.test2": {},
                    "Test_compute_twap_vwap1.test_with_nans1": {},
                    "Test_quantize_shares.test_round_to_nearest_lot": {},
                    "Test_process_bid_ask.test_multiindex": {},
                    "TestResamplePortfolioBarMetrics1.test_resampling_endpoints_intraday": {},
                    "Test_resample_srs.test_upsample_month_to_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_quantize_holdings.test_round_to_nearest_share": {},
                    "Test_compute_close_var1.test1": {},
                    "Test_adjust_holdings_for_overnight.test_liquidate_at_end_of_day": {},
                    "Test_resample_df.test_day_to_week1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_normalize_bar.test1": {},
                    "Test_set_weekends_to_nan.test2": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_reverse_accumulate_returns1.test1": {},
                    "TestComputeOvernightReturns.test1": {},
                    "Test_resample_srs.test_no_freq_day_to_business_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_set_non_ath_to_nan1.test1": {},
                    "Test_resample_df.test_upsample_business_day_to_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_target_positions_cross_sectionally1.test_1asset_with_defaults": {},
                    "Test_compute_garman_klass_var1.test1": {},
                    "Test_resample_srs.test_day_to_month1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_resample_time_bars1.test1": {},
                    "Test_compute_target_positions_longitudinally1.test_1asset_with_defaults": {},
                    "Test_resample_df.test_day_to_month1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestResamplePortfolioBarMetrics1.test_resampling_endpoints_daily": {},
                    "Test_generate_limit_order_price1.test1": {},
                    "Test_resample_df.test_only_business_day1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "Test_compute_midrange.test_log": {},
                    "Test_generate_random_bars.test1": {}
                },
                "test_volatility.py": {
                    "name": "test_volatility.py"
                },
                "test_accumulation.py": {
                    "name": "test_accumulation.py"
                },
                "test_target_position_generation.py": {
                    "name": "test_target_position_generation.py"
                },
                "test_market_impact.py": {
                    "name": "test_market_impact.py"
                },
                "test_prediction_processing.py": {
                    "name": "test_prediction_processing.py"
                },
                "test_returns.py": {
                    "name": "test_returns.py"
                },
                "test_bid_ask.py": {
                    "name": "test_bid_ask.py"
                },
                "test_share_quantization.py": {
                    "name": "test_share_quantization.py"
                },
                "test_market_data_example.py": {
                    "name": "test_market_data_example.py"
                },
                "test_execution.py": {
                    "name": "test_execution.py"
                },
                "test_resampling.py": {
                    "name": "test_resampling.py"
                },
                "test_holdings.py": {
                    "name": "test_holdings.py"
                },
                "test_ablation.py": {
                    "name": "test_ablation.py"
                },
                "test_features.py": {
                    "name": "test_features.py"
                }
            },
            "bar_processing.py": {
                "name": "bar_processing.py"
            },
            "market_impact.py": {
                "name": "market_impact.py"
            },
            "target_position_generation.py": {
                "name": "target_position_generation.py"
            },
            "prediction_processing.py": {
                "name": "prediction_processing.py"
            },
            "accumulation.py": {
                "name": "accumulation.py"
            },
            "returns.py": {
                "name": "returns.py"
            },
            "resampling.py": {
                "name": "resampling.py"
            },
            "tca_processing.py": {
                "name": "tca_processing.py"
            },
            "holdings.py": {
                "name": "holdings.py"
            },
            "per_bar_portfolio_metrics.py": {
                "name": "per_bar_portfolio_metrics.py"
            },
            "volatility.py": {
                "name": "volatility.py"
            },
            "ablation.py": {
                "name": "ablation.py"
            },
            "features.py": {
                "name": "features.py"
            },
            "market_data_example.py": {
                "name": "market_data_example.py"
            },
            "tradability.py": {
                "name": "tradability.py"
            },
            "share_quantization.py": {
                "name": "share_quantization.py"
            },
            "execution.py": {
                "name": "execution.py"
            },
            "bid_ask.py": {
                "name": "bid_ask.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "data_adapters.py": {
            "name": "data_adapters.py"
        },
        "feature_analyzer.py": {
            "name": "feature_analyzer.py"
        },
        "explore.py": {
            "name": "explore.py"
        },
        "backtest.py": {
            "name": "backtest.py"
        },
        "real_time.py": {
            "name": "real_time.py"
        },
        "real_time_example.py": {
            "name": "real_time_example.py"
        },
        "timeseries_study.py": {
            "name": "timeseries_study.py"
        },
        "real_time_simple_model.py": {
            "name": "real_time_simple_model.py"
        },
        "key_sorted_ordered_dict.py": {
            "name": "key_sorted_ordered_dict.py"
        },
        "finance_data_example.py": {
            "name": "finance_data_example.py"
        },
        "features.py": {
            "name": "features.py"
        },
        "pandas_helpers.py": {
            "name": "pandas_helpers.py"
        },
        "residualizer.py": {
            "name": "residualizer.py"
        },
        "artificial_signal_generators.py": {
            "name": "artificial_signal_generators.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "tmp.cache.disk": {
        "joblib": {
            "im": {
                "kibot": {
                    "data": {
                        "load": {
                            "kibot_s3_data_loader": {
                                "KibotS3DataLoader": {
                                    "_read_csv": {}
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "research_amp": {
        "altdata": {
            "github.com.py": {
                "name": "github.com.py"
            },
            "HashrateIndex.ipynb": {
                "name": "HashrateIndex.ipynb"
            },
            "kaiko.com.py": {
                "name": "kaiko.com.py"
            },
            "kaiko.com.ipynb": {
                "name": "kaiko.com.ipynb"
            },
            "google_trends.py": {
                "name": "google_trends.py"
            },
            "HashrateIndex.py": {
                "name": "HashrateIndex.py"
            },
            "Glassnode.py": {
                "name": "Glassnode.py"
            },
            "EOD.py": {
                "name": "EOD.py"
            },
            "CoinMarketCap.py": {
                "name": "CoinMarketCap.py"
            },
            "YahooFinance.ipynb": {
                "name": "YahooFinance.ipynb"
            },
            "Blockchain.com.py": {
                "name": "Blockchain.com.py"
            },
            "Kibot.py": {
                "name": "Kibot.py"
            },
            "Glassnode.ipynb": {
                "name": "Glassnode.ipynb"
            },
            "Chainlink.py": {
                "name": "Chainlink.py"
            },
            "CoinGecko.py": {
                "name": "CoinGecko.py"
            },
            "twitter.com.ipynb": {
                "name": "twitter.com.ipynb"
            },
            "Chainlink.ipynb": {
                "name": "Chainlink.ipynb"
            },
            "bitquery_uniswap.py": {
                "name": "bitquery_uniswap.py"
            },
            "EOD.ipynb": {
                "name": "EOD.ipynb"
            },
            "Kibot.ipynb": {
                "name": "Kibot.ipynb"
            },
            "bitquery_uniswap.ipynb": {
                "name": "bitquery_uniswap.ipynb"
            },
            "Blockchain.com.ipynb": {
                "name": "Blockchain.com.ipynb"
            },
            "github.com.ipynb": {
                "name": "github.com.ipynb"
            },
            "twitter.com.py": {
                "name": "twitter.com.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "google_trends.ipynb": {
                "name": "google_trends.ipynb"
            },
            "CoinGecko.ipynb": {
                "name": "CoinGecko.ipynb"
            },
            "CoinMarketCap.ipynb": {
                "name": "CoinMarketCap.ipynb"
            },
            "YahooFinance.py": {
                "name": "YahooFinance.py"
            }
        },
        "cc": {
            "test": {
                "outcomes": {
                    "TestAlgotrading1.test_compute_repricing_df1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDetectOutliers.test4": {},
                    "TestDetectOutliers.test3": {},
                    "TestAlgotrading1.test_add_limit_order_prices1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestGetBadDataStats.test_get_bad_data_stats1": {},
                    "TestAlgotrading1.test_compute_execution_df1": {
                        "output": {
                            "test.txt": {
                                "name": "test.txt"
                            }
                        }
                    },
                    "TestDetectOutliers.test1": {},
                    "TestDetectOutliers.test2": {}
                },
                "test_algo_notebook.py": {
                    "name": "test_algo_notebook.py"
                },
                "test_detect_outliers.py": {
                    "name": "test_detect_outliers.py"
                },
                "test_qa.py": {
                    "name": "test_qa.py"
                },
                "test_algotrading.py": {
                    "name": "test_algotrading.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "notebooks": {
                "CmTask259_Find_same_currencies.py": {
                    "name": "CmTask259_Find_same_currencies.py"
                },
                "Master_machine_learning.py": {
                    "name": "Master_machine_learning.py"
                },
                "CMTask260_Exchange_volume_analysis.ipynb": {
                    "name": "CMTask260_Exchange_volume_analysis.ipynb"
                },
                "CmTask2912_Implement_Websocket_Extractor.ipynb": {
                    "name": "CmTask2912_Implement_Websocket_Extractor.ipynb"
                },
                "CmTask2187_CryptoChassis_futures_QA.ipynb": {
                    "name": "CmTask2187_CryptoChassis_futures_QA.ipynb"
                },
                "CmTask224_Improve_outlier_detection.py": {
                    "name": "CmTask224_Improve_outlier_detection.py"
                },
                "CmTask2187_CryptoChassis_futures_QA.py": {
                    "name": "CmTask2187_CryptoChassis_futures_QA.py"
                },
                "CmTask259_Find_same_currencies.ipynb": {
                    "name": "CmTask259_Find_same_currencies.ipynb"
                },
                "CMTask1706_Quality_Assurance_for_raw_data.py": {
                    "name": "CMTask1706_Quality_Assurance_for_raw_data.py"
                },
                "Master_single_vendor_qa.py": {
                    "name": "Master_single_vendor_qa.py"
                },
                "CMTask1945_CryptoChassis_QA.py": {
                    "name": "CMTask1945_CryptoChassis_QA.py"
                },
                "CMTask232_compute_start_end_table.ipynb": {
                    "name": "CMTask232_compute_start_end_table.ipynb"
                },
                "CMTask1709_Generate_synthetic_data_mimicking_the_crypto_stylized_facts.ipynb": {
                    "name": "CMTask1709_Generate_synthetic_data_mimicking_the_crypto_stylized_facts.ipynb"
                },
                "CMTask260_Exchange_volume_analysis.py": {
                    "name": "CMTask260_Exchange_volume_analysis.py"
                },
                "Master_machine_learning.ipynb": {
                    "name": "Master_machine_learning.ipynb"
                },
                "master_tradability_analysis.py": {
                    "name": "master_tradability_analysis.py"
                },
                "CMTask2080_Get_investors_from_Consensus_conference.py": {
                    "name": "CMTask2080_Get_investors_from_Consensus_conference.py"
                },
                "Master_model_performance_analyser.old.ipynb": {
                    "name": "Master_model_performance_analyser.old.ipynb"
                },
                "CMTask2329_Perform_QA_for_crypto_chassis_top30_universe.py": {
                    "name": "CMTask2329_Perform_QA_for_crypto_chassis_top30_universe.py"
                },
                "CMTask2051_Run_QA_for_coinbase.ipynb": {
                    "name": "CMTask2051_Run_QA_for_coinbase.ipynb"
                },
                "CMTask2190_Transfer_MIG_Mail_merge_to_pandas.ipynb": {
                    "name": "CMTask2190_Transfer_MIG_Mail_merge_to_pandas.ipynb"
                },
                "CMTask2190_Transfer_MIG_Mail_merge_to_pandas.py": {
                    "name": "CMTask2190_Transfer_MIG_Mail_merge_to_pandas.py"
                },
                "CMTask1704_Get_raw_CC_data.ipynb": {
                    "name": "CMTask1704_Get_raw_CC_data.ipynb"
                },
                "CMTask1905_Check_CCXT_data_against_source.ipynb": {
                    "name": "CMTask1905_Check_CCXT_data_against_source.ipynb"
                },
                "CmTask2188_Cross_vendor_futures_QA.py": {
                    "name": "CmTask2188_Cross_vendor_futures_QA.py"
                },
                "compare_qa.periodic.airflow.downloaded_websocket_EOD.all.bid_ask.futures.all.ccxt_cryptochassis.all.v1_0_0.py": {
                    "name": "compare_qa.periodic.airflow.downloaded_websocket_EOD.all.bid_ask.futures.all.ccxt_cryptochassis.all.v1_0_0.py"
                },
                "CMTask2360_Perform_QA_for_CCXT_top30_universe.ipynb": {
                    "name": "CMTask2360_Perform_QA_for_CCXT_top30_universe.ipynb"
                },
                "CMTask1953_Predict_intraday_spread_and_volume_with_Baseline.ipynb": {
                    "name": "CMTask1953_Predict_intraday_spread_and_volume_with_Baseline.ipynb"
                },
                "CMTask3352_pegged_at_mid_algo_simulation.py": {
                    "name": "CMTask3352_pegged_at_mid_algo_simulation.py"
                },
                "CMTask1895_Transaction_cost_analysis_of_limit_order.ipynb": {
                    "name": "CMTask1895_Transaction_cost_analysis_of_limit_order.ipynb"
                },
                "master_tradability_analysis.ipynb": {
                    "name": "master_tradability_analysis.ipynb"
                },
                "CmTask1945_look_at_ftx_DOGE_XRP_at_the_source.ipynb": {
                    "name": "CmTask1945_look_at_ftx_DOGE_XRP_at_the_source.ipynb"
                },
                "CmTask1945_look_at_ftx_DOGE_XRP_at_the_source.py": {
                    "name": "CmTask1945_look_at_ftx_DOGE_XRP_at_the_source.py"
                },
                "Master_model_prediction_analyzer.ipynb": {
                    "name": "Master_model_prediction_analyzer.ipynb"
                },
                "CMTask1812_Compute_stats_for_investor_presentation.py": {
                    "name": "CMTask1812_Compute_stats_for_investor_presentation.py"
                },
                "CMTask1953_Predict_intraday_spread_and_volume_with_Baseline.py": {
                    "name": "CMTask1953_Predict_intraday_spread_and_volume_with_Baseline.py"
                },
                "Master_cross_vendor_qa.ipynb": {
                    "name": "Master_cross_vendor_qa.ipynb"
                },
                "CmTask224_Improve_outlier_detection.ipynb": {
                    "name": "CmTask224_Improve_outlier_detection.ipynb"
                },
                "Master_crypto_analysis.py": {
                    "name": "Master_crypto_analysis.py"
                },
                "CMTask1706_Quality_Assurance_for_raw_data.ipynb": {
                    "name": "CMTask1706_Quality_Assurance_for_raw_data.ipynb"
                },
                "CMTask1905_Check_CCXT_data_against_source.py": {
                    "name": "CMTask1905_Check_CCXT_data_against_source.py"
                },
                "CMTask2080_Get_investors_from_Consensus_conference.ipynb": {
                    "name": "CMTask2080_Get_investors_from_Consensus_conference.ipynb"
                },
                "CMTask2703_Perform_manual_reconciliation_of_OB_data.ipynb": {
                    "name": "CMTask2703_Perform_manual_reconciliation_of_OB_data.ipynb"
                },
                "CMTask3352_pegged_at_mid_algo_simulation.ipynb": {
                    "name": "CMTask3352_pegged_at_mid_algo_simulation.ipynb"
                },
                "Master_crypto_analysis.ipynb": {
                    "name": "Master_crypto_analysis.ipynb"
                },
                "CMTask2360_Perform_QA_for_CCXT_top30_universe.py": {
                    "name": "CMTask2360_Perform_QA_for_CCXT_top30_universe.py"
                },
                "CMTask1894_Compare_SP500_daily_volatility_to_btc.ipynb": {
                    "name": "CMTask1894_Compare_SP500_daily_volatility_to_btc.ipynb"
                },
                "Master_model_performance_analyser.ipynb": {
                    "name": "Master_model_performance_analyser.ipynb"
                },
                "CMTask1895_Transaction_cost_analysis_of_limit_order.py": {
                    "name": "CMTask1895_Transaction_cost_analysis_of_limit_order.py"
                },
                "CmTask3915_Filter_prediction_by_rolling_std.ipynb": {
                    "name": "CmTask3915_Filter_prediction_by_rolling_std.ipynb"
                },
                "CMTask1705_Estimate_bid_ask.ipynb": {
                    "name": "CMTask1705_Estimate_bid_ask.ipynb"
                },
                "CmTask2188_Cross_vendor_futures_QA.ipynb": {
                    "name": "CmTask2188_Cross_vendor_futures_QA.ipynb"
                },
                "CmTask2912_Implement_Websocket_Extractor.py": {
                    "name": "CmTask2912_Implement_Websocket_Extractor.py"
                },
                "CMTask3978_binance_volume_profile.py": {
                    "name": "CMTask3978_binance_volume_profile.py"
                },
                "Master_model_performance_analyser.py": {
                    "name": "Master_model_performance_analyser.py"
                },
                "Master_single_vendor_qa.ipynb": {
                    "name": "Master_single_vendor_qa.ipynb"
                },
                "CMTask1705_Estimate_bid_ask.py": {
                    "name": "CMTask1705_Estimate_bid_ask.py"
                },
                "CMTask2329_Perform_QA_for_crypto_chassis_top30_universe.ipynb": {
                    "name": "CMTask2329_Perform_QA_for_crypto_chassis_top30_universe.ipynb"
                },
                "CMTask232_compute_start_end_table.py": {
                    "name": "CMTask232_compute_start_end_table.py"
                },
                "CMTask3978_binance_volume_profile.ipynb": {
                    "name": "CMTask3978_binance_volume_profile.ipynb"
                },
                "CMTask1812_Compute_stats_for_investor_presentation.ipynb": {
                    "name": "CMTask1812_Compute_stats_for_investor_presentation.ipynb"
                },
                "CMTask323_Exchange_volatility_analysis.py": {
                    "name": "CMTask323_Exchange_volatility_analysis.py"
                },
                "Master_model_performance_analyser.old.py": {
                    "name": "Master_model_performance_analyser.old.py"
                },
                "CMTask1704_Get_raw_CC_data.py": {
                    "name": "CMTask1704_Get_raw_CC_data.py"
                },
                "CmTask3915_Filter_prediction_by_rolling_std.py": {
                    "name": "CmTask3915_Filter_prediction_by_rolling_std.py"
                },
                "CmTask2188_CCXT_futures_QA.ipynb": {
                    "name": "CmTask2188_CCXT_futures_QA.ipynb"
                },
                "CMTask2051_Run_QA_for_coinbase.py": {
                    "name": "CMTask2051_Run_QA_for_coinbase.py"
                },
                "CMTask2703_Perform_manual_reconciliation_of_OB_data.py": {
                    "name": "CMTask2703_Perform_manual_reconciliation_of_OB_data.py"
                },
                "Master_model_prediction_analyzer.py": {
                    "name": "Master_model_prediction_analyzer.py"
                },
                "compare_qa.periodic.airflow.downloaded_websocket_EOD.all.bid_ask.futures.all.ccxt_cryptochassis.all.v1_0_0.ipynb": {
                    "name": "compare_qa.periodic.airflow.downloaded_websocket_EOD.all.bid_ask.futures.all.ccxt_cryptochassis.all.v1_0_0.ipynb"
                },
                "Master_Analysis_CrossSectionalLearning.ipynb": {
                    "name": "Master_Analysis_CrossSectionalLearning.ipynb"
                },
                "Master_Analysis_CrossSectionalLearning.py": {
                    "name": "Master_Analysis_CrossSectionalLearning.py"
                },
                "CMTask323_Exchange_volatility_analysis.ipynb": {
                    "name": "CMTask323_Exchange_volatility_analysis.ipynb"
                },
                "CmTask2188_CCXT_futures_QA.py": {
                    "name": "CmTask2188_CCXT_futures_QA.py"
                },
                "CMTask1709_Generate_synthetic_data_mimicking_the_crypto_stylized_facts.py": {
                    "name": "CMTask1709_Generate_synthetic_data_mimicking_the_crypto_stylized_facts.py"
                },
                "Master_cross_vendor_qa.py": {
                    "name": "Master_cross_vendor_qa.py"
                },
                "CMTask1945_CryptoChassis_QA.ipynb": {
                    "name": "CMTask1945_CryptoChassis_QA.ipynb"
                },
                "CMTask1894_Compare_SP500_daily_volatility_to_btc.py": {
                    "name": "CMTask1894_Compare_SP500_daily_volatility_to_btc.py"
                }
            },
            "volume.py": {
                "name": "volume.py"
            },
            "crypto_chassis_api.py": {
                "name": "crypto_chassis_api.py"
            },
            "qa.py": {
                "name": "qa.py"
            },
            "detect_outliers.py": {
                "name": "detect_outliers.py"
            },
            "precompute_average_price.py": {
                "name": "precompute_average_price.py"
            },
            "statistics.py": {
                "name": "statistics.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "algotrading.py": {
                "name": "algotrading.py"
            }
        },
        "lob": {
            "lob_simulation.py": {
                "name": "lob_simulation.py"
            },
            "lob_simulation.ipynb": {
                "name": "lob_simulation.ipynb"
            },
            "__init__.py": {
                "name": "__init__.py"
            },
            "lob_lib.py": {
                "name": "lob_lib.py"
            }
        },
        "transform.py": {
            "name": "transform.py"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "im_v2": {
        "mock1": {
            "universe": {
                "trade": {
                    "universe_small.json": {
                        "name": "universe_small.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    }
                },
                "test": {
                    "test_mock1_universe.py": {
                        "name": "test_mock1_universe.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "airflow": {
            "dags": {
                "airflow_utils": {
                    "telegram": {
                        "operator.py": {
                            "name": "operator.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "preprod.daily_paper_system_run_reconcile_fargate.py": {
                    "name": "preprod.daily_paper_system_run_reconcile_fargate.py"
                },
                "preprod.download_periodic_1min_ohlcv_data_rest_fargate.py": {
                    "name": "preprod.download_periodic_1min_ohlcv_data_rest_fargate.py"
                },
                "preprod.postgres_data_archival_to_s3_fargate.py": {
                    "name": "preprod.postgres_data_archival_to_s3_fargate.py"
                },
                "preprod.download_periodic_daily_ohlcv_data_fargate.py": {
                    "name": "preprod.download_periodic_daily_ohlcv_data_fargate.py"
                },
                "preprod.data_qa_periodic_10min_fargate.py": {
                    "name": "preprod.data_qa_periodic_10min_fargate.py"
                },
                "preprod.data_qa_periodic_daily_fargate.py": {
                    "name": "preprod.data_qa_periodic_daily_fargate.py"
                },
                "preprod.download_resample_periodic_daily_bid_ask_data_fargate.py": {
                    "name": "preprod.download_resample_periodic_daily_bid_ask_data_fargate.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "preprod.download_resample_periodic_1min_data_websocket_fargate.py": {
                    "name": "preprod.download_resample_periodic_1min_data_websocket_fargate.py"
                },
                "preprod.download_periodic_daily_trades_data_fargate.py": {
                    "name": "preprod.download_periodic_daily_trades_data_fargate.py"
                }
            },
            "clear_stuck_airflow_tasks.py": {
                "name": "clear_stuck_airflow_tasks.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "devops": {
            "compose": {
                "docker-compose.yml": {
                    "name": "docker-compose.yml"
                }
            },
            "env": {
                "local.im_db_config.env": {
                    "name": "local.im_db_config.env"
                },
                "dev.im_db_config.env": {
                    "name": "dev.im_db_config.env"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "kibot": {
            "data": {
                "client": {
                    "test": {
                        "test_data": {
                            "kibot": {
                                "all_futures_contracts_1min": {
                                    "NN.csv.gz": {
                                        "name": "NN.csv.gz"
                                    },
                                    "BB.csv.gz": {
                                        "name": "BB.csv.gz"
                                    }
                                },
                                "all_stocks_unadjusted_1min": {
                                    "AMP.csv.gz": {
                                        "name": "AMP.csv.gz"
                                    },
                                    "HD.csv.gz": {
                                        "name": "HD.csv.gz"
                                    }
                                },
                                "metadata": {
                                    "All_Futures_Contracts_1min.csv.gz": {
                                        "name": "All_Futures_Contracts_1min.csv.gz"
                                    }
                                },
                                "all_stocks_1min": {
                                    "AMP.csv.gz": {
                                        "name": "AMP.csv.gz"
                                    },
                                    "HD.csv.gz": {
                                        "name": "HD.csv.gz"
                                    }
                                },
                                "pq": {
                                    "All_Futures_Contracts_1min": {
                                        "CT.pq": {
                                            "name": "CT.pq"
                                        },
                                        "CL.pq": {
                                            "name": "CL.pq"
                                        },
                                        "HO.pq": {
                                            "name": "HO.pq"
                                        }
                                    },
                                    "All_Futures_Continuous_Contracts_1min": {
                                        "ZI.pq": {
                                            "name": "ZI.pq"
                                        },
                                        "EZ.pq": {
                                            "name": "EZ.pq"
                                        }
                                    },
                                    "all_stocks_1min": {
                                        "QCOM.pq": {
                                            "name": "QCOM.pq"
                                        },
                                        "HD.pq": {
                                            "name": "HD.pq"
                                        }
                                    }
                                },
                                "all_futures_continuous_contracts_1min": {
                                    "ZI.csv.gz": {
                                        "name": "ZI.csv.gz"
                                    },
                                    "W.csv.gz": {
                                        "name": "W.csv.gz"
                                    }
                                }
                            }
                        },
                        "outcomes": {
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_csv_data2": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_csv_data4": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_data3": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_csv_data3": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_data5": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_data4": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_parquet_data7": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_data2": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_parquet_data5": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_csv_data5": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_data1": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_expiry_data5": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_parquet_data5": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_csv_unadjusted_data5": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_parquet_data2": {},
                            "TestKibotEquitiesCsvParquetByAssetClient.test_read_csv_data1": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_parquet_expiry_data5": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_get_metadata1": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_parquet_data2": {},
                            "TestKibotFuturesCsvParquetByAssetClient.test_read_csv_data7": {}
                        },
                        "test_kibot_clients.py": {
                            "name": "test_kibot_clients.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "kibot_clients.py": {
                        "name": "kibot_clients.py"
                    },
                    "kibot_clients_example.py": {
                        "name": "kibot_clients_example.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "notebooks": {
                "CMTask1219_Explore_Kibot_data_in_S3.py": {
                    "name": "CMTask1219_Explore_Kibot_data_in_S3.py"
                },
                "CMTask1219_Explore_Kibot_data_in_S3.ipynb": {
                    "name": "CMTask1219_Explore_Kibot_data_in_S3.ipynb"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "cdd": {
            "data": {
                "extract": {
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "download_historical.py": {
                        "name": "download_historical.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "ccxt": {
            "data": {
                "extract": {
                    "airflow": {
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "test": {
                        "outcomes": {
                            "TestCcxtExtractor1.test_download_ohlcv_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestDownloadBulkData2.test_main2": {},
                            "TestCcxtExtractor1.test_download_ohlcv2": {},
                            "TestCcxtExtractor1.test_download_ohlcv_websocket_kline_is_not_present": {},
                            "TestDownloadBulkData2.test_main4": {},
                            "TestCcxtExtractor1.test_fetch_ohlcv1": {},
                            "TestCcxtExtractor1.test_fetch_trades1": {},
                            "TestCcxtExtractor1.test_download_trades": {},
                            "TestCcxtExtractor1.test_download_ohlcv1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestDownloadBulkData2.test_main3": {},
                            "TestCcxtExtractor1.test_download_bid_ask1": {}
                        },
                        "test_download_exchange_data_to_db_exchange.py": {
                            "name": "test_download_exchange_data_to_db_exchange.py"
                        },
                        "test_ccxt_download_bulk.py": {
                            "name": "test_ccxt_download_bulk.py"
                        },
                        "test_download_exchange_data_to_db_periodically.py": {
                            "name": "test_download_exchange_data_to_db_periodically.py"
                        },
                        "test_compare_realtime_and_historical_data.py": {
                            "name": "test_compare_realtime_and_historical_data.py"
                        },
                        "test_ccxt_extractor.py": {
                            "name": "test_ccxt_extractor.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "extractor.py": {
                        "name": "extractor.py"
                    },
                    "compare_realtime_and_historical.py": {
                        "name": "compare_realtime_and_historical.py"
                    },
                    "kraken_extractor.py": {
                        "name": "kraken_extractor.py"
                    },
                    "download_exchange_data_to_db.py": {
                        "name": "download_exchange_data_to_db.py"
                    },
                    "download_exchange_data_to_db_periodically.py": {
                        "name": "download_exchange_data_to_db_periodically.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "client": {
                    "test": {
                        "test_data": {
                            "20210924": {
                                "ohlcv": {
                                    "ccxt": {
                                        "kucoin": {
                                            "ETH_USDT.pq": {
                                                "name": "ETH_USDT.pq"
                                            },
                                            "ETH_USDT.csv.gz": {
                                                "name": "ETH_USDT.csv.gz"
                                            }
                                        },
                                        "binance": {
                                            "BTC_USDT.csv": {
                                                "name": "BTC_USDT.csv"
                                            },
                                            "BTC_USDT.csv.gz": {
                                                "name": "BTC_USDT.csv.gz"
                                            },
                                            "BTC_USDT.pq": {
                                                "name": "BTC_USDT.pq"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "outcomes": {
                            "TestCcxtPqByAssetClient1.test_read_data7": {},
                            "TestCcxtPqByAssetClient1.test_read_data2": {},
                            "TestCcxtCsvClient1.test_read_data3": {},
                            "TestCcxtCsvClient1.test_read_data2": {},
                            "TestCcxtCsvClient1.test_read_data4": {},
                            "TestCcxtPqByAssetClient1.test_read_data3": {},
                            "TestCcxtCsvClient1.test_read_data5": {},
                            "TestCcxtPqByAssetClient1.test_read_data1": {},
                            "TestCcxtCsvClient1.test_read_data1": {},
                            "TestCcxtCsvClient1.test_read_data7": {},
                            "TestCcxtPqByAssetClient1.test_read_data5": {},
                            "TestCcxtPqByAssetClient1.test_read_data4": {}
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        "test_ccxt_clients.py": {
                            "name": "test_ccxt_clients.py"
                        }
                    },
                    "ccxt_clients_example.py": {
                        "name": "ccxt_clients_example.py"
                    },
                    "ccxt_clients.py": {
                        "name": "ccxt_clients.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "qa": {
                    "notebooks": {
                        "data_qa_ohlcv.ipynb": {
                            "name": "data_qa_ohlcv.ipynb"
                        },
                        "data_qa_ohlcv.py": {
                            "name": "data_qa_ohlcv.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "universe": {
                "trade": {
                    "universe_v7.2.json": {
                        "name": "universe_v7.2.json"
                    },
                    "universe_versions.txt": {
                        "name": "universe_versions.txt"
                    },
                    "universe_v4.json": {
                        "name": "universe_v4.json"
                    },
                    "universe_coinbase_test.json": {
                        "name": "universe_coinbase_test.json"
                    },
                    "universe_v6.json": {
                        "name": "universe_v6.json"
                    },
                    "universe_v3.json": {
                        "name": "universe_v3.json"
                    },
                    "universe_v7.json": {
                        "name": "universe_v7.json"
                    },
                    "universe_small.json": {
                        "name": "universe_small.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    },
                    "universe_v5.json": {
                        "name": "universe_v5.json"
                    },
                    "universe_v7.3.json": {
                        "name": "universe_v7.3.json"
                    },
                    "universe_v7.1.json": {
                        "name": "universe_v7.1.json"
                    },
                    "universe_v2.json": {
                        "name": "universe_v2.json"
                    }
                },
                "download": {
                    "universe_v7.4.json": {
                        "name": "universe_v7.4.json"
                    },
                    "universe_versions.txt": {
                        "name": "universe_versions.txt"
                    },
                    "universe_v4.json": {
                        "name": "universe_v4.json"
                    },
                    "universe_coinbase_test.json": {
                        "name": "universe_coinbase_test.json"
                    },
                    "universe_top30_20220706.json": {
                        "name": "universe_top30_20220706.json"
                    },
                    "universe_v3.json": {
                        "name": "universe_v3.json"
                    },
                    "universe_v7.json": {
                        "name": "universe_v7.json"
                    },
                    "universe_small.json": {
                        "name": "universe_small.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    },
                    "universe_v5.json": {
                        "name": "universe_v5.json"
                    },
                    "universe_v7.3.json": {
                        "name": "universe_v7.3.json"
                    },
                    "universe_v7.5.json": {
                        "name": "universe_v7.5.json"
                    },
                    "universe_v2.json": {
                        "name": "universe_v2.json"
                    }
                },
                "test": {
                    "test_universe.py": {
                        "name": "test_universe.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "db": {
                "test": {
                    "test_archive_db_data_to_s3.py": {
                        "name": "test_archive_db_data_to_s3.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "utils.py": {
                    "name": "utils.py"
                },
                "archive_db_data_to_s3.py": {
                    "name": "archive_db_data_to_s3.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "test_master_universe.py": {
                    "name": "test_master_universe.py"
                }
            },
            "notebooks": {
                "Master_universe.ipynb": {
                    "name": "Master_universe.ipynb"
                },
                "CMTask324_CDD_CCXT_Comparison.py": {
                    "name": "CMTask324_CDD_CCXT_Comparison.py"
                },
                "CMTask12_CCXT_historical_data_access.py": {
                    "name": "CMTask12_CCXT_historical_data_access.py"
                },
                "CmTask3979_Binance_trades_realtime_CCXT.py": {
                    "name": "CmTask3979_Binance_trades_realtime_CCXT.py"
                },
                "CMTask13_Research_of_OHLCV_fetching_approaches_for_different_exchanges.py": {
                    "name": "CMTask13_Research_of_OHLCV_fetching_approaches_for_different_exchanges.py"
                },
                "CmTask4210_Research_OKX_OHLCV_spot_by_CCXT.ipynb": {
                    "name": "CmTask4210_Research_OKX_OHLCV_spot_by_CCXT.ipynb"
                },
                "CmTask4226_Show_an_example_of_trades_data_to_OHLCV_conversion.ipynb": {
                    "name": "CmTask4226_Show_an_example_of_trades_data_to_OHLCV_conversion.ipynb"
                },
                "Cm4516_Collect_data_OHLCV_web_socket_data_collection.py": {
                    "name": "Cm4516_Collect_data_OHLCV_web_socket_data_collection.py"
                },
                "CmTask4275_check_prod_ohlcv_data_against_binance.ipynb": {
                    "name": "CmTask4275_check_prod_ohlcv_data_against_binance.ipynb"
                },
                "CmTask4422_Onboard_CCXT_Kraken_periodic_daily_trades_futures.ipynb": {
                    "name": "CmTask4422_Onboard_CCXT_Kraken_periodic_daily_trades_futures.ipynb"
                },
                "CMTask4189_Onboard_CCXT_Kraken_periodic_daily_trades_spot.py": {
                    "name": "CMTask4189_Onboard_CCXT_Kraken_periodic_daily_trades_spot.py"
                },
                "CMTask2700_CCXT_orderbook_data.py": {
                    "name": "CMTask2700_CCXT_orderbook_data.py"
                },
                "CMTask3665_CCXT_Research_exchange_data_availability.py": {
                    "name": "CMTask3665_CCXT_Research_exchange_data_availability.py"
                },
                "CMTask4189_Onboard_CCXT_Kraken_periodic_daily_trades_spot.ipynb": {
                    "name": "CMTask4189_Onboard_CCXT_Kraken_periodic_daily_trades_spot.ipynb"
                },
                "CMTask3665_CCXT_Research_exchange_data_availability.ipynb": {
                    "name": "CMTask3665_CCXT_Research_exchange_data_availability.ipynb"
                },
                "CmTask4275_check_prod_ohlcv_data_against_binance.py": {
                    "name": "CmTask4275_check_prod_ohlcv_data_against_binance.py"
                },
                "Cm4516_Collect_data_OHLCV_web_socket_data_collection.ipynb": {
                    "name": "Cm4516_Collect_data_OHLCV_web_socket_data_collection.ipynb"
                },
                "Master_universe.py": {
                    "name": "Master_universe.py"
                },
                "CmTask4422_Onboard_CCXT_Kraken_periodic_daily_trades_futures.py": {
                    "name": "CmTask4422_Onboard_CCXT_Kraken_periodic_daily_trades_futures.py"
                },
                "CmTask3979_Binance_trades_realtime_CCXT.ipynb": {
                    "name": "CmTask3979_Binance_trades_realtime_CCXT.ipynb"
                },
                "CmTask3917_Binance_trades_periodic_daily_CCXT.py": {
                    "name": "CmTask3917_Binance_trades_periodic_daily_CCXT.py"
                },
                "CmTask3917_Binance_trades_periodic_daily_CCXT.ipynb": {
                    "name": "CmTask3917_Binance_trades_periodic_daily_CCXT.ipynb"
                },
                "CmTask3855_OKX_bid_ask_realtime_websocket_download.py": {
                    "name": "CmTask3855_OKX_bid_ask_realtime_websocket_download.py"
                },
                "CmTask3721_download_trades.ipynb": {
                    "name": "CmTask3721_download_trades.ipynb"
                },
                "CMTask324_CDD_CCXT_Comparison.ipynb": {
                    "name": "CMTask324_CDD_CCXT_Comparison.ipynb"
                },
                "CmTask4210_Research_OKX_OHLCV_spot_by_CCXT.py": {
                    "name": "CmTask4210_Research_OKX_OHLCV_spot_by_CCXT.py"
                },
                "CMTask12_CCXT_historical_data_access.ipynb": {
                    "name": "CMTask12_CCXT_historical_data_access.ipynb"
                },
                "CMTask13_Research_of_OHLCV_fetching_approaches_for_different_exchanges.ipynb": {
                    "name": "CMTask13_Research_of_OHLCV_fetching_approaches_for_different_exchanges.ipynb"
                },
                "CMTask2700_CCXT_orderbook_data.ipynb": {
                    "name": "CMTask2700_CCXT_orderbook_data.ipynb"
                },
                "CmTask3855_OKX_bid_ask_realtime_websocket_download.ipynb": {
                    "name": "CmTask3855_OKX_bid_ask_realtime_websocket_download.ipynb"
                },
                "CmTask4226_Show_an_example_of_trades_data_to_OHLCV_conversion.py": {
                    "name": "CmTask4226_Show_an_example_of_trades_data_to_OHLCV_conversion.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "talos": {
            "data": {
                "extract": {
                    "airflow": {
                        "prod_talos_rt_dag_binance.py": {
                            "name": "prod_talos_rt_dag_binance.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "test": {
                        "outcomes": {
                            "TestTalosExtractor1.test_download_ohlcv_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTalosExtractor1.test_download_ohlcv1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_talos_download_historical_data.py": {
                            "name": "test_talos_download_historical_data.py"
                        },
                        "test_talos_extractor.py": {
                            "name": "test_talos_extractor.py"
                        },
                        "test_talos_download_realtime_for_one_exchange.py": {
                            "name": "test_talos_download_realtime_for_one_exchange.py"
                        }
                    },
                    "notebooks": {
                        "CMTask1208_download_talos_market_data_REST.py": {
                            "name": "CMTask1208_download_talos_market_data_REST.py"
                        },
                        "CMTask1208_download_talos_market_data_REST.ipynb": {
                            "name": "CMTask1208_download_talos_market_data_REST.ipynb"
                        }
                    },
                    "extractor.py": {
                        "name": "extractor.py"
                    },
                    "download_realtime_for_one_exchange_periodically.py": {
                        "name": "download_realtime_for_one_exchange_periodically.py"
                    },
                    "download_historical_data.py": {
                        "name": "download_historical_data.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "download_realtime_for_one_exchange.py": {
                        "name": "download_realtime_for_one_exchange.py"
                    }
                },
                "client": {
                    "test": {
                        "test_data": {
                            "latest": {
                                "ohlcv": {
                                    "talos": {
                                        "coinbase": {
                                            "currency_pair=BTC_USDT": {
                                                "year=2022": {
                                                    "month=1": {
                                                        "data.parquet": {
                                                            "name": "data.parquet"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "binance": {
                                            "currency_pair=ADA_USDT": {
                                                "year=2022": {
                                                    "month=1": {
                                                        "data.parquet": {
                                                            "name": "data.parquet"
                                                        }
                                                    }
                                                }
                                            },
                                            "currency_pair=BTC_USDT": {
                                                "year=2022": {
                                                    "month=1": {
                                                        "data.parquet": {
                                                            "name": "data.parquet"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "outcomes": {
                            "TestTalosHistoricalPqByTileClient1.test_read_data3": {},
                            "TestTalosHistoricalPqByTileClient1.test_read_data4": {},
                            "TestTalosHistoricalPqByTileClient1.test_read_data5": {},
                            "TestTalosHistoricalPqByTileClient1.test_read_data2": {},
                            "TestTalosHistoricalPqByTileClient1.test_read_data1": {},
                            "TestTalosHistoricalPqByTileClient1.test_read_data7": {}
                        },
                        "test_talos_clients.py": {
                            "name": "test_talos_clients.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "talos_clients_example.py": {
                        "name": "talos_clients_example.py"
                    },
                    "talos_clients.py": {
                        "name": "talos_clients.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "universe": {
                "trade": {
                    "universe_versions.txt": {
                        "name": "universe_versions.txt"
                    },
                    "universe_small.json": {
                        "name": "universe_small.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    }
                },
                "download": {
                    "universe_small.json": {
                        "name": "universe_small.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    },
                    "univers_versions.txt": {
                        "name": "univers_versions.txt"
                    }
                },
                "test": {
                    "test_universe.py": {
                        "name": "test_universe.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "extract": {
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "db": {
                "utils.py": {
                    "name": "utils.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "notebooks": {
                "CMTask1647_Investigate_NaNs_in_Talos_realtime_data.ipynb": {
                    "name": "CMTask1647_Investigate_NaNs_in_Talos_realtime_data.ipynb"
                },
                "CMTask1647_Investigate_NaNs_in_Talos_realtime_data.py": {
                    "name": "CMTask1647_Investigate_NaNs_in_Talos_realtime_data.py"
                }
            },
            "utils.py": {
                "name": "utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "ig": {
            "data": {
                "client": {
                    "test": {
                        "outcomes": {
                            "TestIgHistoricalPqByDateTaqBarClient1.test_read_data2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestIgHistoricalPqByTileTaqBarClient1.test_read_data5": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestIgHistoricalPqByTileTaqBarClient1.test_read_data_for_multiple_symbols1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestGetBarData1.test2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTaqBarsUtils2.test_process_bar_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestIgHistoricalPqByDateTaqBarClient1.test_read_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTaqBarsUtils2.test_convert_string_to_timestamp1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "Test_get_cached_bar_data_for_date_interval1.test_tsla2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "Test_get_cached_bar_data_for_date_interval1.test_tsla1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTaqBarsUtils2": {
                                "input": {
                                    "data.csv": {
                                        "name": "data.csv"
                                    }
                                }
                            },
                            "Test_get_cached_bar_data_for_date_interval_perf1.test2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestGetBarData1.test1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestIgHistoricalPqByTileTaqBarClient1.test_read_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestGetBarData1.test3": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "Test_get_cached_bar_data_for_date_interval_perf1.test1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_ig_historical_pq_by_date_taq_bar_client.py": {
                            "name": "test_ig_historical_pq_by_date_taq_bar_client.py"
                        },
                        "test_taq_bars_utils.py": {
                            "name": "test_taq_bars_utils.py"
                        },
                        "test_ig_historical_pq_by_asset_taq_bar_client.py": {
                            "name": "test_ig_historical_pq_by_asset_taq_bar_client.py"
                        }
                    },
                    "notebooks": {
                        "LimeTask126_Understand_the_fields_from_historical_TAQ_file.py": {
                            "name": "LimeTask126_Understand_the_fields_from_historical_TAQ_file.py"
                        },
                        "LimeTask1_explore_IG_price_data.py": {
                            "name": "LimeTask1_explore_IG_price_data.py"
                        },
                        "LimeTask463_Process_TAQ_bar_tiles.py": {
                            "name": "LimeTask463_Process_TAQ_bar_tiles.py"
                        },
                        "LimeTask463_Process_TAQ_bar_tiles.ipynb": {
                            "name": "LimeTask463_Process_TAQ_bar_tiles.ipynb"
                        },
                        "LimeTask9_concatenate_1min_TAQ_bars.py": {
                            "name": "LimeTask9_concatenate_1min_TAQ_bars.py"
                        },
                        "LimeTask126_Understand_the_fields_from_historical_TAQ_file.ipynb": {
                            "name": "LimeTask126_Understand_the_fields_from_historical_TAQ_file.ipynb"
                        },
                        "LimeTask9_concatenate_1min_TAQ_bars.ipynb": {
                            "name": "LimeTask9_concatenate_1min_TAQ_bars.ipynb"
                        },
                        "LimeTask13_Convert_1min_bar_data_into_a_Parquet_PartionedDataSet.py": {
                            "name": "LimeTask13_Convert_1min_bar_data_into_a_Parquet_PartionedDataSet.py"
                        },
                        "LimeTask1_explore_IG_price_data.ipynb": {
                            "name": "LimeTask1_explore_IG_price_data.ipynb"
                        },
                        "LimeTask13_Convert_1min_bar_data_into_a_Parquet_PartionedDataSet.ipynb": {
                            "name": "LimeTask13_Convert_1min_bar_data_into_a_Parquet_PartionedDataSet.ipynb"
                        }
                    },
                    "compute_stats_from_tiles.py": {
                        "name": "compute_stats_from_tiles.py"
                    },
                    "ig_historical_pq_by_date_taq_bar_client.py": {
                        "name": "ig_historical_pq_by_date_taq_bar_client.py"
                    },
                    "historical_bars.py": {
                        "name": "historical_bars.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "ig_historical_pq_by_asset_taq_bar_client.py": {
                        "name": "ig_historical_pq_by_asset_taq_bar_client.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "universe": {
                "ticker_igid_mapping.py": {
                    "name": "ticker_igid_mapping.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "ig_utils.py": {
                "name": "ig_utils.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "common": {
            "data": {
                "transform": {
                    "test": {
                        "outcomes": {
                            "TestReindexOnCustomColumns.test_reindex_on_custom_columns": {},
                            "TestPqByDateToByAsset1.test_command_line": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestConvertTimestampColumn.test_string_datetime": {},
                            "TestPqByDateToByAsset1.test_process_chunk": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTransformRawWebsocketData.test_transform_raw_websocket_trades_data": {},
                            "TestPqByDateToByAsset1.test_function_call2": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestResampleBidAskData.test_resample_bid_ask_data1": {},
                            "TestConvertTimestampColumn.test_integer_datetime": {},
                            "TestReindexOnDatetime.test_reindex_on_datetime_index_already_present": {},
                            "TestReindexOnCustomColumns.test_reindex_on_custom_columns_invalid_columns": {},
                            "TestReindexOnDatetime.test_reindex_on_datetime_milliseconds": {},
                            "TestReindexOnDatetime.test_reindex_on_datetime_wrong_column": {},
                            "TestConvertTimestampColumn.test_incorrect_datetime": {},
                            "TestExtractDataFromDb1.test_extract_data_from_db": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTransformRawWebsocketData.test_transform_raw_websocket_ohlcv_data": {},
                            "TestPqByDateToByAsset1.test_function_call1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestReindexOnDatetime.test_reindex_on_datetime_seconds": {},
                            "TestCsvToPq.test_csv_to_pq_script": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestTransformRawWebsocketData.test_transform_raw_websocket_bid_ask_data": {}
                        },
                        "test_extract_data_from_db.py": {
                            "name": "test_extract_data_from_db.py"
                        },
                        "test_transform_pq_by_date_to_by_asset.py": {
                            "name": "test_transform_pq_by_date_to_by_asset.py"
                        },
                        "test_convert_csv_to_pq.py": {
                            "name": "test_convert_csv_to_pq.py"
                        },
                        "test_transform_pq_by_date_to_by_asset2.py": {
                            "name": "test_transform_pq_by_date_to_by_asset2.py"
                        },
                        "test_resample_bid_ask_data.py": {
                            "name": "test_resample_bid_ask_data.py"
                        },
                        "test_transform_utils.py": {
                            "name": "test_transform_utils.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "pq_convert.py": {
                        "name": "pq_convert.py"
                    },
                    "transform_utils.py": {
                        "name": "transform_utils.py"
                    },
                    "convert_pq_to_csv.py": {
                        "name": "convert_pq_to_csv.py"
                    },
                    "transform_pq_by_date_to_by_asset.py": {
                        "name": "transform_pq_by_date_to_by_asset.py"
                    },
                    "resample_rt_bid_ask_data_periodically.py": {
                        "name": "resample_rt_bid_ask_data_periodically.py"
                    },
                    "extract_data_from_db.py": {
                        "name": "extract_data_from_db.py"
                    },
                    "resample_daily_bid_ask_data.py": {
                        "name": "resample_daily_bid_ask_data.py"
                    },
                    "convert_csv_to_pq.py": {
                        "name": "convert_csv_to_pq.py"
                    },
                    "pq_convert.sh": {
                        "name": "pq_convert.sh"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "extract": {
                    "test": {
                        "outcomes": {
                            "TestDownloadExchangeDataToDbPeriodically1.test_invalid_input4": {},
                            "TestDownloadExchangeDataToDbPeriodically1.test_invalid_input3": {},
                            "TestExtractor1.test_download_data_error1": {},
                            "TestDownloadExchangeDataToDbPeriodically1.test_function_call3": {},
                            "TestDownloadExchangeDataToDbPeriodically1.test_function_call2": {},
                            "TestDownloadExchangeDataToDbPeriodically1.test_invalid_input2": {},
                            "TestDownloadExchangeDataToDbPeriodically1.test_invalid_input1": {},
                            "TestDownloadHistoricalData2.test_function_call2": {},
                            "TestVerifySchema.test_non_numerical_column": {},
                            "TestDownloadExchangeDataToDbPeriodically1.test_function_call1": {},
                            "TestDownloadHistoricalData2.test_function_call1": {}
                        },
                        "test_extract_utils.py": {
                            "name": "test_extract_utils.py"
                        },
                        "test_extractor.py": {
                            "name": "test_extractor.py"
                        },
                        "test_backfill_bid_ask_db_data.py": {
                            "name": "test_backfill_bid_ask_db_data.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "extractor.py": {
                        "name": "extractor.py"
                    },
                    "data_qa.py": {
                        "name": "data_qa.py"
                    },
                    "backfill_bid_ask_db_data.py": {
                        "name": "backfill_bid_ask_db_data.py"
                    },
                    "extract_utils.py": {
                        "name": "extract_utils.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "download_bulk.py": {
                        "name": "download_bulk.py"
                    }
                },
                "client": {
                    "test": {
                        "outcomes": {
                            "TestImRawDataClient.test_build_s3_pq_file_path1": {},
                            "TestImRawDataClient.test_build_s3_pq_file_path3": {},
                            "TestImRawDataClient.test_build_s3_pq_file_path2": {},
                            "TestDataFrameImClient1.test_read_data3": {},
                            "TestDataFrameImClient1.test_read_data1": {},
                            "TestDataFrameImClients1.test_read_data5": {},
                            "TestDataFrameImClient1.test_read_data4": {},
                            "TestDataFrameImClient1.test_read_data2": {},
                            "TestDataFrameImClient1.test_read_data5": {},
                            "TestDataFrameImClient1.test_read_data5_dups": {}
                        },
                        "test_im_clients.py": {
                            "name": "test_im_clients.py"
                        },
                        "test_historical_pq_clients.py": {
                            "name": "test_historical_pq_clients.py"
                        },
                        "test_data_frame_im_clients.py": {
                            "name": "test_data_frame_im_clients.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        "test_im_raw_data_client.py": {
                            "name": "test_im_raw_data_client.py"
                        }
                    },
                    "data_frame_im_clients_example.py": {
                        "name": "data_frame_im_clients_example.py"
                    },
                    "im_raw_data_client.py": {
                        "name": "im_raw_data_client.py"
                    },
                    "im_client_test_case.py": {
                        "name": "im_client_test_case.py"
                    },
                    "data_frame_im_clients.py": {
                        "name": "data_frame_im_clients.py"
                    },
                    "historical_pq_clients_example.py": {
                        "name": "historical_pq_clients_example.py"
                    },
                    "realtime_clients_example.py": {
                        "name": "realtime_clients_example.py"
                    },
                    "base_im_clients.py": {
                        "name": "base_im_clients.py"
                    },
                    "historical_pq_clients.py": {
                        "name": "historical_pq_clients.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "qa": {
                    "test": {
                        "test_qa_check.py": {
                            "name": "test_qa_check.py"
                        }
                    },
                    "notebooks": {
                        "cross_dataset_qa_ohlcv.py": {
                            "name": "cross_dataset_qa_ohlcv.py"
                        },
                        "cross_dataset_qa_bid_ask.ipynb": {
                            "name": "cross_dataset_qa_bid_ask.ipynb"
                        },
                        "cross_dataset_qa_bid_ask.py": {
                            "name": "cross_dataset_qa_bid_ask.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        },
                        "cross_dataset_qa_ohlcv.ipynb": {
                            "name": "cross_dataset_qa_ohlcv.ipynb"
                        }
                    },
                    "dataset_validator.py": {
                        "name": "dataset_validator.py"
                    },
                    "validate_input_args.py": {
                        "name": "validate_input_args.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    },
                    "qa_check.py": {
                        "name": "qa_check.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "universe": {
                "test": {
                    "outcomes": {
                        "TestParseFullSymbol.test2": {},
                        "TestParseFullSymbol.test3": {},
                        "TestBuildNumericalToStringIdMapping.test1": {},
                        "TestParseFullSymbol.test1": {},
                        "TestBuildFullSymbol.test2": {},
                        "TestBuildFullSymbol.test1": {},
                        "TestBuildFullSymbol.test3": {}
                    },
                    "test_full_symbol.py": {
                        "name": "test_full_symbol.py"
                    },
                    "test_liquidity_utils.py": {
                        "name": "test_liquidity_utils.py"
                    },
                    "test_universe_utils.py": {
                        "name": "test_universe_utils.py"
                    },
                    "test_universe.py": {
                        "name": "test_universe.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "notebooks": {
                    "LmTask101_Generate_a_new_universe.ipynb": {
                        "name": "LmTask101_Generate_a_new_universe.ipynb"
                    },
                    "LmTask101_Generate_a_new_universe.py": {
                        "name": "LmTask101_Generate_a_new_universe.py"
                    },
                    "Master_universe_analysis.ipynb": {
                        "name": "Master_universe_analysis.ipynb"
                    },
                    "Master_universe_analysis.py": {
                        "name": "Master_universe_analysis.py"
                    }
                },
                "print_universe_info.py": {
                    "name": "print_universe_info.py"
                },
                "universe.py": {
                    "name": "universe.py"
                },
                "liquidity_utils.py": {
                    "name": "liquidity_utils.py"
                },
                "universe_utils.py": {
                    "name": "universe_utils.py"
                },
                "full_symbol.py": {
                    "name": "full_symbol.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "extract": {
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "data_snapshot": {
                "test": {
                    "test_data_snapshots": {
                        "numeric_data_snapshots": {
                            "20211230": {
                                "test": {
                                    "name": "test"
                                }
                            },
                            "20220720": {
                                "test": {
                                    "name": "test"
                                }
                            },
                            "20220630": {
                                "test": {
                                    "name": "test"
                                }
                            }
                        },
                        "alpha_numeric_data_snapshots": {
                            "20220130": {
                                "test": {
                                    "name": "test"
                                }
                            },
                            "20211211": {
                                "test": {
                                    "name": "test"
                                }
                            },
                            "alpha": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        }
                    },
                    "outcomes": {
                        "Test_get_data_snapshot.test_get_data_snapshot1": {},
                        "Test_get_data_snapshot.test_get_data_snapshot4": {},
                        "Test_get_data_snapshot.test_get_data_snapshot2": {}
                    },
                    "test_data_snapshot_utils.py": {
                        "name": "test_data_snapshot_utils.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "data_snapshot_utils.py": {
                    "name": "data_snapshot_utils.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "db": {
                "test": {
                    "test_create_db.py": {
                        "name": "test_create_db.py"
                    },
                    "test_db_utils.py": {
                        "name": "test_db_utils.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "create_db.py": {
                    "name": "create_db.py"
                },
                "db_utils.py": {
                    "name": "db_utils.py"
                },
                "delete_duplicates_from_ohlcv_table.py": {
                    "name": "delete_duplicates_from_ohlcv_table.py"
                },
                "remove_db.py": {
                    "name": "remove_db.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "test": {
                "test_master_raw_data_gallery_notebook.py": {
                    "name": "test_master_raw_data_gallery_notebook.py"
                },
                "generate_pq_test_data.py": {
                    "name": "generate_pq_test_data.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "notebooks": {
                "CmampTask1680_Research_available_CCXT_data_at_ck_AWS_profile.py": {
                    "name": "CmampTask1680_Research_available_CCXT_data_at_ck_AWS_profile.py"
                },
                "master_raw_data_gallery_lib.py": {
                    "name": "master_raw_data_gallery_lib.py"
                },
                "CmTask3763_okx_data_download_testing.ipynb": {
                    "name": "CmTask3763_okx_data_download_testing.ipynb"
                },
                "CmTask4032_Create_function_to_set_correct_epoch_unit.ipynb": {
                    "name": "CmTask4032_Create_function_to_set_correct_epoch_unit.ipynb"
                },
                "CmTask4032_Create_function_to_set_correct_epoch_unit.py": {
                    "name": "CmTask4032_Create_function_to_set_correct_epoch_unit.py"
                },
                "CmampTask324_Compare_CDD_data_to_CCXT_data.py": {
                    "name": "CmampTask324_Compare_CDD_data_to_CCXT_data.py"
                },
                "CmampTask324_Compare_CDD_data_to_CCXT_data.ipynb": {
                    "name": "CmampTask324_Compare_CDD_data_to_CCXT_data.ipynb"
                },
                "CmTask3763_okx_data_download_testing.py": {
                    "name": "CmTask3763_okx_data_download_testing.py"
                },
                "CmampTask1680_Research_available_CCXT_data_at_ck_AWS_profile.ipynb": {
                    "name": "CmampTask1680_Research_available_CCXT_data_at_ck_AWS_profile.ipynb"
                },
                "Master_raw_data_gallery.py": {
                    "name": "Master_raw_data_gallery.py"
                },
                "Master_raw_data_gallery.ipynb": {
                    "name": "Master_raw_data_gallery.ipynb"
                },
                "CmTask4582_Download_larger_universe.py": {
                    "name": "CmTask4582_Download_larger_universe.py"
                },
                "CmTask4582_Download_larger_universe.ipynb": {
                    "name": "CmTask4582_Download_larger_universe.ipynb"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "test": {
            "outcomes": {
                "TestGetImDockerCmd.test2": {},
                "TestGetImDockerCmd.test1": {},
                "TestGetImDockerUp.test1": {},
                "TestGetImDockerDown.test2": {},
                "TestGetImDockerUp.test2": {},
                "TestGetImDockerDown.test1": {}
            },
            "test_im_lib_tasks.py": {
                "name": "test_im_lib_tasks.py"
            }
        },
        "aws": {
            "aws_update_task_definition.py": {
                "name": "aws_update_task_definition.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "crypto_chassis": {
            "data": {
                "extract": {
                    "test": {
                        "outcomes": {
                            "TestCryptoChassisExtractor1.test_download_ohlcv": {},
                            "TestCryptoChassisExtractor1.test_download_trade1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestCryptoChassisExtractor1.test_download_bid_ask_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestCryptoChassisExtractor1.test_download_ohlcv_data1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestCryptoChassisExtractor1.test_download_bid_ask": {},
                            "TestCryptoChassisExtractor1.test_download_trade_futures1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestCryptoChassisExtractor2.test_build_base_url": {},
                            "TestCryptoChassisExtractor1.test_download_ohlcv_futures1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestCryptoChassisExtractor1.test_download_trades": {},
                            "TestCryptoChassisExtractor1.test_download_ohlcv1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            },
                            "TestCryptoChassisExtractor2.test_build_query_url": {},
                            "TestCryptoChassisExtractor1.test_download_bid_ask_data_futures1": {
                                "output": {
                                    "test.txt": {
                                        "name": "test.txt"
                                    }
                                }
                            }
                        },
                        "test_chassis_download_bulk.py": {
                            "name": "test_chassis_download_bulk.py"
                        },
                        "test_chassis_extractor.py": {
                            "name": "test_chassis_extractor.py"
                        }
                    },
                    "notebooks": {
                        "CMTask2311_CryptoChassis_gallery.ipynb": {
                            "name": "CMTask2311_CryptoChassis_gallery.ipynb"
                        },
                        "CMTask2311_CryptoChassis_gallery.py": {
                            "name": "CMTask2311_CryptoChassis_gallery.py"
                        }
                    },
                    "extractor.py": {
                        "name": "extractor.py"
                    },
                    "download_historical_data.py": {
                        "name": "download_historical_data.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "client": {
                    "test": {
                        "test_crypto_chassis_clients.py": {
                            "name": "test_crypto_chassis_clients.py"
                        },
                        "__init__.py": {
                            "name": "__init__.py"
                        }
                    },
                    "crypto_chassis_clients.py": {
                        "name": "crypto_chassis_clients.py"
                    },
                    "crypto_chassis_clients_example.py": {
                        "name": "crypto_chassis_clients_example.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "universe": {
                "trade": {
                    "universe_versions.txt": {
                        "name": "universe_versions.txt"
                    },
                    "universe_v4.json": {
                        "name": "universe_v4.json"
                    },
                    "universe_v3.json": {
                        "name": "universe_v3.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    },
                    "universe_v5.json": {
                        "name": "universe_v5.json"
                    },
                    "universe_v2.json": {
                        "name": "universe_v2.json"
                    }
                },
                "download": {
                    "universe_v3.1.json": {
                        "name": "universe_v3.1.json"
                    },
                    "universe_versions.txt": {
                        "name": "universe_versions.txt"
                    },
                    "universe_v4.json": {
                        "name": "universe_v4.json"
                    },
                    "universe_top30_20220706.json": {
                        "name": "universe_top30_20220706.json"
                    },
                    "universe_v3.json": {
                        "name": "universe_v3.json"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    },
                    "universe_v2.json": {
                        "name": "universe_v2.json"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "notebooks": {
                "CmTask3918_Redownload_CryptoChassis_trades_data.ipynb": {
                    "name": "CmTask3918_Redownload_CryptoChassis_trades_data.ipynb"
                },
                "CmTask3918_Redownload_CryptoChassis_trades_data.py": {
                    "name": "CmTask3918_Redownload_CryptoChassis_trades_data.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "binance": {
            "data": {
                "extract": {
                    "test": {
                        "outcomes": {
                            "TestBinanceExtractor.test_fetch_trades": {}
                        },
                        "test_binance_extractor.py": {
                            "name": "test_binance_extractor.py"
                        }
                    },
                    "extractor.py": {
                        "name": "extractor.py"
                    },
                    "__init__.py": {
                        "name": "__init__.py"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "universe": {
                "download": {
                    "universe_versions.txt": {
                        "name": "universe_versions.txt"
                    },
                    "universe_v1.json": {
                        "name": "universe_v1.json"
                    }
                }
            },
            "notebooks": {
                "CmTask4044_Binance_native_data_source.ipynb": {
                    "name": "CmTask4044_Binance_native_data_source.ipynb"
                },
                "CmTask4044_Binance_native_data_source.py": {
                    "name": "CmTask4044_Binance_native_data_source.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "version.txt": {
            "name": "version.txt"
        },
        "tasks.py": {
            "name": "tasks.py"
        },
        "im_lib_tasks.py": {
            "name": "im_lib_tasks.py"
        },
        "invoke.yaml": {
            "name": "invoke.yaml"
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "dataflow_amp": {
        "system": {
            "mock1": {
                "test": {
                    "outcomes": {
                        "Test_Mock1_NonTime_ForecastSystem_FitPredict.test_fit_over_backtest_period1": {
                            "output": {
                                "system_config.forecast_system.txt": {
                                    "name": "system_config.forecast_system.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem1.test1": {
                            "output": {
                                "system_config.forecast_system.txt": {
                                    "name": "system_config.forecast_system.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_NonTime_ForecastSystem_FitPredict.test_fit_vs_predict1": {
                            "output": {
                                "system_config.forecast_system.txt": {
                                    "name": "system_config.forecast_system.txt"
                                }
                            }
                        },
                        "Test_Mock1_NonTime_ForecastSystem_TiledBacktest.test1": {
                            "output": {
                                "configs_signature.txt": {
                                    "name": "configs_signature.txt"
                                },
                                "output_signature.txt": {
                                    "name": "output_signature.txt"
                                },
                                "tile_output_signature.txt": {
                                    "name": "tile_output_signature.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor2.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                }
                            }
                        },
                        "Test_Mock1_NonTime_ForecastSystem_FitPredict.test_fit_over_period1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor1.test3": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DataFramePortfolio2.test_with_liquidate_at_end_of_day1": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_System_CheckConfig.test_freeze_config1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor1.test1": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DataFramePortfolio1.test1": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                },
                                "system_config.txt": {
                                    "name": "system_config.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor_vs_DataFramePortfolio1.test2": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                },
                                "system_config.txt": {
                                    "name": "system_config.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor_vs_DataFramePortfolio1.test3": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                },
                                "system_config.txt": {
                                    "name": "system_config.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DataFramePortfolio1.test2": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_NonTime_ForecastSystem_vs_Time_ForecastSystem1.test1": {
                            "output": {
                                "system_config.non_time_system.txt": {
                                    "name": "system_config.non_time_system.txt"
                                },
                                "system_config.time_system.txt": {
                                    "name": "system_config.time_system.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor_vs_DataFramePortfolio1.test1": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                },
                                "system_config.txt": {
                                    "name": "system_config.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DatabasePortfolio_and_OrderProcessor1.test2": {
                            "output": {
                                "test.txt": {
                                    "name": "test.txt"
                                },
                                "system_config.database_portfolio.txt": {
                                    "name": "system_config.database_portfolio.txt"
                                }
                            }
                        },
                        "Test_Mock1_NonTime_ForecastSystem_CheckPnl.test_fit_run1": {
                            "output": {
                                "system_config.forecast_system.txt": {
                                    "name": "system_config.forecast_system.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        },
                        "Test_Mock1_Time_ForecastSystem_with_DataFramePortfolio1.test3": {
                            "output": {
                                "system_config.dataframe_portfolio.txt": {
                                    "name": "system_config.dataframe_portfolio.txt"
                                },
                                "test.txt": {
                                    "name": "test.txt"
                                }
                            }
                        }
                    },
                    "test_mock1_tiledbacktest.py": {
                        "name": "test_mock1_tiledbacktest.py"
                    },
                    "test_mock1_forecast_system.py": {
                        "name": "test_mock1_forecast_system.py"
                    }
                },
                "mock1_forecast_system_example.py": {
                    "name": "mock1_forecast_system_example.py"
                },
                "mock1_builders.py": {
                    "name": "mock1_builders.py"
                },
                "mock1_forecast_system.py": {
                    "name": "mock1_forecast_system.py"
                },
                "mock1_tile_config_builders.py": {
                    "name": "mock1_tile_config_builders.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "Cx": {
                "utils.py": {
                    "name": "utils.py"
                },
                "run_C3a_historical_simulation.py": {
                    "name": "run_C3a_historical_simulation.py"
                },
                "Cx_forecast_system.py": {
                    "name": "Cx_forecast_system.py"
                },
                "Cx_tile_config_builders.py": {
                    "name": "Cx_tile_config_builders.py"
                },
                "Cx_forecast_system_example.py": {
                    "name": "Cx_forecast_system_example.py"
                },
                "Cx_builders.py": {
                    "name": "Cx_builders.py"
                },
                "run_Cx_historical_simulation.sh": {
                    "name": "run_Cx_historical_simulation.sh"
                },
                "Cx_dump_market_data.py": {
                    "name": "Cx_dump_market_data.py"
                },
                "run_Cx_historical_simulation.py": {
                    "name": "run_Cx_historical_simulation.py"
                },
                "__init__.py": {
                    "name": "__init__.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "pipelines": {
            "mock1": {
                "test": {
                    "run_Test_Mock1_TiledBacktest.sh": {
                        "name": "run_Test_Mock1_TiledBacktest.sh"
                    },
                    "run.sh": {
                        "name": "run.sh"
                    }
                },
                "__init__.py": {
                    "name": "__init__.py"
                },
                "mock1_pipeline.py": {
                    "name": "mock1_pipeline.py"
                }
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    ".mypy_cache": {
        "3.7": {
            "ctypes": {
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "http": {
                "cookiejar.data.json": {
                    "name": "cookiejar.data.json"
                },
                "client.data.json": {
                    "name": "client.data.json"
                },
                "cookiejar.meta.json": {
                    "name": "cookiejar.meta.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "client.meta.json": {
                    "name": "client.meta.json"
                }
            },
            "urllib": {
                "request.data.json": {
                    "name": "request.data.json"
                },
                "request.meta.json": {
                    "name": "request.meta.json"
                },
                "response.meta.json": {
                    "name": "response.meta.json"
                },
                "response.data.json": {
                    "name": "response.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "numpy": {
                "polynomial": {
                    "chebyshev.data.json": {
                        "name": "chebyshev.data.json"
                    },
                    "chebyshev.meta.json": {
                        "name": "chebyshev.meta.json"
                    },
                    "hermite_e.data.json": {
                        "name": "hermite_e.data.json"
                    },
                    "polyutils.data.json": {
                        "name": "polyutils.data.json"
                    },
                    "laguerre.data.json": {
                        "name": "laguerre.data.json"
                    },
                    "_polybase.data.json": {
                        "name": "_polybase.data.json"
                    },
                    "hermite_e.meta.json": {
                        "name": "hermite_e.meta.json"
                    },
                    "legendre.data.json": {
                        "name": "legendre.data.json"
                    },
                    "_polybase.meta.json": {
                        "name": "_polybase.meta.json"
                    },
                    "legendre.meta.json": {
                        "name": "legendre.meta.json"
                    },
                    "laguerre.meta.json": {
                        "name": "laguerre.meta.json"
                    },
                    "hermite.meta.json": {
                        "name": "hermite.meta.json"
                    },
                    "polyutils.meta.json": {
                        "name": "polyutils.meta.json"
                    },
                    "polynomial.meta.json": {
                        "name": "polynomial.meta.json"
                    },
                    "hermite.data.json": {
                        "name": "hermite.data.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    },
                    "polynomial.data.json": {
                        "name": "polynomial.data.json"
                    }
                },
                "random": {
                    "_philox.meta.json": {
                        "name": "_philox.meta.json"
                    },
                    "mtrand.meta.json": {
                        "name": "mtrand.meta.json"
                    },
                    "_generator.meta.json": {
                        "name": "_generator.meta.json"
                    },
                    "_generator.data.json": {
                        "name": "_generator.data.json"
                    },
                    "_pcg64.meta.json": {
                        "name": "_pcg64.meta.json"
                    },
                    "_mt19937.meta.json": {
                        "name": "_mt19937.meta.json"
                    },
                    "bit_generator.meta.json": {
                        "name": "bit_generator.meta.json"
                    },
                    "_mt19937.data.json": {
                        "name": "_mt19937.data.json"
                    },
                    "_pcg64.data.json": {
                        "name": "_pcg64.data.json"
                    },
                    "_philox.data.json": {
                        "name": "_philox.data.json"
                    },
                    "_sfc64.meta.json": {
                        "name": "_sfc64.meta.json"
                    },
                    "mtrand.data.json": {
                        "name": "mtrand.data.json"
                    },
                    "_sfc64.data.json": {
                        "name": "_sfc64.data.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    },
                    "bit_generator.data.json": {
                        "name": "bit_generator.data.json"
                    }
                },
                "ma": {
                    "core.data.json": {
                        "name": "core.data.json"
                    },
                    "core.meta.json": {
                        "name": "core.meta.json"
                    },
                    "mrecords.meta.json": {
                        "name": "mrecords.meta.json"
                    },
                    "extras.meta.json": {
                        "name": "extras.meta.json"
                    },
                    "mrecords.data.json": {
                        "name": "mrecords.data.json"
                    },
                    "extras.data.json": {
                        "name": "extras.data.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    }
                },
                "_typing": {
                    "_callable.meta.json": {
                        "name": "_callable.meta.json"
                    },
                    "_callable.data.json": {
                        "name": "_callable.data.json"
                    }
                },
                "fft": {
                    "_pocketfft.data.json": {
                        "name": "_pocketfft.data.json"
                    },
                    "_pocketfft.meta.json": {
                        "name": "_pocketfft.meta.json"
                    },
                    "helper.meta.json": {
                        "name": "helper.meta.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    },
                    "helper.data.json": {
                        "name": "helper.data.json"
                    }
                },
                "lib": {
                    "histograms.data.json": {
                        "name": "histograms.data.json"
                    },
                    "_version.data.json": {
                        "name": "_version.data.json"
                    },
                    "shape_base.data.json": {
                        "name": "shape_base.data.json"
                    },
                    "stride_tricks.data.json": {
                        "name": "stride_tricks.data.json"
                    },
                    "type_check.data.json": {
                        "name": "type_check.data.json"
                    },
                    "mixins.data.json": {
                        "name": "mixins.data.json"
                    },
                    "arraysetops.meta.json": {
                        "name": "arraysetops.meta.json"
                    },
                    "nanfunctions.data.json": {
                        "name": "nanfunctions.data.json"
                    },
                    "function_base.data.json": {
                        "name": "function_base.data.json"
                    },
                    "arrayterator.data.json": {
                        "name": "arrayterator.data.json"
                    },
                    "npyio.meta.json": {
                        "name": "npyio.meta.json"
                    },
                    "arraysetops.data.json": {
                        "name": "arraysetops.data.json"
                    },
                    "scimath.data.json": {
                        "name": "scimath.data.json"
                    },
                    "shape_base.meta.json": {
                        "name": "shape_base.meta.json"
                    },
                    "mixins.meta.json": {
                        "name": "mixins.meta.json"
                    },
                    "index_tricks.meta.json": {
                        "name": "index_tricks.meta.json"
                    },
                    "utils.data.json": {
                        "name": "utils.data.json"
                    },
                    "scimath.meta.json": {
                        "name": "scimath.meta.json"
                    },
                    "arrayterator.meta.json": {
                        "name": "arrayterator.meta.json"
                    },
                    "arraypad.data.json": {
                        "name": "arraypad.data.json"
                    },
                    "histograms.meta.json": {
                        "name": "histograms.meta.json"
                    },
                    "function_base.meta.json": {
                        "name": "function_base.meta.json"
                    },
                    "ufunclike.meta.json": {
                        "name": "ufunclike.meta.json"
                    },
                    "stride_tricks.meta.json": {
                        "name": "stride_tricks.meta.json"
                    },
                    "twodim_base.meta.json": {
                        "name": "twodim_base.meta.json"
                    },
                    "polynomial.meta.json": {
                        "name": "polynomial.meta.json"
                    },
                    "ufunclike.data.json": {
                        "name": "ufunclike.data.json"
                    },
                    "_version.meta.json": {
                        "name": "_version.meta.json"
                    },
                    "npyio.data.json": {
                        "name": "npyio.data.json"
                    },
                    "index_tricks.data.json": {
                        "name": "index_tricks.data.json"
                    },
                    "arraypad.meta.json": {
                        "name": "arraypad.meta.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "twodim_base.data.json": {
                        "name": "twodim_base.data.json"
                    },
                    "utils.meta.json": {
                        "name": "utils.meta.json"
                    },
                    "format.meta.json": {
                        "name": "format.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    },
                    "nanfunctions.meta.json": {
                        "name": "nanfunctions.meta.json"
                    },
                    "polynomial.data.json": {
                        "name": "polynomial.data.json"
                    },
                    "type_check.meta.json": {
                        "name": "type_check.meta.json"
                    },
                    "format.data.json": {
                        "name": "format.data.json"
                    }
                },
                "linalg": {
                    "linalg.data.json": {
                        "name": "linalg.data.json"
                    },
                    "linalg.meta.json": {
                        "name": "linalg.meta.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    }
                },
                "testing": {
                    "_private": {
                        "utils.data.json": {
                            "name": "utils.data.json"
                        },
                        "utils.meta.json": {
                            "name": "utils.meta.json"
                        }
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    }
                },
                "core": {
                    "arrayprint.meta.json": {
                        "name": "arrayprint.meta.json"
                    },
                    "einsumfunc.meta.json": {
                        "name": "einsumfunc.meta.json"
                    },
                    "fromnumeric.data.json": {
                        "name": "fromnumeric.data.json"
                    },
                    "shape_base.data.json": {
                        "name": "shape_base.data.json"
                    },
                    "numerictypes.meta.json": {
                        "name": "numerictypes.meta.json"
                    },
                    "function_base.data.json": {
                        "name": "function_base.data.json"
                    },
                    "numerictypes.data.json": {
                        "name": "numerictypes.data.json"
                    },
                    "_internal.meta.json": {
                        "name": "_internal.meta.json"
                    },
                    "defchararray.meta.json": {
                        "name": "defchararray.meta.json"
                    },
                    "einsumfunc.data.json": {
                        "name": "einsumfunc.data.json"
                    },
                    "numeric.data.json": {
                        "name": "numeric.data.json"
                    },
                    "arrayprint.data.json": {
                        "name": "arrayprint.data.json"
                    },
                    "_internal.data.json": {
                        "name": "_internal.data.json"
                    },
                    "_ufunc_config.data.json": {
                        "name": "_ufunc_config.data.json"
                    },
                    "shape_base.meta.json": {
                        "name": "shape_base.meta.json"
                    },
                    "_ufunc_config.meta.json": {
                        "name": "_ufunc_config.meta.json"
                    },
                    "_type_aliases.data.json": {
                        "name": "_type_aliases.data.json"
                    },
                    "function_base.meta.json": {
                        "name": "function_base.meta.json"
                    },
                    "_type_aliases.meta.json": {
                        "name": "_type_aliases.meta.json"
                    },
                    "_asarray.data.json": {
                        "name": "_asarray.data.json"
                    },
                    "records.meta.json": {
                        "name": "records.meta.json"
                    },
                    "multiarray.meta.json": {
                        "name": "multiarray.meta.json"
                    },
                    "defchararray.data.json": {
                        "name": "defchararray.data.json"
                    },
                    "fromnumeric.meta.json": {
                        "name": "fromnumeric.meta.json"
                    },
                    "records.data.json": {
                        "name": "records.data.json"
                    },
                    "numeric.meta.json": {
                        "name": "numeric.meta.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "multiarray.data.json": {
                        "name": "multiarray.data.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    },
                    "_asarray.meta.json": {
                        "name": "_asarray.meta.json"
                    }
                },
                "matrixlib": {
                    "defmatrix.meta.json": {
                        "name": "defmatrix.meta.json"
                    },
                    "defmatrix.data.json": {
                        "name": "defmatrix.data.json"
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    }
                },
                "_pytesttester.data.json": {
                    "name": "_pytesttester.data.json"
                },
                "_pytesttester.meta.json": {
                    "name": "_pytesttester.meta.json"
                },
                "ctypeslib.data.json": {
                    "name": "ctypeslib.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "ctypeslib.meta.json": {
                    "name": "ctypeslib.meta.json"
                }
            },
            "email": {
                "errors.data.json": {
                    "name": "errors.data.json"
                },
                "message.meta.json": {
                    "name": "message.meta.json"
                },
                "contentmanager.meta.json": {
                    "name": "contentmanager.meta.json"
                },
                "policy.data.json": {
                    "name": "policy.data.json"
                },
                "errors.meta.json": {
                    "name": "errors.meta.json"
                },
                "contentmanager.data.json": {
                    "name": "contentmanager.data.json"
                },
                "charset.data.json": {
                    "name": "charset.data.json"
                },
                "policy.meta.json": {
                    "name": "policy.meta.json"
                },
                "header.data.json": {
                    "name": "header.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "header.meta.json": {
                    "name": "header.meta.json"
                },
                "message.data.json": {
                    "name": "message.data.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "charset.meta.json": {
                    "name": "charset.meta.json"
                }
            },
            "unittest": {
                "result.data.json": {
                    "name": "result.data.json"
                },
                "loader.data.json": {
                    "name": "loader.data.json"
                },
                "async_case.data.json": {
                    "name": "async_case.data.json"
                },
                "loader.meta.json": {
                    "name": "loader.meta.json"
                },
                "async_case.meta.json": {
                    "name": "async_case.meta.json"
                },
                "mock.data.json": {
                    "name": "mock.data.json"
                },
                "runner.meta.json": {
                    "name": "runner.meta.json"
                },
                "result.meta.json": {
                    "name": "result.meta.json"
                },
                "suite.data.json": {
                    "name": "suite.data.json"
                },
                "signals.meta.json": {
                    "name": "signals.meta.json"
                },
                "suite.meta.json": {
                    "name": "suite.meta.json"
                },
                "case.data.json": {
                    "name": "case.data.json"
                },
                "signals.data.json": {
                    "name": "signals.data.json"
                },
                "case.meta.json": {
                    "name": "case.meta.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "runner.data.json": {
                    "name": "runner.data.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "mock.meta.json": {
                    "name": "mock.meta.json"
                }
            },
            "importlib": {
                "abc.meta.json": {
                    "name": "abc.meta.json"
                },
                "abc.data.json": {
                    "name": "abc.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "logging": {
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "helpers": {
                "test": {
                    "test_lib_tasks_pytest.meta.json": {
                        "name": "test_lib_tasks_pytest.meta.json"
                    },
                    "test_lib_tasks_pytest.data.json": {
                        "name": "test_lib_tasks_pytest.data.json"
                    }
                },
                "lib_tasks_docker.meta.json": {
                    "name": "lib_tasks_docker.meta.json"
                },
                "hchatgpt_instructions.data.json": {
                    "name": "hchatgpt_instructions.data.json"
                },
                "lib_tasks_docker.data.json": {
                    "name": "lib_tasks_docker.data.json"
                },
                "hchatgpt_instructions.meta.json": {
                    "name": "hchatgpt_instructions.meta.json"
                }
            },
            "json": {
                "decoder.meta.json": {
                    "name": "decoder.meta.json"
                },
                "encoder.meta.json": {
                    "name": "encoder.meta.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "encoder.data.json": {
                    "name": "encoder.data.json"
                },
                "decoder.data.json": {
                    "name": "decoder.data.json"
                }
            },
            "dev_scripts": {
                "chatgpt": {
                    "chatgpt_assistant_runner.data.json": {
                        "name": "chatgpt_assistant_runner.data.json"
                    },
                    "chatgpt_assistant_runner.meta.json": {
                        "name": "chatgpt_assistant_runner.meta.json"
                    }
                },
                "convert_docx_to_markdown.meta.json": {
                    "name": "convert_docx_to_markdown.meta.json"
                },
                "convert_docx_to_markdown.data.json": {
                    "name": "convert_docx_to_markdown.data.json"
                }
            },
            "requests": {
                "packages": {
                    "urllib3": {
                        "packages": {
                            "ssl_match_hostname": {
                                "__init__.meta.json": {
                                    "name": "__init__.meta.json"
                                },
                                "__init__.data.json": {
                                    "name": "__init__.data.json"
                                }
                            },
                            "__init__.meta.json": {
                                "name": "__init__.meta.json"
                            },
                            "__init__.data.json": {
                                "name": "__init__.data.json"
                            }
                        },
                        "util": {
                            "retry.meta.json": {
                                "name": "retry.meta.json"
                            },
                            "timeout.data.json": {
                                "name": "timeout.data.json"
                            },
                            "url.meta.json": {
                                "name": "url.meta.json"
                            },
                            "ssl_.data.json": {
                                "name": "ssl_.data.json"
                            },
                            "request.data.json": {
                                "name": "request.data.json"
                            },
                            "connection.data.json": {
                                "name": "connection.data.json"
                            },
                            "request.meta.json": {
                                "name": "request.meta.json"
                            },
                            "ssl_.meta.json": {
                                "name": "ssl_.meta.json"
                            },
                            "retry.data.json": {
                                "name": "retry.data.json"
                            },
                            "timeout.meta.json": {
                                "name": "timeout.meta.json"
                            },
                            "response.meta.json": {
                                "name": "response.meta.json"
                            },
                            "response.data.json": {
                                "name": "response.data.json"
                            },
                            "url.data.json": {
                                "name": "url.data.json"
                            },
                            "__init__.meta.json": {
                                "name": "__init__.meta.json"
                            },
                            "__init__.data.json": {
                                "name": "__init__.data.json"
                            },
                            "connection.meta.json": {
                                "name": "connection.meta.json"
                            }
                        },
                        "exceptions.data.json": {
                            "name": "exceptions.data.json"
                        },
                        "fields.data.json": {
                            "name": "fields.data.json"
                        },
                        "poolmanager.meta.json": {
                            "name": "poolmanager.meta.json"
                        },
                        "request.data.json": {
                            "name": "request.data.json"
                        },
                        "connection.data.json": {
                            "name": "connection.data.json"
                        },
                        "filepost.data.json": {
                            "name": "filepost.data.json"
                        },
                        "request.meta.json": {
                            "name": "request.meta.json"
                        },
                        "poolmanager.data.json": {
                            "name": "poolmanager.data.json"
                        },
                        "fields.meta.json": {
                            "name": "fields.meta.json"
                        },
                        "connectionpool.data.json": {
                            "name": "connectionpool.data.json"
                        },
                        "filepost.meta.json": {
                            "name": "filepost.meta.json"
                        },
                        "response.meta.json": {
                            "name": "response.meta.json"
                        },
                        "connectionpool.meta.json": {
                            "name": "connectionpool.meta.json"
                        },
                        "_collections.data.json": {
                            "name": "_collections.data.json"
                        },
                        "response.data.json": {
                            "name": "response.data.json"
                        },
                        "__init__.meta.json": {
                            "name": "__init__.meta.json"
                        },
                        "__init__.data.json": {
                            "name": "__init__.data.json"
                        },
                        "_collections.meta.json": {
                            "name": "_collections.meta.json"
                        },
                        "exceptions.meta.json": {
                            "name": "exceptions.meta.json"
                        },
                        "connection.meta.json": {
                            "name": "connection.meta.json"
                        }
                    },
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    }
                },
                "auth.data.json": {
                    "name": "auth.data.json"
                },
                "api.data.json": {
                    "name": "api.data.json"
                },
                "exceptions.data.json": {
                    "name": "exceptions.data.json"
                },
                "structures.data.json": {
                    "name": "structures.data.json"
                },
                "api.meta.json": {
                    "name": "api.meta.json"
                },
                "compat.meta.json": {
                    "name": "compat.meta.json"
                },
                "hooks.data.json": {
                    "name": "hooks.data.json"
                },
                "sessions.data.json": {
                    "name": "sessions.data.json"
                },
                "auth.meta.json": {
                    "name": "auth.meta.json"
                },
                "utils.data.json": {
                    "name": "utils.data.json"
                },
                "hooks.meta.json": {
                    "name": "hooks.meta.json"
                },
                "models.data.json": {
                    "name": "models.data.json"
                },
                "sessions.meta.json": {
                    "name": "sessions.meta.json"
                },
                "adapters.meta.json": {
                    "name": "adapters.meta.json"
                },
                "models.meta.json": {
                    "name": "models.meta.json"
                },
                "adapters.data.json": {
                    "name": "adapters.data.json"
                },
                "cookies.data.json": {
                    "name": "cookies.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "utils.meta.json": {
                    "name": "utils.meta.json"
                },
                "status_codes.meta.json": {
                    "name": "status_codes.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "cookies.meta.json": {
                    "name": "cookies.meta.json"
                },
                "exceptions.meta.json": {
                    "name": "exceptions.meta.json"
                },
                "compat.data.json": {
                    "name": "compat.data.json"
                },
                "structures.meta.json": {
                    "name": "structures.meta.json"
                },
                "status_codes.data.json": {
                    "name": "status_codes.data.json"
                }
            },
            "google": {
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "yaml": {
                "cyaml.data.json": {
                    "name": "cyaml.data.json"
                },
                "parser.data.json": {
                    "name": "parser.data.json"
                },
                "reader.meta.json": {
                    "name": "reader.meta.json"
                },
                "cyaml.meta.json": {
                    "name": "cyaml.meta.json"
                },
                "loader.data.json": {
                    "name": "loader.data.json"
                },
                "tokens.data.json": {
                    "name": "tokens.data.json"
                },
                "emitter.meta.json": {
                    "name": "emitter.meta.json"
                },
                "composer.data.json": {
                    "name": "composer.data.json"
                },
                "events.meta.json": {
                    "name": "events.meta.json"
                },
                "loader.meta.json": {
                    "name": "loader.meta.json"
                },
                "scanner.meta.json": {
                    "name": "scanner.meta.json"
                },
                "composer.meta.json": {
                    "name": "composer.meta.json"
                },
                "reader.data.json": {
                    "name": "reader.data.json"
                },
                "error.data.json": {
                    "name": "error.data.json"
                },
                "tokens.meta.json": {
                    "name": "tokens.meta.json"
                },
                "error.meta.json": {
                    "name": "error.meta.json"
                },
                "serializer.data.json": {
                    "name": "serializer.data.json"
                },
                "emitter.data.json": {
                    "name": "emitter.data.json"
                },
                "representer.meta.json": {
                    "name": "representer.meta.json"
                },
                "events.data.json": {
                    "name": "events.data.json"
                },
                "nodes.meta.json": {
                    "name": "nodes.meta.json"
                },
                "dumper.meta.json": {
                    "name": "dumper.meta.json"
                },
                "serializer.meta.json": {
                    "name": "serializer.meta.json"
                },
                "resolver.data.json": {
                    "name": "resolver.data.json"
                },
                "constructor.meta.json": {
                    "name": "constructor.meta.json"
                },
                "dumper.data.json": {
                    "name": "dumper.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "nodes.data.json": {
                    "name": "nodes.data.json"
                },
                "constructor.data.json": {
                    "name": "constructor.data.json"
                },
                "scanner.data.json": {
                    "name": "scanner.data.json"
                },
                "resolver.meta.json": {
                    "name": "resolver.meta.json"
                },
                "representer.data.json": {
                    "name": "representer.data.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "parser.meta.json": {
                    "name": "parser.meta.json"
                }
            },
            "collections": {
                "abc.meta.json": {
                    "name": "abc.meta.json"
                },
                "abc.data.json": {
                    "name": "abc.data.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "tra": {
                "extract_people_from_Tra_company_mhtml.data.json": {
                    "name": "extract_people_from_Tra_company_mhtml.data.json"
                },
                "extract_VCs_from_Tra_search_html.data.json": {
                    "name": "extract_VCs_from_Tra_search_html.data.json"
                },
                "extract_VCs_from_Tra_search_mhtml.meta.json": {
                    "name": "extract_VCs_from_Tra_search_mhtml.meta.json"
                },
                "extract_VCs_from_Tra_search_html.meta.json": {
                    "name": "extract_VCs_from_Tra_search_html.meta.json"
                },
                "extract_people_from_Tra_company_mhtml.meta.json": {
                    "name": "extract_people_from_Tra_company_mhtml.meta.json"
                },
                "extract_people_from_Tra_company_html.meta.json": {
                    "name": "extract_people_from_Tra_company_html.meta.json"
                },
                "extract_VCs_from_Tra_search_mhtml.data.json": {
                    "name": "extract_VCs_from_Tra_search_mhtml.data.json"
                },
                "extract_people_from_Tra_company_html.data.json": {
                    "name": "extract_people_from_Tra_company_html.data.json"
                }
            },
            "marketing": {
                "dropcontact": {
                    "__init__.meta.json": {
                        "name": "__init__.meta.json"
                    },
                    "__init__.data.json": {
                        "name": "__init__.data.json"
                    }
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                }
            },
            "os": {
                "path.meta.json": {
                    "name": "path.meta.json"
                },
                "__init__.meta.json": {
                    "name": "__init__.meta.json"
                },
                "__init__.data.json": {
                    "name": "__init__.data.json"
                },
                "path.data.json": {
                    "name": "path.data.json"
                }
            },
            "subprocess.data.json": {
                "name": "subprocess.data.json"
            },
            "_importlib_modulespec.meta.json": {
                "name": "_importlib_modulespec.meta.json"
            },
            "test_plots.data.json": {
                "name": "test_plots.data.json"
            },
            "subprocess.meta.json": {
                "name": "subprocess.meta.json"
            },
            "_ast.meta.json": {
                "name": "_ast.meta.json"
            },
            "threading.meta.json": {
                "name": "threading.meta.json"
            },
            "socket.meta.json": {
                "name": "socket.meta.json"
            },
            "shutil.meta.json": {
                "name": "shutil.meta.json"
            },
            "codecs.data.json": {
                "name": "codecs.data.json"
            },
            "quopri.meta.json": {
                "name": "quopri.meta.json"
            },
            "warnings.data.json": {
                "name": "warnings.data.json"
            },
            "__future__.meta.json": {
                "name": "__future__.meta.json"
            },
            "ast.data.json": {
                "name": "ast.data.json"
            },
            "_warnings.data.json": {
                "name": "_warnings.data.json"
            },
            "genericpath.meta.json": {
                "name": "genericpath.meta.json"
            },
            "types.meta.json": {
                "name": "types.meta.json"
            },
            "typing_extensions.data.json": {
                "name": "typing_extensions.data.json"
            },
            "mmap.meta.json": {
                "name": "mmap.meta.json"
            },
            "contextlib.meta.json": {
                "name": "contextlib.meta.json"
            },
            "re.data.json": {
                "name": "re.data.json"
            },
            "mmap.data.json": {
                "name": "mmap.data.json"
            },
            "enum.meta.json": {
                "name": "enum.meta.json"
            },
            "io.meta.json": {
                "name": "io.meta.json"
            },
            "string.data.json": {
                "name": "string.data.json"
            },
            "getpass.meta.json": {
                "name": "getpass.meta.json"
            },
            "_warnings.meta.json": {
                "name": "_warnings.meta.json"
            },
            "zipfile.meta.json": {
                "name": "zipfile.meta.json"
            },
            "re.meta.json": {
                "name": "re.meta.json"
            },
            "abc.meta.json": {
                "name": "abc.meta.json"
            },
            "test_plots.meta.json": {
                "name": "test_plots.meta.json"
            },
            "_ast.data.json": {
                "name": "_ast.data.json"
            },
            "builtins.data.json": {
                "name": "builtins.data.json"
            },
            "time.data.json": {
                "name": "time.data.json"
            },
            "zipfile.data.json": {
                "name": "zipfile.data.json"
            },
            "tempfile.meta.json": {
                "name": "tempfile.meta.json"
            },
            "math.meta.json": {
                "name": "math.meta.json"
            },
            "io.data.json": {
                "name": "io.data.json"
            },
            "posix.data.json": {
                "name": "posix.data.json"
            },
            "enum.data.json": {
                "name": "enum.data.json"
            },
            "threading.data.json": {
                "name": "threading.data.json"
            },
            "types.data.json": {
                "name": "types.data.json"
            },
            "socket.data.json": {
                "name": "socket.data.json"
            },
            "functools.data.json": {
                "name": "functools.data.json"
            },
            "array.meta.json": {
                "name": "array.meta.json"
            },
            "shutil.data.json": {
                "name": "shutil.data.json"
            },
            "warnings.meta.json": {
                "name": "warnings.meta.json"
            },
            "typing.meta.json": {
                "name": "typing.meta.json"
            },
            "ssl.meta.json": {
                "name": "ssl.meta.json"
            },
            "sys.meta.json": {
                "name": "sys.meta.json"
            },
            "codecs.meta.json": {
                "name": "codecs.meta.json"
            },
            "quopri.data.json": {
                "name": "quopri.data.json"
            },
            "functools.meta.json": {
                "name": "functools.meta.json"
            },
            "ast.meta.json": {
                "name": "ast.meta.json"
            },
            "datetime.meta.json": {
                "name": "datetime.meta.json"
            },
            "contextlib.data.json": {
                "name": "contextlib.data.json"
            },
            "builtins.meta.json": {
                "name": "builtins.meta.json"
            },
            "ssl.data.json": {
                "name": "ssl.data.json"
            },
            "tempfile.data.json": {
                "name": "tempfile.data.json"
            },
            "math.data.json": {
                "name": "math.data.json"
            },
            "typing.data.json": {
                "name": "typing.data.json"
            },
            "typing_extensions.meta.json": {
                "name": "typing_extensions.meta.json"
            },
            "string.meta.json": {
                "name": "string.meta.json"
            },
            "genericpath.data.json": {
                "name": "genericpath.data.json"
            },
            "array.data.json": {
                "name": "array.data.json"
            },
            "abc.data.json": {
                "name": "abc.data.json"
            },
            "__future__.data.json": {
                "name": "__future__.data.json"
            },
            "getpass.data.json": {
                "name": "getpass.data.json"
            },
            "time.meta.json": {
                "name": "time.meta.json"
            },
            "argparse.meta.json": {
                "name": "argparse.meta.json"
            },
            "datetime.data.json": {
                "name": "datetime.data.json"
            },
            "posix.meta.json": {
                "name": "posix.meta.json"
            },
            "@plugins_snapshot.json": {
                "name": "@plugins_snapshot.json"
            },
            "sys.data.json": {
                "name": "sys.data.json"
            },
            "argparse.data.json": {
                "name": "argparse.data.json"
            },
            "_importlib_modulespec.data.json": {
                "name": "_importlib_modulespec.data.json"
            }
        },
        ".gitignore": {
            "name": ".gitignore"
        }
    },
    "csv_test": {},
    ".pytest_cache": {
        "v": {
            "cache": {
                "stepwise": {
                    "name": "stepwise"
                },
                "lastfailed": {
                    "name": "lastfailed"
                },
                "nodeids": {
                    "name": "nodeids"
                }
            }
        },
        ".gitignore": {
            "name": ".gitignore"
        },
        "README.md": {
            "name": "README.md"
        },
        "CACHEDIR.TAG": {
            "name": "CACHEDIR.TAG"
        }
    },
    "linkedin": {
        "extract_email": {
            ".ipynb_checkpoints": {
                "Selenium_from_tracxn-checkpoint.ipynb": {
                    "name": "Selenium_from_tracxn-checkpoint.ipynb"
                },
                "Extract_email_from_LinkedIn_profiles-checkpoint.ipynb": {
                    "name": "Extract_email_from_LinkedIn_profiles-checkpoint.ipynb"
                }
            }
        },
        "config": {
            "phantom_api_key.py": {
                "name": "phantom_api_key.py"
            }
        },
        "notebooks": {
            ".ipynb_checkpoints": {
                "Extract_VCs_from_html-checkpoint.ipynb": {
                    "name": "Extract_VCs_from_html-checkpoint.ipynb"
                },
                "SorrTask601_Extract_people_from_Tra_company_html-checkpoint.ipynb": {
                    "name": "SorrTask601_Extract_people_from_Tra_company_html-checkpoint.ipynb"
                },
                "SorrTask601_Extract_VCs_from_Tra_search_html-checkpoint.ipynb": {
                    "name": "SorrTask601_Extract_VCs_from_Tra_search_html-checkpoint.ipynb"
                },
                "create_gsheets_and_fetch_result_csv-checkpoint.ipynb": {
                    "name": "create_gsheets_and_fetch_result_csv-checkpoint.ipynb"
                },
                "Extract_people_from_company_html-checkpoint.ipynb": {
                    "name": "Extract_people_from_company_html-checkpoint.ipynb"
                },
                "Add_emails_to_gsheet-checkpoint.ipynb": {
                    "name": "Add_emails_to_gsheet-checkpoint.ipynb"
                }
            },
            "create_gsheets_and_fetch_result_csv.py": {
                "name": "create_gsheets_and_fetch_result_csv.py"
            },
            "process_search_export.ipynb": {
                "name": "process_search_export.ipynb"
            },
            "create_gsheets_and_fetch_result_csv.ipynb": {
                "name": "create_gsheets_and_fetch_result_csv.ipynb"
            },
            "process_profile_export.py": {
                "name": "process_profile_export.py"
            },
            "process_search_export.py": {
                "name": "process_search_export.py"
            },
            "process_profile_export.ipynb": {
                "name": "process_profile_export.ipynb"
            }
        },
        "phantom_api": {
            "phantombuster_api.py": {
                "name": "phantombuster_api.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    "marketing": {
        "data": {
            "SequoiaCapital_Tra.mhtml": {
                "name": "SequoiaCapital_Tra.mhtml"
            },
            "Investors_VC_Tra.mhtml": {
                "name": "Investors_VC_Tra.mhtml"
            }
        },
        "docsend": {
            "notebooks": {
                "Postprocess_Docsend_Data.ipynb": {
                    "name": "Postprocess_Docsend_Data.ipynb"
                },
                "Postprocess_Docsend_Data.py": {
                    "name": "Postprocess_Docsend_Data.py"
                }
            }
        },
        "signal": {
            "extract_investors_from_signal_list.py": {
                "name": "extract_investors_from_signal_list.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        ".ipynb_checkpoints": {},
        "dropcontact": {
            ".ipynb_checkpoints": {
                "get_email_from_dropcontact-checkpoint.ipynb": {
                    "name": "get_email_from_dropcontact-checkpoint.ipynb"
                }
            },
            "find_email.py": {
                "name": "find_email.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "notebooks": {
            ".ipynb_checkpoints": {
                "SorrTask601_Extract_people_from_Tra_company_html-checkpoint.ipynb": {
                    "name": "SorrTask601_Extract_people_from_Tra_company_html-checkpoint.ipynb"
                },
                "SorrTask612_Get_information_from_Signal-checkpoint.ipynb": {
                    "name": "SorrTask612_Get_information_from_Signal-checkpoint.ipynb"
                },
                "SorrTask601_Extract_VCs_from_Tra_search_mhtml-checkpoint.ipynb": {
                    "name": "SorrTask601_Extract_VCs_from_Tra_search_mhtml-checkpoint.ipynb"
                },
                "SorrTask606_Get_email_from_dropcontact-checkpoint.ipynb": {
                    "name": "SorrTask606_Get_email_from_dropcontact-checkpoint.ipynb"
                }
            },
            "SorrTask601_Extract_people_from_Tra_company_html.ipynb": {
                "name": "SorrTask601_Extract_people_from_Tra_company_html.ipynb"
            },
            "SorrTask612_Get_information_from_Signal.py": {
                "name": "SorrTask612_Get_information_from_Signal.py"
            },
            "SorrTask606_Get_email_from_dropcontact.ipynb": {
                "name": "SorrTask606_Get_email_from_dropcontact.ipynb"
            },
            "SorrTask601_Extract_VCs_from_Tra_search_mhtml.ipynb": {
                "name": "SorrTask601_Extract_VCs_from_Tra_search_mhtml.ipynb"
            },
            "SorrTask612_Get_information_from_Signal.ipynb": {
                "name": "SorrTask612_Get_information_from_Signal.ipynb"
            },
            "SorrTask601_Extract_VCs_from_Tra_search_mhtml.py": {
                "name": "SorrTask601_Extract_VCs_from_Tra_search_mhtml.py"
            },
            "SorrTask601_Extract_people_from_Tra_company_html.py": {
                "name": "SorrTask601_Extract_people_from_Tra_company_html.py"
            },
            "SorrTask606_Get_email_from_dropcontact.py": {
                "name": "SorrTask606_Get_email_from_dropcontact.py"
            }
        },
        "result_csv": {},
        "tra": {
            "extract_people_from_Tra_company_mhtml.py": {
                "name": "extract_people_from_Tra_company_mhtml.py"
            },
            "extract_VCs_from_Tra_search_mhtml.py": {
                "name": "extract_VCs_from_Tra_search_mhtml.py"
            },
            "__init__.py": {
                "name": "__init__.py"
            }
        },
        "__init__.py": {
            "name": "__init__.py"
        }
    },
    ".gitignore": {
        "name": ".gitignore"
    },
    "linter_warnings.txt": {
        "name": "linter_warnings.txt"
    },
    "LICENSE": {
        "name": "LICENSE"
    },
    ".dockerignore.prod": {
        "name": ".dockerignore.prod"
    },
    "README.md": {
        "name": "README.md"
    },
    ".dockerignore": {
        "name": ".dockerignore"
    },
    "pytest.ini": {
        "name": "pytest.ini"
    },
    "changelog.txt": {
        "name": "changelog.txt"
    },
    "tmp.amp_normalize_import.txt": {
        "name": "tmp.amp_normalize_import.txt"
    },
    "conftest.py": {
        "name": "conftest.py"
    },
    "linter_output.txt": {
        "name": "linter_output.txt"
    },
    ".coveragerc": {
        "name": ".coveragerc"
    },
    "mypy.ini": {
        "name": "mypy.ini"
    },
    "tasks.py": {
        "name": "tasks.py"
    },
    "repo_config.py": {
        "name": "repo_config.py"
    },
    ".isort.cfg": {
        "name": ".isort.cfg"
    },
    "setup.py": {
        "name": "setup.py"
    },
    "code_organization.md": {
        "name": "code_organization.md"
    },
    ".dockerignore.dev": {
        "name": ".dockerignore.dev"
    },
    "invoke.yaml": {
        "name": "invoke.yaml"
    },
    "__init__.py": {
        "name": "__init__.py"
    }
}
