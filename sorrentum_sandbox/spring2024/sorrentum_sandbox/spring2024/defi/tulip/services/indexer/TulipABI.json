{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_baseToken",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "_baseTokenSymbol",
            "type": "string"
          },
          {
            "internalType": "uint16",
            "name": "_pairID",
            "type": "uint16"
          },
          {
            "internalType": "uint8",
            "name": "_priceMode",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "_priceFeedOracle",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_twapVwapOracle",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "buyOrderDone",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "swapID",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "orderID",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "baseToken",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "quoteToken",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "limitPrice",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "depositAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "senderAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint16",
            "name": "pairID",
            "type": "uint16"
          }
        ],
        "name": "newBuyOrder",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "swapID",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "orderID",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "baseToken",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "quoteToken",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "limitPrice",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "depositAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "senderAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint16",
            "name": "pairID",
            "type": "uint16"
          }
        ],
        "name": "newSellOrder",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [],
        "name": "sellOrderDone",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "baseTokenSymbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_baseToken",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_quantity",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_limitPrice",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_depositAddress",
            "type": "address"
          }
        ],
        "name": "buyOrder",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "currentOrderID",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "currentSwapID",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "pairID",
        "outputs": [
          {
            "internalType": "uint16",
            "name": "",
            "type": "uint16"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "priceFeedOracle",
        "outputs": [
          {
            "internalType": "contract PriceFeedOracle",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "priceMode",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "runSwap",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_baseToken",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_quantity",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_limitPrice",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_depositAddress",
            "type": "address"
          }
        ],
        "name": "sellOrder",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "twapVwapOracle",
        "outputs": [
          {
            "internalType": "contract TwapVwapAdapter",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "allSourcePaths": {
      "10": "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
      "17": "node_modules/@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol",
      "18": "node_modules/@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol",
      "20": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
      "22": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "24": "node_modules/@openzeppelin/contracts/utils/Context.sol",
      "5": "contracts/PriceFeedOracle.sol",
      "6": "contracts/Tulip.sol",
      "7": "contracts/TwapVwapAdapter.sol",
      "8": "node_modules/@chainlink/contracts/src/v0.8/Chainlink.sol"
    },
    "ast": {
      "absolutePath": "contracts/Tulip.sol",
      "exportedSymbols": {
        "AggregatorV3Interface": [
          3102
        ],
        "BufferChainlink": [
          4839
        ],
        "CBORChainlink": [
          5286
        ],
        "Chainlink": [
          4011
        ],
        "ChainlinkClient": [
          3695
        ],
        "ChainlinkRequestInterface": [
          4044
        ],
        "Context": [
          3717
        ],
        "ENSInterface": [
          4124
        ],
        "ENSResolver_Chainlink": [
          4317
        ],
        "IERC20": [
          2469
        ],
        "LinkTokenInterface": [
          4219
        ],
        "OperatorInterface": [
          4299
        ],
        "OracleInterface": [
          5325
        ],
        "Ownable": [
          2391
        ],
        "PointerInterface": [
          4307
        ],
        "PriceFeedOracle": [
          1666
        ],
        "Tulip": [
          2055
        ],
        "TwapVwapAdapter": [
          2278
        ]
      },
      "id": 2056,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1668,
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "32:23:6"
        },
        {
          "absolutePath": "contracts/PriceFeedOracle.sol",
          "file": "./PriceFeedOracle.sol",
          "id": 1669,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 2056,
          "sourceUnit": 1667,
          "src": "57:31:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "contracts/TwapVwapAdapter.sol",
          "file": "./TwapVwapAdapter.sol",
          "id": 1670,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 2056,
          "sourceUnit": 2279,
          "src": "89:31:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
          "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
          "id": 1671,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 2056,
          "sourceUnit": 2392,
          "src": "122:68:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 1672,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 2056,
          "sourceUnit": 2470,
          "src": "191:72:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 1673,
                "name": "Ownable",
                "nameLocations": [
                  "283:7:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2391,
                "src": "283:7:6"
              },
              "id": 1674,
              "nodeType": "InheritanceSpecifier",
              "src": "283:7:6"
            }
          ],
          "canonicalName": "Tulip",
          "contractDependencies": [
            1666
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "id": 2055,
          "linearizedBaseContracts": [
            2055,
            2391,
            3717
          ],
          "name": "Tulip",
          "nameLocation": "274:5:6",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 1677,
              "mutability": "mutable",
              "name": "baseToken",
              "nameLocation": "351:9:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "344:16:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2469",
                "typeString": "contract IERC20"
              },
              "typeName": {
                "id": 1676,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1675,
                  "name": "IERC20",
                  "nameLocations": [
                    "344:6:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2469,
                  "src": "344:6:6"
                },
                "referencedDeclaration": 2469,
                "src": "344:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$2469",
                  "typeString": "contract IERC20"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "functionSelector": "b9ab9927",
              "id": 1680,
              "mutability": "mutable",
              "name": "priceFeedOracle",
              "nameLocation": "459:15:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "436:38:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                "typeString": "contract PriceFeedOracle"
              },
              "typeName": {
                "id": 1679,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1678,
                  "name": "PriceFeedOracle",
                  "nameLocations": [
                    "436:15:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1666,
                  "src": "436:15:6"
                },
                "referencedDeclaration": 1666,
                "src": "436:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                  "typeString": "contract PriceFeedOracle"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "e7d37e47",
              "id": 1683,
              "mutability": "mutable",
              "name": "twapVwapOracle",
              "nameLocation": "609:14:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "586:37:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                "typeString": "contract TwapVwapAdapter"
              },
              "typeName": {
                "id": 1682,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1681,
                  "name": "TwapVwapAdapter",
                  "nameLocations": [
                    "586:15:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2278,
                  "src": "586:15:6"
                },
                "referencedDeclaration": 2278,
                "src": "586:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                  "typeString": "contract TwapVwapAdapter"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "9fe5c1ac",
              "id": 1685,
              "mutability": "mutable",
              "name": "baseTokenSymbol",
              "nameLocation": "643:15:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "629:29:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1684,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "629:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "07615815",
              "id": 1687,
              "mutability": "mutable",
              "name": "priceMode",
              "nameLocation": "791:9:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "778:22:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              },
              "typeName": {
                "id": 1686,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "778:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "36fdbce4",
              "id": 1689,
              "mutability": "mutable",
              "name": "pairID",
              "nameLocation": "880:6:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "866:20:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              },
              "typeName": {
                "id": 1688,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "866:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "9e9d301b",
              "id": 1691,
              "mutability": "mutable",
              "name": "currentSwapID",
              "nameLocation": "981:13:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "966:28:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1690,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "f65633bd",
              "id": 1693,
              "mutability": "mutable",
              "name": "currentOrderID",
              "nameLocation": "1096:14:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "1081:29:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1692,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1081:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "id": 1696,
              "mutability": "mutable",
              "name": "ordersID",
              "nameLocation": "1179:8:6",
              "nodeType": "VariableDeclaration",
              "scope": 2055,
              "src": "1169:18:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                "typeString": "uint256[]"
              },
              "typeName": {
                "baseType": {
                  "id": 1694,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1169:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 1695,
                "nodeType": "ArrayTypeName",
                "src": "1169:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              },
              "visibility": "internal"
            },
            {
              "anonymous": false,
              "eventSelector": "63633e980cf83cc2f0c855d9aee9cba28f3458e53c5b080f9187b4c2ff889eda",
              "id": 1716,
              "name": "newBuyOrder",
              "nameLocation": "1209:11:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1715,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1698,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "swapID",
                    "nameLocation": "1246:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1230:22:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1697,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1230:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1700,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "orderID",
                    "nameLocation": "1278:7:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1262:23:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1699,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1262:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1702,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "baseToken",
                    "nameLocation": "1303:9:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1295:17:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1701,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1295:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1704,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "quoteToken",
                    "nameLocation": "1330:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1322:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1703,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1322:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1706,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "1358:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1350:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1705,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1350:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1708,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "limitPrice",
                    "nameLocation": "1382:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1374:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1707,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1374:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1710,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "depositAddress",
                    "nameLocation": "1410:14:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1402:22:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1709,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1402:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1712,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "senderAddress",
                    "nameLocation": "1442:13:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1434:21:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1711,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1434:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1714,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "pairID",
                    "nameLocation": "1472:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1716,
                    "src": "1465:13:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 1713,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "1465:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1220:265:6"
              },
              "src": "1203:283:6"
            },
            {
              "anonymous": false,
              "eventSelector": "de3ef5cce083fde9fdf5f9dfc0520eab7d9b2da6636f54024dd9f397596186fd",
              "id": 1736,
              "name": "newSellOrder",
              "nameLocation": "1497:12:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1735,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1718,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "swapID",
                    "nameLocation": "1535:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1519:22:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1717,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1519:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1720,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "orderID",
                    "nameLocation": "1567:7:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1551:23:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1719,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1551:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1722,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "baseToken",
                    "nameLocation": "1592:9:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1584:17:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1721,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1584:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1724,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "quoteToken",
                    "nameLocation": "1619:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1611:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1723,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1611:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1726,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "1647:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1639:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1725,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1639:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1728,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "limitPrice",
                    "nameLocation": "1671:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1663:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1727,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1663:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1730,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "depositAddress",
                    "nameLocation": "1699:14:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1691:22:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1729,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1691:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1732,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "senderAddress",
                    "nameLocation": "1731:13:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1723:21:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1731,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1723:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1734,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "pairID",
                    "nameLocation": "1761:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1736,
                    "src": "1754:13:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 1733,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "1754:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1509:264:6"
              },
              "src": "1491:283:6"
            },
            {
              "anonymous": false,
              "eventSelector": "4794ebc3c42e8c37f84f847eab46443cce64cb4479e25ccc047c091c12c223db",
              "id": 1738,
              "name": "buyOrderDone",
              "nameLocation": "1786:12:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1737,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1798:2:6"
              },
              "src": "1780:21:6"
            },
            {
              "anonymous": false,
              "eventSelector": "bdbc59b605b2fe178c119f1b47489daa4040166188c77bab6ff88e15b8bbf3d1",
              "id": 1740,
              "name": "sellOrderDone",
              "nameLocation": "1812:13:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 1739,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1825:2:6"
              },
              "src": "1806:22:6"
            },
            {
              "body": {
                "id": 1788,
                "nodeType": "Block",
                "src": "2554:381:6",
                "statements": [
                  {
                    "expression": {
                      "id": 1758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1756,
                        "name": "baseTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "2564:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1757,
                        "name": "_baseTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1745,
                        "src": "2582:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "2564:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 1759,
                    "nodeType": "ExpressionStatement",
                    "src": "2564:34:6"
                  },
                  {
                    "expression": {
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1760,
                        "name": "priceMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "2608:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1761,
                        "name": "_priceMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1749,
                        "src": "2620:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2608:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1763,
                    "nodeType": "ExpressionStatement",
                    "src": "2608:22:6"
                  },
                  {
                    "expression": {
                      "id": 1766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1764,
                        "name": "pairID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "2640:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1765,
                        "name": "_pairID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "2649:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "2640:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1767,
                    "nodeType": "ExpressionStatement",
                    "src": "2640:16:6"
                  },
                  {
                    "expression": {
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1768,
                        "name": "priceFeedOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "2716:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                          "typeString": "contract PriceFeedOracle"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1772,
                            "name": "_priceFeedOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1751,
                            "src": "2754:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2734:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_PriceFeedOracle_$1666_$",
                            "typeString": "function (address) returns (contract PriceFeedOracle)"
                          },
                          "typeName": {
                            "id": 1770,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1769,
                              "name": "PriceFeedOracle",
                              "nameLocations": [
                                "2738:15:6"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1666,
                              "src": "2738:15:6"
                            },
                            "referencedDeclaration": 1666,
                            "src": "2738:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                              "typeString": "contract PriceFeedOracle"
                            }
                          }
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2734:37:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                          "typeString": "contract PriceFeedOracle"
                        }
                      },
                      "src": "2716:55:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                        "typeString": "contract PriceFeedOracle"
                      }
                    },
                    "id": 1775,
                    "nodeType": "ExpressionStatement",
                    "src": "2716:55:6"
                  },
                  {
                    "expression": {
                      "id": 1780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1776,
                        "name": "twapVwapOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1683,
                        "src": "2839:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                          "typeString": "contract TwapVwapAdapter"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1778,
                            "name": "_twapVwapOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1753,
                            "src": "2872:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1777,
                          "name": "TwapVwapAdapter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2278,
                          "src": "2856:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TwapVwapAdapter_$2278_$",
                            "typeString": "type(contract TwapVwapAdapter)"
                          }
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2856:32:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                          "typeString": "contract TwapVwapAdapter"
                        }
                      },
                      "src": "2839:49:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                        "typeString": "contract TwapVwapAdapter"
                      }
                    },
                    "id": 1781,
                    "nodeType": "ExpressionStatement",
                    "src": "2839:49:6"
                  },
                  {
                    "expression": {
                      "id": 1786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1782,
                        "name": "baseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1677,
                        "src": "2898:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 1784,
                            "name": "_baseToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1743,
                            "src": "2917:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1783,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2469,
                          "src": "2910:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2469_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2910:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "2898:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 1787,
                    "nodeType": "ExpressionStatement",
                    "src": "2898:30:6"
                  }
                ]
              },
              "documentation": {
                "id": 1741,
                "nodeType": "StructuredDocumentation",
                "src": "1835:511:6",
                "text": "@param _baseToken: a token to swap (e.g., wBTC, ADA)\n @param _baseTokenSymbol: base token symbol to use with twap/vwap API\n @param _pairID: The numerical ID of unique swap pair, e.g. wBTC/ETH.\n @param _priceMode: 1 for chainlink price feed, 2 for twap, 3 for vwap\n @param _priceFeedOracle: contract providing the price for the _baseToken from chainlink price feed\n @param _twapVwapOracle: contract providing the price for the _baseToken from our twap/vwap external adapter"
              },
              "id": 1789,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1754,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1743,
                    "mutability": "mutable",
                    "name": "_baseToken",
                    "nameLocation": "2380:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1789,
                    "src": "2372:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1742,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2372:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1745,
                    "mutability": "mutable",
                    "name": "_baseTokenSymbol",
                    "nameLocation": "2414:16:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1789,
                    "src": "2400:30:6",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1744,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2400:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1747,
                    "mutability": "mutable",
                    "name": "_pairID",
                    "nameLocation": "2447:7:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1789,
                    "src": "2440:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 1746,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "2440:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1749,
                    "mutability": "mutable",
                    "name": "_priceMode",
                    "nameLocation": "2470:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1789,
                    "src": "2464:16:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1748,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "2464:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1751,
                    "mutability": "mutable",
                    "name": "_priceFeedOracle",
                    "nameLocation": "2498:16:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1789,
                    "src": "2490:24:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1750,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2490:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1753,
                    "mutability": "mutable",
                    "name": "_twapVwapOracle",
                    "nameLocation": "2532:15:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1789,
                    "src": "2524:23:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1752,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2524:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2362:191:6"
              },
              "returnParameters": {
                "id": 1755,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2554:0:6"
              },
              "scope": 2055,
              "src": "2351:584:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1856,
                "nodeType": "Block",
                "src": "3473:652:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1804,
                            "name": "_baseToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "3491:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1807,
                                "name": "baseToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "3513:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$2469",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$2469",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3505:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1805,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3505:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3505:18:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3491:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1803,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "3483:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 1810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3483:41:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1811,
                    "nodeType": "ExpressionStatement",
                    "src": "3483:41:6"
                  },
                  {
                    "assignments": [
                      1813
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1813,
                        "mutability": "mutable",
                        "name": "fullPrice",
                        "nameLocation": "3542:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1856,
                        "src": "3534:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1812,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3534:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1822,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1814,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1794,
                              "src": "3555:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1815,
                              "name": "_limitPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1796,
                              "src": "3567:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3555:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1817,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3554:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 1818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3582:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3588:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "3582:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "3554:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3534:56:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1824,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3621:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3625:5:6",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3621:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1826,
                            "name": "fullPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1813,
                            "src": "3634:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3621:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "56616c75652073686f756c6420636f766572207468652066756c6c207072696365206f662072657175657374656420616d6f756e74206f6620746f6b656e73",
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3657:65:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ab125199a54753f77755f8f02070c6d37e6cdd7b2d176e3844e53ff4d0b3adfb",
                            "typeString": "literal_string \"Value should cover the full price of requested amount of tokens\""
                          },
                          "value": "Value should cover the full price of requested amount of tokens"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ab125199a54753f77755f8f02070c6d37e6cdd7b2d176e3844e53ff4d0b3adfb",
                            "typeString": "literal_string \"Value should cover the full price of requested amount of tokens\""
                          }
                        ],
                        "id": 1823,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "3600:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3600:132:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1830,
                    "nodeType": "ExpressionStatement",
                    "src": "3600:132:6"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1832,
                          "name": "currentSwapID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "3772:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1833,
                          "name": "currentOrderID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1693,
                          "src": "3799:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1834,
                          "name": "_baseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1792,
                          "src": "3827:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3859:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3851:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1835,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3851:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3851:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1839,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1794,
                          "src": "3877:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1840,
                          "name": "_limitPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1796,
                          "src": "3900:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1841,
                          "name": "_depositAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1798,
                          "src": "3925:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1842,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3954:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3958:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3954:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1844,
                          "name": "pairID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "3978:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 1831,
                        "name": "newBuyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "3747:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint16_$returns$__$",
                          "typeString": "function (uint256,uint256,address,address,uint256,uint256,address,address,uint16)"
                        }
                      },
                      "id": 1845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:247:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1846,
                    "nodeType": "EmitStatement",
                    "src": "3742:252:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1850,
                          "name": "currentOrderID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1693,
                          "src": "4018:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1847,
                          "name": "ordersID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "4004:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4013:4:6",
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4004:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                          "typeString": "function (uint256[] storage pointer,uint256)"
                        }
                      },
                      "id": 1851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4004:29:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1852,
                    "nodeType": "ExpressionStatement",
                    "src": "4004:29:6"
                  },
                  {
                    "expression": {
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4102:16:6",
                      "subExpression": {
                        "id": 1853,
                        "name": "currentOrderID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1693,
                        "src": "4102:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1802,
                    "id": 1855,
                    "nodeType": "Return",
                    "src": "4095:23:6"
                  }
                ]
              },
              "documentation": {
                "id": 1790,
                "nodeType": "StructuredDocumentation",
                "src": "2941:351:6",
                "text": "@notice Create an order to buy the tokens for ETH\n @param _baseToken: the base ERC20 token\n @param _quantity: amount of token to buy with 18 decimals, e.g. 1 * 10**18 for 1 token\n @param _limitPrice: the max price for one token in WEI\n @param _depositAddress: the address to send the tokens after the order is completed"
              },
              "functionSelector": "3e9bf32f",
              "id": 1857,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "buyOrder",
              "nameLocation": "3306:8:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1799,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1792,
                    "mutability": "mutable",
                    "name": "_baseToken",
                    "nameLocation": "3332:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1857,
                    "src": "3324:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1791,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3324:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1794,
                    "mutability": "mutable",
                    "name": "_quantity",
                    "nameLocation": "3360:9:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1857,
                    "src": "3352:17:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1793,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3352:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1796,
                    "mutability": "mutable",
                    "name": "_limitPrice",
                    "nameLocation": "3387:11:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1857,
                    "src": "3379:19:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1795,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3379:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1798,
                    "mutability": "mutable",
                    "name": "_depositAddress",
                    "nameLocation": "3416:15:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1857,
                    "src": "3408:23:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1797,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3408:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3314:123:6"
              },
              "returnParameters": {
                "id": 1802,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1801,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1857,
                    "src": "3464:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1800,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3464:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3463:9:6"
              },
              "scope": 2055,
              "src": "3297:828:6",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1936,
                "nodeType": "Block",
                "src": "4669:769:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1872,
                            "name": "_baseToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1860,
                            "src": "4687:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1875,
                                "name": "baseToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "4709:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$2469",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$2469",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4701:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1873,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4701:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4701:18:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4687:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1871,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "4679:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 1878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4679:41:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1879,
                    "nodeType": "ExpressionStatement",
                    "src": "4679:41:6"
                  },
                  {
                    "assignments": [
                      1881
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1881,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "4819:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1936,
                        "src": "4811:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1880,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4811:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1891,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1884,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4851:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4855:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4851:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1888,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4871:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Tulip_$2055",
                                "typeString": "contract Tulip"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Tulip_$2055",
                                "typeString": "contract Tulip"
                              }
                            ],
                            "id": 1887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4863:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1886,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4863:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4863:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1882,
                          "name": "baseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "4831:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2469",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4841:9:6",
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2446,
                        "src": "4831:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 1890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4831:46:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4811:66:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1893,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1881,
                            "src": "4895:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1894,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "4908:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4895:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "436865636b2074686520746f6b656e20616c6c6f77616e6365",
                          "id": 1896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4919:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                            "typeString": "literal_string \"Check the token allowance\""
                          },
                          "value": "Check the token allowance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_727fc1e09070e074c1e4faeaff9f905dd58d37cba7b8f174a2a35f24c4fc6650",
                            "typeString": "literal_string \"Check the token allowance\""
                          }
                        ],
                        "id": 1892,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "4887:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4887:60:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1898,
                    "nodeType": "ExpressionStatement",
                    "src": "4887:60:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1902,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5007:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5011:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5007:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 1906,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5027:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Tulip_$2055",
                                "typeString": "contract Tulip"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Tulip_$2055",
                                "typeString": "contract Tulip"
                              }
                            ],
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5019:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1904,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5019:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5019:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1908,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "5034:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1899,
                          "name": "baseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1677,
                          "src": "4984:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2469",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4994:12:6",
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2468,
                        "src": "4984:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 1909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4984:60:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1910,
                    "nodeType": "ExpressionStatement",
                    "src": "4984:60:6"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 1912,
                          "name": "currentSwapID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "5085:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1913,
                          "name": "currentOrderID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1693,
                          "src": "5112:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1914,
                          "name": "_baseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1860,
                          "src": "5140:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5172:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5164:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1915,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5164:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5164:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1919,
                          "name": "_quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "5190:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1920,
                          "name": "_limitPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "5213:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1921,
                          "name": "_depositAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1866,
                          "src": "5238:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1922,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5267:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5271:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5267:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1924,
                          "name": "pairID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "5291:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 1911,
                        "name": "newSellOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1736,
                        "src": "5059:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint16_$returns$__$",
                          "typeString": "function (uint256,uint256,address,address,uint256,uint256,address,address,uint16)"
                        }
                      },
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5059:248:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1926,
                    "nodeType": "EmitStatement",
                    "src": "5054:253:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1930,
                          "name": "currentOrderID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1693,
                          "src": "5331:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1927,
                          "name": "ordersID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1696,
                          "src": "5317:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5326:4:6",
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "5317:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                          "typeString": "function (uint256[] storage pointer,uint256)"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5317:29:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1932,
                    "nodeType": "ExpressionStatement",
                    "src": "5317:29:6"
                  },
                  {
                    "expression": {
                      "id": 1934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5415:16:6",
                      "subExpression": {
                        "id": 1933,
                        "name": "currentOrderID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1693,
                        "src": "5415:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1870,
                    "id": 1935,
                    "nodeType": "Return",
                    "src": "5408:23:6"
                  }
                ]
              },
              "documentation": {
                "id": 1858,
                "nodeType": "StructuredDocumentation",
                "src": "4131:356:6",
                "text": "@notice Create an order to sell the tokens for ETH.\n @param _baseToken: amount of token to sell\n @param _quantity: amount of token to sell with 18 decimals, e.g. 1 * 10**18 for 1 token\n @param _limitPrice: the upper price for one token in WEI\n @param _depositAddress: the address to send the ETH after the order is completed"
              },
              "functionSelector": "1ce959b8",
              "id": 1937,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "sellOrder",
              "nameLocation": "4501:9:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1867,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1860,
                    "mutability": "mutable",
                    "name": "_baseToken",
                    "nameLocation": "4528:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1937,
                    "src": "4520:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1859,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4520:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1862,
                    "mutability": "mutable",
                    "name": "_quantity",
                    "nameLocation": "4556:9:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1937,
                    "src": "4548:17:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1861,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4548:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1864,
                    "mutability": "mutable",
                    "name": "_limitPrice",
                    "nameLocation": "4583:11:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1937,
                    "src": "4575:19:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1863,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4575:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1866,
                    "mutability": "mutable",
                    "name": "_depositAddress",
                    "nameLocation": "4612:15:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1937,
                    "src": "4604:23:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1865,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4604:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4510:123:6"
              },
              "returnParameters": {
                "id": 1870,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1869,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1937,
                    "src": "4660:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1868,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4660:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4659:9:6"
              },
              "scope": 2055,
              "src": "4492:946:6",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 1945,
                "nodeType": "Block",
                "src": "5489:39:6",
                "statements": [
                  {
                    "expression": {
                      "id": 1943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5506:15:6",
                      "subExpression": {
                        "id": 1942,
                        "name": "currentSwapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "5506:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1941,
                    "id": 1944,
                    "nodeType": "Return",
                    "src": "5499:22:6"
                  }
                ]
              },
              "functionSelector": "dea80c79",
              "id": 1946,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "runSwap",
              "nameLocation": "5454:7:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1938,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "5461:2:6"
              },
              "returnParameters": {
                "id": 1941,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1940,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1946,
                    "src": "5480:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1939,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5480:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5479:9:6"
              },
              "scope": 2055,
              "src": "5445:83:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2038,
                "nodeType": "Block",
                "src": "5663:1003:6",
                "statements": [
                  {
                    "assignments": [
                      1953
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1953,
                        "mutability": "mutable",
                        "name": "uintPrice",
                        "nameLocation": "5681:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "5673:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5673:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1954,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5673:17:6"
                  },
                  {
                    "assignments": [
                      1956
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1956,
                        "mutability": "mutable",
                        "name": "currentTimestamp",
                        "nameLocation": "5707:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "5700:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1955,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5700:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1962,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1959,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5730:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5736:9:6",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5730:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5726:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 1957,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "5726:3:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5726:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5700:46:6"
                  },
                  {
                    "assignments": [
                      1964
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1964,
                        "mutability": "mutable",
                        "name": "startTimestamp",
                        "nameLocation": "5812:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2038,
                        "src": "5805:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1963,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5805:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1968,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1965,
                        "name": "currentTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "5829:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "363034383030",
                        "id": 1966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5848:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        },
                        "value": "604800"
                      },
                      "src": "5829:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5805:49:6"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1969,
                        "name": "priceMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "5868:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5881:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5868:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1986,
                          "name": "priceMode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "6059:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6072:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6059:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2006,
                            "name": "priceMode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "6318:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 2007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6331:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "6318:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2026,
                        "nodeType": "IfStatement",
                        "src": "6314:253:6",
                        "trueBody": {
                          "id": 2025,
                          "nodeType": "Block",
                          "src": "6334:233:6",
                          "statements": [
                            {
                              "assignments": [
                                2010
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2010,
                                  "mutability": "mutable",
                                  "name": "requestId",
                                  "nameLocation": "6406:9:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2025,
                                  "src": "6398:17:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 2009,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6398:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2017,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 2013,
                                    "name": "baseTokenSymbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1685,
                                    "src": "6445:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "id": 2014,
                                    "name": "startTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1964,
                                    "src": "6462:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  {
                                    "id": 2015,
                                    "name": "currentTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1956,
                                    "src": "6478:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2011,
                                    "name": "twapVwapOracle",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1683,
                                    "src": "6418:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                                      "typeString": "contract TwapVwapAdapter"
                                    }
                                  },
                                  "id": 2012,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6433:11:6",
                                  "memberName": "requestVwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2224,
                                  "src": "6418:26:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$_t_bytes32_$",
                                    "typeString": "function (string memory,int256,int256) external returns (bytes32)"
                                  }
                                },
                                "id": 2016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6418:77:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6398:97:6"
                            },
                            {
                              "expression": {
                                "id": 2023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2018,
                                  "name": "uintPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1953,
                                  "src": "6509:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 2021,
                                      "name": "requestId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2010,
                                      "src": "6546:9:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2019,
                                      "name": "twapVwapOracle",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1683,
                                      "src": "6521:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                                        "typeString": "contract TwapVwapAdapter"
                                      }
                                    },
                                    "id": 2020,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6536:9:6",
                                    "memberName": "getResult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2253,
                                    "src": "6521:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$",
                                      "typeString": "function (bytes32) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6521:35:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6509:47:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2024,
                              "nodeType": "ExpressionStatement",
                              "src": "6509:47:6"
                            }
                          ]
                        }
                      },
                      "id": 2027,
                      "nodeType": "IfStatement",
                      "src": "6055:512:6",
                      "trueBody": {
                        "id": 2005,
                        "nodeType": "Block",
                        "src": "6075:233:6",
                        "statements": [
                          {
                            "assignments": [
                              1990
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1990,
                                "mutability": "mutable",
                                "name": "requestId",
                                "nameLocation": "6147:9:6",
                                "nodeType": "VariableDeclaration",
                                "scope": 2005,
                                "src": "6139:17:6",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "typeName": {
                                  "id": 1989,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6139:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1997,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1993,
                                  "name": "baseTokenSymbol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1685,
                                  "src": "6186:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "id": 1994,
                                  "name": "startTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1964,
                                  "src": "6203:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                {
                                  "id": 1995,
                                  "name": "currentTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1956,
                                  "src": "6219:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "expression": {
                                  "id": 1991,
                                  "name": "twapVwapOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1683,
                                  "src": "6159:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                                    "typeString": "contract TwapVwapAdapter"
                                  }
                                },
                                "id": 1992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6174:11:6",
                                "memberName": "requestTwap",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2169,
                                "src": "6159:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$_t_bytes32_$",
                                  "typeString": "function (string memory,int256,int256) external returns (bytes32)"
                                }
                              },
                              "id": 1996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6159:77:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "6139:97:6"
                          },
                          {
                            "expression": {
                              "id": 2003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1998,
                                "name": "uintPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1953,
                                "src": "6250:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 2001,
                                    "name": "requestId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1990,
                                    "src": "6287:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1999,
                                    "name": "twapVwapOracle",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1683,
                                    "src": "6262:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TwapVwapAdapter_$2278",
                                      "typeString": "contract TwapVwapAdapter"
                                    }
                                  },
                                  "id": 2000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6277:9:6",
                                  "memberName": "getResult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2253,
                                  "src": "6262:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$",
                                    "typeString": "function (bytes32) view external returns (uint256)"
                                  }
                                },
                                "id": 2002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6262:35:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6250:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2004,
                            "nodeType": "ExpressionStatement",
                            "src": "6250:47:6"
                          }
                        ]
                      }
                    },
                    "id": 2028,
                    "nodeType": "IfStatement",
                    "src": "5864:703:6",
                    "trueBody": {
                      "id": 1985,
                      "nodeType": "Block",
                      "src": "5884:165:6",
                      "statements": [
                        {
                          "assignments": [
                            1973
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1973,
                              "mutability": "mutable",
                              "name": "price",
                              "nameLocation": "5961:5:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1985,
                              "src": "5954:12:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "typeName": {
                                "id": 1972,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5954:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1977,
                          "initialValue": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1974,
                                "name": "priceFeedOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1680,
                                "src": "5969:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PriceFeedOracle_$1666",
                                  "typeString": "contract PriceFeedOracle"
                                }
                              },
                              "id": 1975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5985:14:6",
                              "memberName": "getLatestPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1665,
                              "src": "5969:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5969:32:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5954:47:6"
                        },
                        {
                          "expression": {
                            "id": 1983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1978,
                              "name": "uintPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1953,
                              "src": "6015:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1981,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1973,
                                  "src": "6032:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 1980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6027:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1979,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6027:4:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6027:11:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6015:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1984,
                          "nodeType": "ExpressionStatement",
                          "src": "6015:23:6"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2030,
                            "name": "uintPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1953,
                            "src": "6584:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6596:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6584:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "50726963652073686f756c64206265206d6f7265207468616e207a65726f",
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6599:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ee0bff541b689e88c36dbb67dccb8f363ab3640d121fef5380004cb8e830a741",
                            "typeString": "literal_string \"Price should be more than zero\""
                          },
                          "value": "Price should be more than zero"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ee0bff541b689e88c36dbb67dccb8f363ab3640d121fef5380004cb8e830a741",
                            "typeString": "literal_string \"Price should be more than zero\""
                          }
                        ],
                        "id": 2029,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "6576:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6576:56:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2035,
                    "nodeType": "ExpressionStatement",
                    "src": "6576:56:6"
                  },
                  {
                    "expression": {
                      "id": 2036,
                      "name": "uintPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1953,
                      "src": "6649:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1951,
                    "id": 2037,
                    "nodeType": "Return",
                    "src": "6642:16:6"
                  }
                ]
              },
              "documentation": {
                "id": 1947,
                "nodeType": "StructuredDocumentation",
                "src": "5534:79:6",
                "text": "@notice Get token price from the Chainlink price feed or TwapVwap adapter. "
              },
              "functionSelector": "98d5fdca",
              "id": 2039,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "getPrice",
              "nameLocation": "5627:8:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1948,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "5635:2:6"
              },
              "returnParameters": {
                "id": 1951,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1950,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 2039,
                    "src": "5654:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1949,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5654:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5653:9:6"
              },
              "scope": 2055,
              "src": "5618:1048:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 2053,
                "nodeType": "Block",
                "src": "6714:153:6",
                "statements": [
                  {
                    "expression": {
                      "id": 2045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "delete",
                      "prefix": true,
                      "src": "6773:15:6",
                      "subExpression": {
                        "id": 2044,
                        "name": "ordersID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "6780:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2046,
                    "nodeType": "ExpressionStatement",
                    "src": "6773:15:6"
                  },
                  {
                    "assignments": [
                      2051
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2051,
                        "mutability": "mutable",
                        "name": "ordersID",
                        "nameLocation": "6852:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2053,
                        "src": "6834:26:6",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2049,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6834:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2050,
                          "nodeType": "ArrayTypeName",
                          "src": "6834:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2052,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6834:26:6"
                  }
                ]
              },
              "id": 2054,
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 2042,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 2041,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "6704:9:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2310,
                    "src": "6704:9:6"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "6704:9:6"
                }
              ],
              "name": "eraseOrders",
              "nameLocation": "6681:11:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 2040,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6692:2:6"
              },
              "returnParameters": {
                "id": 2043,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "6714:0:6"
              },
              "scope": 2055,
              "src": "6672:195:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "scope": 2056,
          "src": "265:6606:6",
          "usedErrors": []
        }
      ],
      "src": "32:6839:6"
    },
    "bytecode": "",
    "bytecodeSha1": "ba6da0f2097c4ac218e721ab516cf118886443cb",
    "compiler": {
      "evm_version": "istanbul",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "version": "0.8.19+commit.7dd6d404"
    },
    "contractName": "Tulip",
    "coverageMap": {
      "branches": {
        "10": {},
        "17": {},
        "18": {},
        "20": {
          "Ownable._checkOwner": {
            "31": [
              1422,
              1445,
              true
            ]
          },
          "Ownable.transferOwnership": {
            "30": [
              2169,
              2191,
              true
            ]
          }
        },
        "22": {},
        "24": {},
        "5": {},
        "6": {
          "Tulip.buyOrder": {
            "24": [
              3491,
              3523,
              true
            ],
            "25": [
              3621,
              3643,
              true
            ]
          },
          "Tulip.getPrice": {
            "26": [
              5868,
              5882,
              false
            ],
            "27": [
              6059,
              6073,
              false
            ],
            "28": [
              6318,
              6332,
              false
            ],
            "29": [
              6584,
              6597,
              true
            ]
          },
          "Tulip.sellOrder": {
            "22": [
              4687,
              4719,
              true
            ],
            "23": [
              4895,
              4917,
              true
            ]
          }
        },
        "7": {},
        "8": {}
      },
      "statements": {
        "10": {},
        "17": {},
        "18": {},
        "20": {
          "Ownable._checkOwner": {
            "19": [
              1414,
              1482
            ]
          },
          "Ownable._transferOwnership": {
            "20": [
              2541,
              2558
            ],
            "21": [
              2568,
              2613
            ]
          },
          "Ownable.owner": {
            "0": [
              1266,
              1279
            ]
          },
          "Ownable.renounceOwnership": {
            "10": [
              1895,
              1925
            ]
          },
          "Ownable.transferOwnership": {
            "16": [
              2161,
              2234
            ],
            "17": [
              2244,
              2272
            ]
          }
        },
        "22": {},
        "24": {
          "Context._msgSender": {
            "18": [
              712,
              729
            ]
          }
        },
        "5": {},
        "6": {
          "Tulip.buyOrder": {
            "7": [
              3483,
              3524
            ],
            "8": [
              3600,
              3732
            ],
            "9": [
              3742,
              3994
            ]
          },
          "Tulip.getPrice": {
            "11": [
              6250,
              6297
            ],
            "12": [
              6509,
              6556
            ],
            "13": [
              6576,
              6632
            ],
            "14": [
              6642,
              6658
            ]
          },
          "Tulip.runSwap": {
            "15": [
              5499,
              5521
            ]
          },
          "Tulip.sellOrder": {
            "1": [
              4679,
              4720
            ],
            "2": [
              4887,
              4947
            ],
            "3": [
              4984,
              5044
            ],
            "4": [
              5054,
              5307
            ],
            "5": [
              5317,
              5346
            ],
            "6": [
              5408,
              5431
            ]
          }
        },
        "7": {},
        "8": {}
      }
    },
    "dependencies": [
      "AggregatorV3Interface",
      "BufferChainlink",
      "CBORChainlink",
      "Chainlink",
      "Context",
      "IERC20",
      "Ownable",
      "PriceFeedOracle",
      "TwapVwapAdapter"
    ],
    "deployedBytecode": "6080604052600436106100dd5760003560e01c80639e9d301b1161007f578063dea80c7911610059578063dea80c7914610230578063e7d37e4714610245578063f2fde38b14610265578063f65633bd1461028557600080fd5b80639e9d301b146101d85780639fe5c1ac146101ee578063b9ab99271461021057600080fd5b80633e9bf32f116100bb5780633e9bf32f14610167578063715018a61461017a5780638da5cb5b1461019157806398d5fdca146101c357600080fd5b806307615815146100e25780631ce959b81461011357806336fdbce414610134575b600080fd5b3480156100ee57600080fd5b506005546100fc9060ff1681565b60405160ff90911681526020015b60405180910390f35b610126610121366004610a8e565b61029b565b60405190815260200161010a565b34801561014057600080fd5b5060055461015490610100900461ffff1681565b60405161ffff909116815260200161010a565b610126610175366004610a8e565b6104aa565b34801561018657600080fd5b5061018f6105b0565b005b34801561019d57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161010a565b3480156101cf57600080fd5b506101266105c4565b3480156101e457600080fd5b5061012660065481565b3480156101fa57600080fd5b506102036108a7565b60405161010a9190610ad4565b34801561021c57600080fd5b506002546101ab906001600160a01b031681565b34801561023c57600080fd5b50610126610935565b34801561025157600080fd5b506003546101ab906001600160a01b031681565b34801561027157600080fd5b5061018f610280366004610b22565b61094f565b34801561029157600080fd5b5061012660075481565b6001546000906001600160a01b038681169116146102b857600080fd5b600154604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b9190610b44565b9050848110156103825760405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e63650000000000000060448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610b5d565b506007546006547fde3ef5cce083fde9fdf5f9dfc0520eab7d9b2da6636f54024dd9f397596186fd88600089898933600560019054906101000a900461ffff166040516104509796959493929190610b7f565b60405180910390a3600780546008805460018101825560009182527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30182905590919061049c83610bda565b909155509695505050505050565b6001546000906001600160a01b038681169116146104c757600080fd5b6000670de0b6b3a76400006104dc8587610bf3565b6104e69190610c10565b90508034101561055e5760405162461bcd60e51b815260206004820152603f60248201527f56616c75652073686f756c6420636f766572207468652066756c6c207072696360448201527f65206f662072657175657374656420616d6f756e74206f6620746f6b656e73006064820152608401610379565b6007546006547f63633e980cf83cc2f0c855d9aee9cba28f3458e53c5b080f9187b4c2ff889eda88600089898933600560019054906101000a900461ffff166040516104509796959493929190610b7f565b6105b86109c8565b6105c26000610a22565b565b60008042816105d662093a8083610c32565b60055490915060ff1660010361065d5760025460408051638e15f47360e01b815290516000926001600160a01b031691638e15f4739160048083019260209291908290030181865afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190610b44565b935061084f9050565b60055460ff166002036107585760035460405163c57707b960e01b81526000916001600160a01b03169063c57707b99061069f90600490869088908301610c93565b6020604051808303816000875af11580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190610b44565b600354604051632b7531e160e21b8152600481018390529192506001600160a01b03169063add4c78490602401602060405180830381865afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190610b44565b93505061084f565b60055460ff1660030361084f57600354604051633206c38360e11b81526000916001600160a01b03169063640d87069061079a90600490869088908301610c93565b6020604051808303816000875af11580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190610b44565b600354604051632b7531e160e21b8152600481018390529192506001600160a01b03169063add4c78490602401602060405180830381865afa158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b9190610b44565b9350505b6000831161089f5760405162461bcd60e51b815260206004820152601e60248201527f50726963652073686f756c64206265206d6f7265207468616e207a65726f00006044820152606401610379565b509092915050565b600480546108b490610c59565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090610c59565b801561092d5780601f106109025761010080835404028352916020019161092d565b820191906000526020600020905b81548152906001019060200180831161091057829003601f168201915b505050505081565b600680546000918261094683610bda565b91905055905090565b6109576109c8565b6001600160a01b0381166109bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b6109c581610a22565b50565b6000546001600160a01b031633146105c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610a8957600080fd5b919050565b60008060008060808587031215610aa457600080fd5b610aad85610a72565b93506020850135925060408501359150610ac960608601610a72565b905092959194509250565b600060208083528351808285015260005b81811015610b0157858101830151858201604001528201610ae5565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215610b3457600080fd5b610b3d82610a72565b9392505050565b600060208284031215610b5657600080fd5b5051919050565b600060208284031215610b6f57600080fd5b81518015158114610b3d57600080fd5b6001600160a01b0397881681529587166020870152604086019490945260608501929092528416608084015290921660a082015261ffff90911660c082015260e00190565b634e487b7160e01b600052601160045260246000fd5b600060018201610bec57610bec610bc4565b5060010190565b8082028115828204841417610c0a57610c0a610bc4565b92915050565b600082610c2d57634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715610c5257610c52610bc4565b5092915050565b600181811c90821680610c6d57607f821691505b602082108103610c8d57634e487b7160e01b600052602260045260246000fd5b50919050565b60608152600080855481600182811c915080831680610cb357607f831692505b60208084108203610cd257634e487b7160e01b86526022600452602486fd5b6060880184905260808801828015610cf15760018114610d0757610d32565b60ff198716825285151560051b82019750610d32565b60008d81526020902060005b87811015610d2c57815484820152908601908401610d13565b83019850505b5050870198909852505050604090920192909252939250505056fea264697066735822122003588120e34de5e65690a75523ab20a81c901e1805564cc734853ff166fc904464736f6c63430008130033",
    "deployedSourceMap": "265:6606:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:22;;;;;;;;;;-1:-1:-1;778:22:6;;;;;;;;;;;186:4:25;174:17;;;156:36;;144:2;129:18;778:22:6;;;;;;;;4492:946;;;;;;:::i;:::-;;:::i;:::-;;;929:25:25;;;917:2;902:18;4492:946:6;783:177:25;866:20:6;;;;;;;;;;-1:-1:-1;866:20:6;;;;;;;;;;;;;;1139:6:25;1127:19;;;1109:38;;1097:2;1082:18;866:20:6;965:188:25;3297:828:6;;;;;;:::i;:::-;;:::i;1831:101:20:-;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;-1:-1:-1;1247:7:20;1273:6;-1:-1:-1;;;;;1273:6:20;1201:85;;;-1:-1:-1;;;;;1322:32:25;;;1304:51;;1292:2;1277:18;1201:85:20;1158:203:25;5618:1048:6;;;;;;;;;;;;;:::i;966:28::-;;;;;;;;;;;;;;;;629:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;436:38::-;;;;;;;;;;-1:-1:-1;436:38:6;;;;-1:-1:-1;;;;;436:38:6;;;5445:83;;;;;;;;;;;;;:::i;586:37::-;;;;;;;;;;-1:-1:-1;586:37:6;;;;-1:-1:-1;;;;;586:37:6;;;2081:198:20;;;;;;;;;;-1:-1:-1;2081:198:20;;;;;:::i;:::-;;:::i;1081:29:6:-;;;;;;;;;;;;;;;;4492:946;4709:9;;4660:7;;-1:-1:-1;;;;;4687:32:6;;;4709:9;;4687:32;4679:41;;;;;;4831:9;;:46;;-1:-1:-1;;;4831:46:6;;4851:10;4831:46;;;2941:34:25;4871:4:6;2991:18:25;;;2984:43;4811:17:6;;-1:-1:-1;;;;;4831:9:6;;:19;;2876:18:25;;4831:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4811:66;;4908:9;4895;:22;;4887:60;;;;-1:-1:-1;;;4887:60:6;;3429:2:25;4887:60:6;;;3411:21:25;3468:2;3448:18;;;3441:30;3507:27;3487:18;;;3480:55;3552:18;;4887:60:6;;;;;;;;;4984:9;;:60;;-1:-1:-1;;;4984:60:6;;5007:10;4984:60;;;3821:34:25;5027:4:6;3871:18:25;;;3864:43;3923:18;;;3916:34;;;-1:-1:-1;;;;;4984:9:6;;;;:22;;3756:18:25;;4984:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5112:14;;5085:13;;5059:248;5140:10;5172:3;5190:9;5213:11;5238:15;5267:10;5291:6;;;;;;;;;;;5059:248;;;;;;;;;;;;:::i;:::-;;;;;;;;5331:14;;;5317:8;:29;;;;;;;-1:-1:-1;5317:29:6;;;;;;;;5331:14;;;5415:16;5331:14;5415:16;:::i;:::-;;;;-1:-1:-1;5408:23:6;4492:946;-1:-1:-1;;;;;;4492:946:6:o;3297:828::-;3513:9;;3464:7;;-1:-1:-1;;;;;3491:32:6;;;3513:9;;3491:32;3483:41;;;;;;3534:17;3582:8;3555:23;3567:11;3555:9;:23;:::i;:::-;3554:36;;;;:::i;:::-;3534:56;;3634:9;3621;:22;;3600:132;;;;-1:-1:-1;;;3600:132:6;;5809:2:25;3600:132:6;;;5791:21:25;5848:2;5828:18;;;5821:30;5887:34;5867:18;;;5860:62;5958:33;5938:18;;;5931:61;6009:19;;3600:132:6;5607:427:25;3600:132:6;3799:14;;3772:13;;3747:247;3827:10;3859:3;3877:9;3900:11;3925:15;3954:10;3978:6;;;;;;;;;;;3747:247;;;;;;;;;;;;:::i;1831:101:20:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5618:1048:6:-;5654:7;;5730:15;5654:7;5829:25;5848:6;5730:15;5829:25;:::i;:::-;5868:9;;5805:49;;-1:-1:-1;5868:9:6;;;:14;5864:703;;5969:15;;:32;;;-1:-1:-1;;;5969:32:6;;;;5954:12;;-1:-1:-1;;;;;5969:15:6;;:30;;:32;;;;;;;;;;;;;;:15;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5954:47;-1:-1:-1;5864:703:6;;-1:-1:-1;5864:703:6;;6059:9;;;;6072:1;6059:14;6055:512;;6159:14;;:77;;-1:-1:-1;;;6159:77:6;;6139:17;;-1:-1:-1;;;;;6159:14:6;;:26;;:77;;6186:15;;6203:14;;6219:16;;6159:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6262:14;;:35;;-1:-1:-1;;;6262:35:6;;;;;929:25:25;;;6139:97:6;;-1:-1:-1;;;;;;6262:14:6;;:24;;902:18:25;;6262:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6250:47;;6075:233;6055:512;;;6318:9;;;;6331:1;6318:14;6314:253;;6418:14;;:77;;-1:-1:-1;;;6418:77:6;;6398:17;;-1:-1:-1;;;;;6418:14:6;;:26;;:77;;6445:15;;6462:14;;6478:16;;6418:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6521:14;;:35;;-1:-1:-1;;;6521:35:6;;;;;929:25:25;;;6398:97:6;;-1:-1:-1;;;;;;6521:14:6;;:24;;902:18:25;;6521:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6509:47;;6334:233;6314:253;6596:1;6584:9;:13;6576:56;;;;-1:-1:-1;;;6576:56:6;;8873:2:25;6576:56:6;;;8855:21:25;8912:2;8892:18;;;8885:30;8951:32;8931:18;;;8924:60;9001:18;;6576:56:6;8671:354:25;6576:56:6;-1:-1:-1;6649:9:6;;5618:1048;-1:-1:-1;;5618:1048:6:o;629:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5445:83::-;5506:13;:15;;5480:7;;;5506:15;;;:::i;:::-;;;;;5499:22;;5445:83;:::o;2081:198:20:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:20;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:20;;9232:2:25;2161:73:20::1;::::0;::::1;9214:21:25::0;9271:2;9251:18;;;9244:30;9310:34;9290:18;;;9283:62;-1:-1:-1;;;9361:18:25;;;9354:36;9407:19;;2161:73:20::1;9030:402:25::0;2161:73:20::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:20;719:10:24;1422:23:20;1414:68;;;;-1:-1:-1;;;1414:68:20;;9639:2:25;1414:68:20;;;9621:21:25;;;9658:18;;;9651:30;9717:34;9697:18;;;9690:62;9769:18;;1414:68:20;9437:356:25;2433:187:20;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:20;;;-1:-1:-1;;;;;;2541:17:20;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;203:173:25:-;271:20;;-1:-1:-1;;;;;320:31:25;;310:42;;300:70;;366:1;363;356:12;300:70;203:173;;;:::o;381:397::-;467:6;475;483;491;544:3;532:9;523:7;519:23;515:33;512:53;;;561:1;558;551:12;512:53;584:29;603:9;584:29;:::i;:::-;574:39;;660:2;649:9;645:18;632:32;622:42;;711:2;700:9;696:18;683:32;673:42;;734:38;768:2;757:9;753:18;734:38;:::i;:::-;724:48;;381:397;;;;;;;:::o;1521:548::-;1633:4;1662:2;1691;1680:9;1673:21;1723:6;1717:13;1766:6;1761:2;1750:9;1746:18;1739:34;1791:1;1801:140;1815:6;1812:1;1809:13;1801:140;;;1910:14;;;1906:23;;1900:30;1876:17;;;1895:2;1872:26;1865:66;1830:10;;1801:140;;;1805:3;1990:1;1985:2;1976:6;1965:9;1961:22;1957:31;1950:42;2060:2;2053;2049:7;2044:2;2036:6;2032:15;2028:29;2017:9;2013:45;2009:54;2001:62;;;;1521:548;;;;:::o;2538:186::-;2597:6;2650:2;2638:9;2629:7;2625:23;2621:32;2618:52;;;2666:1;2663;2656:12;2618:52;2689:29;2708:9;2689:29;:::i;:::-;2679:39;2538:186;-1:-1:-1;;;2538:186:25:o;3038:184::-;3108:6;3161:2;3149:9;3140:7;3136:23;3132:32;3129:52;;;3177:1;3174;3167:12;3129:52;-1:-1:-1;3200:16:25;;3038:184;-1:-1:-1;3038:184:25:o;3961:277::-;4028:6;4081:2;4069:9;4060:7;4056:23;4052:32;4049:52;;;4097:1;4094;4087:12;4049:52;4129:9;4123:16;4182:5;4175:13;4168:21;4161:5;4158:32;4148:60;;4204:1;4201;4194:12;4243:692;-1:-1:-1;;;;;4612:15:25;;;4594:34;;4664:15;;;4659:2;4644:18;;4637:43;4711:2;4696:18;;4689:34;;;;4754:2;4739:18;;4732:34;;;;4803:15;;4797:3;4782:19;;4775:44;4856:15;;;4574:3;4835:19;;4828:44;4921:6;4909:19;;;4903:3;4888:19;;4881:48;4543:3;4528:19;;4243:692::o;4940:127::-;5001:10;4996:3;4992:20;4989:1;4982:31;5032:4;5029:1;5022:15;5056:4;5053:1;5046:15;5072:135;5111:3;5132:17;;;5129:43;;5152:18;;:::i;:::-;-1:-1:-1;5199:1:25;5188:13;;5072:135::o;5212:168::-;5285:9;;;5316;;5333:15;;;5327:22;;5313:37;5303:71;;5354:18;;:::i;:::-;5212:168;;;;:::o;5385:217::-;5425:1;5451;5441:132;;5495:10;5490:3;5486:20;5483:1;5476:31;5530:4;5527:1;5520:15;5558:4;5555:1;5548:15;5441:132;-1:-1:-1;5587:9:25;;5385:217::o;6039:200::-;6105:9;;;6078:4;6133:9;;6161:10;;6173:12;;;6157:29;6196:12;;;6188:21;;6154:56;6151:82;;;6213:18;;:::i;:::-;6151:82;6039:200;;;;:::o;6432:380::-;6511:1;6507:12;;;;6554;;;6575:61;;6629:4;6621:6;6617:17;6607:27;;6575:61;6682:2;6674:6;6671:14;6651:18;6648:38;6645:161;;6728:10;6723:3;6719:20;6716:1;6709:31;6763:4;6760:1;6753:15;6791:4;6788:1;6781:15;6645:161;;6432:380;;;:::o;6943:1352::-;7141:2;7130:9;7123:21;7104:4;7164:1;7197:6;7191:13;7227:3;7249:1;7277:9;7273:2;7269:18;7259:28;;7337:2;7326:9;7322:18;7359;7349:61;;7403:4;7395:6;7391:17;7381:27;;7349:61;7429:2;7477;7469:6;7466:14;7446:18;7443:38;7440:165;;-1:-1:-1;;;7504:33:25;;7560:4;7557:1;7550:15;7590:4;7511:3;7578:17;7440:165;7676:2;7661:18;;1453:19;;;1496:14;;;7704:18;7731:128;;;;7873:1;7868:315;;;;7697:486;;7731:128;-1:-1:-1;;7764:24:25;;7752:37;;7832:14;;7825:22;7822:1;7818:30;7809:40;;;-1:-1:-1;7731:128:25;;7868:315;6890:1;6883:14;;;6927:4;6914:18;;7963:1;7977:165;7991:6;7988:1;7985:13;7977:165;;;8069:14;;8056:11;;;8049:35;8112:16;;;;8006:10;;7977:165;;;8162:11;;;-1:-1:-1;;7697:486:25;-1:-1:-1;;8219:18:25;;8212:34;;;;-1:-1:-1;;;8277:2:25;8262:18;;;8255:34;;;;8200:3;6943:1352;-1:-1:-1;;;6943:1352:25:o",
    "language": "Solidity",
    "natspec": {
      "kind": "dev",
      "methods": {
        "buyOrder(address,uint256,uint256,address)": {
          "notice": "Create an order to buy the tokens for ETH",
          "params": {
            "_baseToken": ": the base ERC20 token",
            "_depositAddress": ": the address to send the tokens after the order is completed",
            "_limitPrice": ": the max price for one token in WEI",
            "_quantity": ": amount of token to buy with 18 decimals, e.g. 1 * 10**18 for 1 token"
          }
        },
        "constructor": {
          "params": {
            "_baseToken": ": a token to swap (e.g., wBTC, ADA)",
            "_baseTokenSymbol": ": base token symbol to use with twap/vwap API",
            "_pairID": ": The numerical ID of unique swap pair, e.g. wBTC/ETH.",
            "_priceFeedOracle": ": contract providing the price for the _baseToken from chainlink price feed",
            "_priceMode": ": 1 for chainlink price feed, 2 for twap, 3 for vwap",
            "_twapVwapOracle": ": contract providing the price for the _baseToken from our twap/vwap external adapter"
          }
        },
        "getPrice()": {
          "notice": "Get token price from the Chainlink price feed or TwapVwap adapter. "
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "sellOrder(address,uint256,uint256,address)": {
          "notice": "Create an order to sell the tokens for ETH.",
          "params": {
            "_baseToken": ": amount of token to sell",
            "_depositAddress": ": the address to send the ETH after the order is completed",
            "_limitPrice": ": the upper price for one token in WEI",
            "_quantity": ": amount of token to sell with 18 decimals, e.g. 1 * 10**18 for 1 token"
          }
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "offset": [
      265,
      6871
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9D301B GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xDEA80C79 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDEA80C79 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xE7D37E47 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF65633BD EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E9D301B EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x9FE5C1AC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xB9AB9927 EQ PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E9BF32F GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x3E9BF32F EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7615815 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x1CE959B8 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x36FDBCE4 EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0xFC SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x154 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x126 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x5C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH2 0x935 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x126 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0xB5D JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH32 0xDE3EF5CCE083FDE9FDF5F9DFC0520EAB7D9B2DA6636F54024DD9F397596186FD DUP9 PUSH1 0x0 DUP10 DUP10 DUP10 CALLER PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x40 MLOAD PUSH2 0x450 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 DUP1 SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP3 SWAP1 SSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x49C DUP4 PUSH2 0xBDA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4DC DUP6 DUP8 PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C75652073686F756C6420636F766572207468652066756C6C2070726963 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206F662072657175657374656420616D6F756E74206F6620746F6B656E7300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x379 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH32 0x63633E980CF83CC2F0C855D9AEE9CBA28F3458E53C5B080F9187B4C2FF889EDA DUP9 PUSH1 0x0 DUP10 DUP10 DUP10 CALLER PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x40 MLOAD PUSH2 0x450 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x5C2 PUSH1 0x0 PUSH2 0xA22 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP DUP2 PUSH2 0x5D6 PUSH3 0x93A80 DUP4 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0x65D JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8E15F473 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8E15F473 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST SWAP4 POP PUSH2 0x84F SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x2 SUB PUSH2 0x758 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC57707B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC57707B9 SWAP1 PUSH2 0x69F SWAP1 PUSH1 0x4 SWAP1 DUP7 SWAP1 DUP9 SWAP1 DUP4 ADD PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E2 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2B7531E1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xADD4C784 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x750 SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x84F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0x3 SUB PUSH2 0x84F JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3206C383 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x640D8706 SWAP1 PUSH2 0x79A SWAP1 PUSH1 0x4 SWAP1 DUP7 SWAP1 DUP9 SWAP1 DUP4 ADD PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2B7531E1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xADD4C784 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x827 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726963652073686F756C64206265206D6F7265207468616E207A65726F0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x379 JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0xC59 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0xC59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x910 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x946 DUP4 PUSH2 0xBDA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x957 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x379 JUMP JUMPDEST PUSH2 0x9C5 DUP2 PUSH2 0xA22 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAAD DUP6 PUSH2 0xA72 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0xAC9 PUSH1 0x60 DUP7 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB01 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAE5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3D DUP3 PUSH2 0xA72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 DUP8 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xBEC JUMPI PUSH2 0xBEC PUSH2 0xBC4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC0A JUMPI PUSH2 0xC0A PUSH2 0xBC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP4 SLT DUP1 ISZERO DUP4 DUP4 SGT AND DUP4 DUP4 SLT DUP3 AND OR ISZERO PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0xBC4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC6D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC8D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 DUP1 DUP6 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xCB3 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0xCD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x60 DUP9 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP9 ADD DUP3 DUP1 ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xD07 JUMPI PUSH2 0xD32 JUMP JUMPDEST PUSH1 0xFF NOT DUP8 AND DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD SWAP8 POP PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xD2C JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH2 0xD13 JUMP JUMPDEST DUP4 ADD SWAP9 POP POP JUMPDEST POP POP DUP8 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP POP PUSH1 0x40 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PC DUP2 KECCAK256 0xE3 0x4D 0xE5 0xE6 JUMP SWAP1 0xA7 SSTORE 0x23 0xAB KECCAK256 0xA8 SHR SWAP1 0x1E XOR SDIV JUMP 0x4C 0xC7 CALLVALUE DUP6 EXTCODEHASH CALL PUSH7 0xFC904464736F6C PUSH4 0x43000813 STOP CALLER ",
    "pcMap": {
      "0": {
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x80"
      },
      "2": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "4": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "5": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "7": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "CALLDATASIZE",
        "path": "6"
      },
      "8": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "LT",
        "path": "6"
      },
      "9": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xDD"
      },
      "12": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "13": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "15": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "CALLDATALOAD",
        "path": "6"
      },
      "16": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0xE0"
      },
      "18": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "SHR",
        "path": "6"
      },
      "19": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "20": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x9E9D301B"
      },
      "25": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "GT",
        "path": "6"
      },
      "26": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x7F"
      },
      "29": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "30": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "31": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xDEA80C79"
      },
      "36": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "GT",
        "path": "6"
      },
      "37": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x59"
      },
      "40": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "41": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "42": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xDEA80C79"
      },
      "47": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "48": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x230"
      },
      "51": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "52": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "53": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xE7D37E47"
      },
      "58": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "59": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x245"
      },
      "62": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "63": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "64": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xF2FDE38B"
      },
      "69": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "70": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x265"
      },
      "73": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "74": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "75": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xF65633BD"
      },
      "80": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "81": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x285"
      },
      "84": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "85": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "87": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "88": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "REVERT",
        "path": "6"
      },
      "89": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "90": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "91": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x9E9D301B"
      },
      "96": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "97": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1D8"
      },
      "100": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "101": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "102": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x9FE5C1AC"
      },
      "107": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "108": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1EE"
      },
      "111": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "112": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "113": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xB9AB9927"
      },
      "118": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "119": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x210"
      },
      "122": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "123": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "125": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "126": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "REVERT",
        "path": "6"
      },
      "127": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "128": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "129": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x3E9BF32F"
      },
      "134": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "GT",
        "path": "6"
      },
      "135": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xBB"
      },
      "138": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "139": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "140": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x3E9BF32F"
      },
      "145": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "146": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x167"
      },
      "149": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "150": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "151": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x715018A6"
      },
      "156": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "157": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x17A"
      },
      "160": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "161": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "162": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x8DA5CB5B"
      },
      "167": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "168": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x191"
      },
      "171": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "172": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "173": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x98D5FDCA"
      },
      "178": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "179": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1C3"
      },
      "182": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "183": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "185": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "186": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "REVERT",
        "path": "6"
      },
      "187": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "188": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "189": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x7615815"
      },
      "194": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "195": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xE2"
      },
      "198": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "199": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "200": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x1CE959B8"
      },
      "205": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "206": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x113"
      },
      "209": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "210": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "211": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x36FDBCE4"
      },
      "216": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "EQ",
        "path": "6"
      },
      "217": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x134"
      },
      "220": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "221": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "222": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "224": {
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "DUP1",
        "path": "6"
      },
      "225": {
        "first_revert": true,
        "fn": null,
        "offset": [
          265,
          6871
        ],
        "op": "REVERT",
        "path": "6"
      },
      "226": {
        "offset": [
          778,
          800
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "227": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "228": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "DUP1",
        "path": "6"
      },
      "229": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "230": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xEE"
      },
      "233": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "234": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "236": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "DUP1",
        "path": "6"
      },
      "237": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "REVERT",
        "path": "6"
      },
      "238": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "239": {
        "op": "POP"
      },
      "240": {
        "offset": [
          778,
          800
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "242": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "243": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xFC"
      },
      "246": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "247": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0xFF"
      },
      "249": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "AND",
        "path": "6"
      },
      "250": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "DUP2",
        "path": "6"
      },
      "251": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "JUMP",
        "path": "6"
      },
      "252": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "253": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "255": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "256": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "258": {
        "op": "SWAP1"
      },
      "259": {
        "op": "SWAP2"
      },
      "260": {
        "op": "AND"
      },
      "261": {
        "op": "DUP2"
      },
      "262": {
        "op": "MSTORE"
      },
      "263": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "265": {
        "op": "ADD"
      },
      "266": {
        "offset": [
          778,
          800
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "267": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "269": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "270": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "DUP1",
        "path": "6"
      },
      "271": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "272": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "SUB",
        "path": "6"
      },
      "273": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "274": {
        "fn": null,
        "offset": [
          778,
          800
        ],
        "op": "RETURN",
        "path": "6"
      },
      "275": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "276": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x126"
      },
      "279": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x121"
      },
      "282": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "CALLDATASIZE",
        "path": "6"
      },
      "283": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "285": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xA8E"
      },
      "288": {
        "fn": "Tulip.sellOrder",
        "jump": "i",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMP",
        "path": "6"
      },
      "289": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "290": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x29B"
      },
      "293": {
        "fn": "Tulip.sellOrder",
        "jump": "i",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMP",
        "path": "6"
      },
      "294": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "295": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "297": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "298": {
        "op": "SWAP1"
      },
      "299": {
        "op": "DUP2"
      },
      "300": {
        "op": "MSTORE"
      },
      "301": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "303": {
        "op": "ADD"
      },
      "304": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x10A"
      },
      "307": {
        "op": "JUMP"
      },
      "308": {
        "offset": [
          866,
          886
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "309": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "310": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "DUP1",
        "path": "6"
      },
      "311": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "312": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x140"
      },
      "315": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "316": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "318": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "DUP1",
        "path": "6"
      },
      "319": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "REVERT",
        "path": "6"
      },
      "320": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "321": {
        "op": "POP"
      },
      "322": {
        "offset": [
          866,
          886
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "324": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "325": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x154"
      },
      "328": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "329": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x100"
      },
      "332": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "333": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "DIV",
        "path": "6"
      },
      "334": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xFFFF"
      },
      "337": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "AND",
        "path": "6"
      },
      "338": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "DUP2",
        "path": "6"
      },
      "339": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "JUMP",
        "path": "6"
      },
      "340": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "341": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "343": {
        "fn": "Tulip.sellOrder",
        "offset": [
          866,
          886
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "344": {
        "op": "PUSH2",
        "value": "0xFFFF"
      },
      "347": {
        "op": "SWAP1"
      },
      "348": {
        "op": "SWAP2"
      },
      "349": {
        "op": "AND"
      },
      "350": {
        "op": "DUP2"
      },
      "351": {
        "op": "MSTORE"
      },
      "352": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "354": {
        "op": "ADD"
      },
      "355": {
        "offset": [
          866,
          886
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x10A"
      },
      "358": {
        "op": "JUMP"
      },
      "359": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "360": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x126"
      },
      "363": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x175"
      },
      "366": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "CALLDATASIZE",
        "path": "6"
      },
      "367": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "369": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xA8E"
      },
      "372": {
        "fn": "Tulip.buyOrder",
        "jump": "i",
        "offset": [
          3297,
          4125
        ],
        "op": "JUMP",
        "path": "6"
      },
      "373": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "374": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x4AA"
      },
      "377": {
        "fn": "Tulip.buyOrder",
        "jump": "i",
        "offset": [
          3297,
          4125
        ],
        "op": "JUMP",
        "path": "6"
      },
      "378": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "379": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "CALLVALUE",
        "path": "20"
      },
      "380": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "DUP1",
        "path": "20"
      },
      "381": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "382": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x186"
      },
      "385": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "386": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "388": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "DUP1",
        "path": "20"
      },
      "389": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "REVERT",
        "path": "20"
      },
      "390": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "391": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "POP",
        "path": "20"
      },
      "392": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x18F"
      },
      "395": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x5B0"
      },
      "398": {
        "fn": "Ownable.renounceOwnership",
        "jump": "i",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMP",
        "path": "20"
      },
      "399": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "400": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "STOP",
        "path": "20"
      },
      "401": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "402": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "CALLVALUE",
        "path": "20"
      },
      "403": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "DUP1",
        "path": "20"
      },
      "404": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "405": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x19D"
      },
      "408": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "409": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "411": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "DUP1",
        "path": "20"
      },
      "412": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "REVERT",
        "path": "20"
      },
      "413": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "414": {
        "op": "POP"
      },
      "415": {
        "fn": "Ownable.owner",
        "offset": [
          1247,
          1254
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "417": {
        "fn": "Ownable.owner",
        "offset": [
          1273,
          1279
        ],
        "op": "SLOAD",
        "path": "20",
        "statement": 0
      },
      "418": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "420": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "422": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "424": {
        "op": "SHL"
      },
      "425": {
        "op": "SUB"
      },
      "426": {
        "fn": "Ownable.owner",
        "offset": [
          1273,
          1279
        ],
        "op": "AND",
        "path": "20"
      },
      "427": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "428": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x40"
      },
      "430": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "MLOAD",
        "path": "20"
      },
      "431": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "433": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "435": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "437": {
        "op": "SHL"
      },
      "438": {
        "op": "SUB"
      },
      "439": {
        "op": "SWAP1"
      },
      "440": {
        "op": "SWAP2"
      },
      "441": {
        "op": "AND"
      },
      "442": {
        "op": "DUP2"
      },
      "443": {
        "op": "MSTORE"
      },
      "444": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "446": {
        "op": "ADD"
      },
      "447": {
        "fn": "Ownable.owner",
        "offset": [
          1201,
          1286
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x10A"
      },
      "450": {
        "op": "JUMP"
      },
      "451": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "452": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "453": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "DUP1",
        "path": "6"
      },
      "454": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "455": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1CF"
      },
      "458": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "459": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "461": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "DUP1",
        "path": "6"
      },
      "462": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "REVERT",
        "path": "6"
      },
      "463": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "464": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "POP",
        "path": "6"
      },
      "465": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x126"
      },
      "468": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x5C4"
      },
      "471": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          5618,
          6666
        ],
        "op": "JUMP",
        "path": "6"
      },
      "472": {
        "offset": [
          966,
          994
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "473": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "474": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "DUP1",
        "path": "6"
      },
      "475": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "476": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1E4"
      },
      "479": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "480": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "482": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "DUP1",
        "path": "6"
      },
      "483": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "REVERT",
        "path": "6"
      },
      "484": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "485": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "POP",
        "path": "6"
      },
      "486": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x126"
      },
      "489": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x6"
      },
      "491": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "492": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "DUP2",
        "path": "6"
      },
      "493": {
        "fn": "Tulip.getPrice",
        "offset": [
          966,
          994
        ],
        "op": "JUMP",
        "path": "6"
      },
      "494": {
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "495": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "496": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "497": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "498": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1FA"
      },
      "501": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "502": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "504": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "505": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "REVERT",
        "path": "6"
      },
      "506": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "507": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "POP",
        "path": "6"
      },
      "508": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x203"
      },
      "511": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x8A7"
      },
      "514": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          629,
          658
        ],
        "op": "JUMP",
        "path": "6"
      },
      "515": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "516": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "518": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "519": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x10A"
      },
      "522": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "523": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "524": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xAD4"
      },
      "527": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          629,
          658
        ],
        "op": "JUMP",
        "path": "6"
      },
      "528": {
        "offset": [
          436,
          474
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "529": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "530": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "DUP1",
        "path": "6"
      },
      "531": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "532": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x21C"
      },
      "535": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "536": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "538": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "DUP1",
        "path": "6"
      },
      "539": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "REVERT",
        "path": "6"
      },
      "540": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "541": {
        "op": "POP"
      },
      "542": {
        "offset": [
          436,
          474
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x2"
      },
      "544": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "545": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1AB"
      },
      "548": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "549": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "551": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "553": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "555": {
        "op": "SHL"
      },
      "556": {
        "op": "SUB"
      },
      "557": {
        "offset": [
          436,
          474
        ],
        "op": "AND",
        "path": "6"
      },
      "558": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "DUP2",
        "path": "6"
      },
      "559": {
        "fn": "Tulip.getPrice",
        "offset": [
          436,
          474
        ],
        "op": "JUMP",
        "path": "6"
      },
      "560": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "561": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "562": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "DUP1",
        "path": "6"
      },
      "563": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "564": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x23C"
      },
      "567": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "568": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "570": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "DUP1",
        "path": "6"
      },
      "571": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "REVERT",
        "path": "6"
      },
      "572": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "573": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "POP",
        "path": "6"
      },
      "574": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x126"
      },
      "577": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x935"
      },
      "580": {
        "fn": "Tulip.runSwap",
        "jump": "i",
        "offset": [
          5445,
          5528
        ],
        "op": "JUMP",
        "path": "6"
      },
      "581": {
        "offset": [
          586,
          623
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "582": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "583": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "DUP1",
        "path": "6"
      },
      "584": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "585": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x251"
      },
      "588": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "589": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "591": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "DUP1",
        "path": "6"
      },
      "592": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "REVERT",
        "path": "6"
      },
      "593": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "594": {
        "op": "POP"
      },
      "595": {
        "offset": [
          586,
          623
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x3"
      },
      "597": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "598": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x1AB"
      },
      "601": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "602": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "604": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "606": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "608": {
        "op": "SHL"
      },
      "609": {
        "op": "SUB"
      },
      "610": {
        "offset": [
          586,
          623
        ],
        "op": "AND",
        "path": "6"
      },
      "611": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "DUP2",
        "path": "6"
      },
      "612": {
        "fn": "Tulip.runSwap",
        "offset": [
          586,
          623
        ],
        "op": "JUMP",
        "path": "6"
      },
      "613": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "614": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "CALLVALUE",
        "path": "20"
      },
      "615": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "DUP1",
        "path": "20"
      },
      "616": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "ISZERO",
        "path": "20"
      },
      "617": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x271"
      },
      "620": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "621": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "623": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "DUP1",
        "path": "20"
      },
      "624": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "REVERT",
        "path": "20"
      },
      "625": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "626": {
        "op": "POP"
      },
      "627": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x18F"
      },
      "630": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x280"
      },
      "633": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "CALLDATASIZE",
        "path": "20"
      },
      "634": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x4"
      },
      "636": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0xB22"
      },
      "639": {
        "fn": "Ownable.transferOwnership",
        "jump": "i",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMP",
        "path": "20"
      },
      "640": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "641": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x94F"
      },
      "644": {
        "fn": "Ownable.transferOwnership",
        "jump": "i",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMP",
        "path": "20"
      },
      "645": {
        "offset": [
          1081,
          1110
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "646": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "647": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "DUP1",
        "path": "6"
      },
      "648": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "649": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x291"
      },
      "652": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "653": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "655": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "DUP1",
        "path": "6"
      },
      "656": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "REVERT",
        "path": "6"
      },
      "657": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "658": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "POP",
        "path": "6"
      },
      "659": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x126"
      },
      "662": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x7"
      },
      "664": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "665": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "DUP2",
        "path": "6"
      },
      "666": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1081,
          1110
        ],
        "op": "JUMP",
        "path": "6"
      },
      "667": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "668": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4709,
          4718
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 1,
        "value": "0x1"
      },
      "670": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4709,
          4718
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "671": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4660,
          4667
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "673": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4660,
          4667
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "674": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "676": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "678": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "680": {
        "op": "SHL"
      },
      "681": {
        "op": "SUB"
      },
      "682": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4687,
          4719
        ],
        "op": "DUP7",
        "path": "6"
      },
      "683": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4687,
          4719
        ],
        "op": "DUP2",
        "path": "6"
      },
      "684": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4687,
          4719
        ],
        "op": "AND",
        "path": "6"
      },
      "685": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4709,
          4718
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "686": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4709,
          4718
        ],
        "op": "AND",
        "path": "6"
      },
      "687": {
        "branch": 22,
        "fn": "Tulip.sellOrder",
        "offset": [
          4687,
          4719
        ],
        "op": "EQ",
        "path": "6"
      },
      "688": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4679,
          4720
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x2B8"
      },
      "691": {
        "branch": 22,
        "fn": "Tulip.sellOrder",
        "offset": [
          4679,
          4720
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "692": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4679,
          4720
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "694": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4679,
          4720
        ],
        "op": "DUP1",
        "path": "6"
      },
      "695": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4679,
          4720
        ],
        "op": "REVERT",
        "path": "6"
      },
      "696": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4679,
          4720
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "697": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4840
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1"
      },
      "699": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4840
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "700": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "702": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "703": {
        "op": "PUSH4",
        "value": "0x6EB1769F"
      },
      "708": {
        "op": "PUSH1",
        "value": "0xE1"
      },
      "710": {
        "op": "SHL"
      },
      "711": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP2",
        "path": "6"
      },
      "712": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "713": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4851,
          4861
        ],
        "op": "CALLER",
        "path": "6"
      },
      "714": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "716": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP3",
        "path": "6"
      },
      "717": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "ADD",
        "path": "6"
      },
      "718": {
        "op": "MSTORE"
      },
      "719": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4871,
          4875
        ],
        "op": "ADDRESS",
        "path": "6"
      },
      "720": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "722": {
        "op": "DUP3"
      },
      "723": {
        "op": "ADD"
      },
      "724": {
        "op": "MSTORE"
      },
      "725": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4811,
          4828
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "727": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4811,
          4828
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "728": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "730": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "732": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "734": {
        "op": "SHL"
      },
      "735": {
        "op": "SUB"
      },
      "736": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4840
        ],
        "op": "AND",
        "path": "6"
      },
      "737": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4840
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "738": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4850
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xDD62ED3E"
      },
      "743": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4850
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "744": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "746": {
        "op": "ADD"
      },
      "747": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "749": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "751": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "752": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP1",
        "path": "6"
      },
      "753": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP4",
        "path": "6"
      },
      "754": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "SUB",
        "path": "6"
      },
      "755": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP2",
        "path": "6"
      },
      "756": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP7",
        "path": "6"
      },
      "757": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "GAS",
        "path": "6"
      },
      "758": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "STATICCALL",
        "path": "6"
      },
      "759": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "760": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP1",
        "path": "6"
      },
      "761": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "762": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x307"
      },
      "765": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "766": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "767": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "769": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP1",
        "path": "6"
      },
      "770": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "771": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "772": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "774": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "REVERT",
        "path": "6"
      },
      "775": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "776": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "POP",
        "path": "6"
      },
      "777": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "POP",
        "path": "6"
      },
      "778": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "POP",
        "path": "6"
      },
      "779": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "POP",
        "path": "6"
      },
      "780": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "782": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "783": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "784": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "786": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "NOT",
        "path": "6"
      },
      "787": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "789": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP3",
        "path": "6"
      },
      "790": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "ADD",
        "path": "6"
      },
      "791": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "AND",
        "path": "6"
      },
      "792": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP3",
        "path": "6"
      },
      "793": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "ADD",
        "path": "6"
      },
      "794": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP1",
        "path": "6"
      },
      "795": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "797": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "798": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "POP",
        "path": "6"
      },
      "799": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "DUP2",
        "path": "6"
      },
      "800": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "ADD",
        "path": "6"
      },
      "801": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "802": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x32B"
      },
      "805": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "806": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "807": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB44"
      },
      "810": {
        "fn": "Tulip.sellOrder",
        "jump": "i",
        "offset": [
          4831,
          4877
        ],
        "op": "JUMP",
        "path": "6"
      },
      "811": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4831,
          4877
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "812": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4811,
          4877
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "813": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4811,
          4877
        ],
        "op": "POP",
        "path": "6"
      },
      "814": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4908,
          4917
        ],
        "op": "DUP5",
        "path": "6",
        "statement": 2
      },
      "815": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4895,
          4904
        ],
        "op": "DUP2",
        "path": "6"
      },
      "816": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4895,
          4917
        ],
        "op": "LT",
        "path": "6"
      },
      "817": {
        "branch": 23,
        "fn": "Tulip.sellOrder",
        "offset": [
          4895,
          4917
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "818": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x382"
      },
      "821": {
        "branch": 23,
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "822": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "824": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "825": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "829": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "831": {
        "op": "SHL"
      },
      "832": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "DUP2",
        "path": "6"
      },
      "833": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "834": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "836": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "838": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "DUP3",
        "path": "6"
      },
      "839": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "ADD",
        "path": "6"
      },
      "840": {
        "op": "MSTORE"
      },
      "841": {
        "op": "PUSH1",
        "value": "0x19"
      },
      "843": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "845": {
        "op": "DUP3"
      },
      "846": {
        "op": "ADD"
      },
      "847": {
        "op": "MSTORE"
      },
      "848": {
        "op": "PUSH32",
        "value": "0x436865636B2074686520746F6B656E20616C6C6F77616E636500000000000000"
      },
      "881": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "883": {
        "op": "DUP3"
      },
      "884": {
        "op": "ADD"
      },
      "885": {
        "op": "MSTORE"
      },
      "886": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "888": {
        "op": "ADD"
      },
      "889": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "890": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "892": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "893": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "DUP1",
        "path": "6"
      },
      "894": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "895": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "SUB",
        "path": "6"
      },
      "896": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "897": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "REVERT",
        "optimizer_revert": true,
        "path": "6"
      },
      "898": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4887,
          4947
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "899": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          4993
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 3,
        "value": "0x1"
      },
      "901": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          4993
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "902": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "904": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "905": {
        "op": "PUSH4",
        "value": "0x23B872DD"
      },
      "910": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "912": {
        "op": "SHL"
      },
      "913": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP2",
        "path": "6"
      },
      "914": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "915": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5007,
          5017
        ],
        "op": "CALLER",
        "path": "6"
      },
      "916": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "918": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP3",
        "path": "6"
      },
      "919": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "ADD",
        "path": "6"
      },
      "920": {
        "op": "MSTORE"
      },
      "921": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5027,
          5031
        ],
        "op": "ADDRESS",
        "path": "6"
      },
      "922": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "924": {
        "op": "DUP3"
      },
      "925": {
        "op": "ADD"
      },
      "926": {
        "op": "MSTORE"
      },
      "927": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "929": {
        "op": "DUP2"
      },
      "930": {
        "op": "ADD"
      },
      "931": {
        "op": "DUP8"
      },
      "932": {
        "op": "SWAP1"
      },
      "933": {
        "op": "MSTORE"
      },
      "934": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "936": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "938": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "940": {
        "op": "SHL"
      },
      "941": {
        "op": "SUB"
      },
      "942": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          4993
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "943": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          4993
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "944": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          4993
        ],
        "op": "AND",
        "path": "6"
      },
      "945": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          4993
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "946": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5006
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x23B872DD"
      },
      "951": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5006
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "952": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "954": {
        "op": "ADD"
      },
      "955": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "957": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "959": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "960": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP1",
        "path": "6"
      },
      "961": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP4",
        "path": "6"
      },
      "962": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "SUB",
        "path": "6"
      },
      "963": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP2",
        "path": "6"
      },
      "964": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "966": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP8",
        "path": "6"
      },
      "967": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "GAS",
        "path": "6"
      },
      "968": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "CALL",
        "path": "6"
      },
      "969": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "970": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP1",
        "path": "6"
      },
      "971": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "972": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x3D9"
      },
      "975": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "976": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "977": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "979": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP1",
        "path": "6"
      },
      "980": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "981": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "982": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "984": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "REVERT",
        "path": "6"
      },
      "985": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "986": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "POP",
        "path": "6"
      },
      "987": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "POP",
        "path": "6"
      },
      "988": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "POP",
        "path": "6"
      },
      "989": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "POP",
        "path": "6"
      },
      "990": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "992": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "993": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "994": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "996": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "NOT",
        "path": "6"
      },
      "997": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "999": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1000": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "ADD",
        "path": "6"
      },
      "1001": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "AND",
        "path": "6"
      },
      "1002": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1003": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "ADD",
        "path": "6"
      },
      "1004": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1005": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1007": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1008": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "POP",
        "path": "6"
      },
      "1009": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1010": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "ADD",
        "path": "6"
      },
      "1011": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1012": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x3FD"
      },
      "1015": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1016": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1017": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB5D"
      },
      "1020": {
        "fn": "Tulip.sellOrder",
        "jump": "i",
        "offset": [
          4984,
          5044
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1021": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1022": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4984,
          5044
        ],
        "op": "POP",
        "path": "6"
      },
      "1023": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5112,
          5126
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 4,
        "value": "0x7"
      },
      "1025": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5112,
          5126
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1026": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5085,
          5098
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x6"
      },
      "1028": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5085,
          5098
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1029": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "PUSH32",
        "path": "6",
        "value": "0xDE3EF5CCE083FDE9FDF5F9DFC0520EAB7D9B2DA6636F54024DD9F397596186FD"
      },
      "1062": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5140,
          5150
        ],
        "op": "DUP9",
        "path": "6"
      },
      "1063": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5172,
          5175
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1065": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5190,
          5199
        ],
        "op": "DUP10",
        "path": "6"
      },
      "1066": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5213,
          5224
        ],
        "op": "DUP10",
        "path": "6"
      },
      "1067": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5238,
          5253
        ],
        "op": "DUP10",
        "path": "6"
      },
      "1068": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5267,
          5277
        ],
        "op": "CALLER",
        "path": "6"
      },
      "1069": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "1071": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1"
      },
      "1073": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1074": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1075": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1076": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x100"
      },
      "1079": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "EXP",
        "path": "6"
      },
      "1080": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1081": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "DIV",
        "path": "6"
      },
      "1082": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xFFFF"
      },
      "1085": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5291,
          5297
        ],
        "op": "AND",
        "path": "6"
      },
      "1086": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1088": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1089": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x450"
      },
      "1092": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP8",
        "path": "6"
      },
      "1093": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP7",
        "path": "6"
      },
      "1094": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP6",
        "path": "6"
      },
      "1095": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP5",
        "path": "6"
      },
      "1096": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP4",
        "path": "6"
      },
      "1097": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "1098": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1099": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1100": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB7F"
      },
      "1103": {
        "fn": "Tulip.sellOrder",
        "jump": "i",
        "offset": [
          5059,
          5307
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1104": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1105": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1107": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1108": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1109": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1110": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SUB",
        "path": "6"
      },
      "1111": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1112": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5059,
          5307
        ],
        "op": "LOG3",
        "path": "6"
      },
      "1113": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 5,
        "value": "0x7"
      },
      "1115": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1116": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1117": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5325
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x8"
      },
      "1119": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1120": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1121": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1"
      },
      "1123": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1124": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "ADD",
        "path": "6"
      },
      "1125": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1126": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "SSTORE",
        "path": "6"
      },
      "1127": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "1129": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1130": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1131": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1132": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "PUSH32",
        "path": "6",
        "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
      },
      "1165": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "ADD",
        "path": "6"
      },
      "1166": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1167": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1168": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5317,
          5346
        ],
        "op": "SSTORE",
        "path": "6"
      },
      "1169": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1170": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1171": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1172": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5415,
          5431
        ],
        "op": "PUSH2",
        "path": "6",
        "statement": 6,
        "value": "0x49C"
      },
      "1175": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5331,
          5345
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1176": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5415,
          5431
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xBDA"
      },
      "1179": {
        "fn": "Tulip.sellOrder",
        "jump": "i",
        "offset": [
          5415,
          5431
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1180": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5415,
          5431
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1181": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5415,
          5431
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1182": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5415,
          5431
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1183": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5415,
          5431
        ],
        "op": "SSTORE",
        "path": "6"
      },
      "1184": {
        "op": "POP"
      },
      "1185": {
        "fn": "Tulip.sellOrder",
        "offset": [
          5408,
          5431
        ],
        "op": "SWAP7",
        "path": "6"
      },
      "1186": {
        "fn": "Tulip.sellOrder",
        "offset": [
          4492,
          5438
        ],
        "op": "SWAP6",
        "path": "6"
      },
      "1187": {
        "op": "POP"
      },
      "1188": {
        "op": "POP"
      },
      "1189": {
        "op": "POP"
      },
      "1190": {
        "op": "POP"
      },
      "1191": {
        "op": "POP"
      },
      "1192": {
        "op": "POP"
      },
      "1193": {
        "fn": "Tulip.sellOrder",
        "jump": "o",
        "offset": [
          4492,
          5438
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1194": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3297,
          4125
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1195": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3513,
          3522
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 7,
        "value": "0x1"
      },
      "1197": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3513,
          3522
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1198": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3464,
          3471
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1200": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3464,
          3471
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1201": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1203": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1205": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1207": {
        "op": "SHL"
      },
      "1208": {
        "op": "SUB"
      },
      "1209": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3491,
          3523
        ],
        "op": "DUP7",
        "path": "6"
      },
      "1210": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3491,
          3523
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1211": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3491,
          3523
        ],
        "op": "AND",
        "path": "6"
      },
      "1212": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3513,
          3522
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1213": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3513,
          3522
        ],
        "op": "AND",
        "path": "6"
      },
      "1214": {
        "branch": 24,
        "fn": "Tulip.buyOrder",
        "offset": [
          3491,
          3523
        ],
        "op": "EQ",
        "path": "6"
      },
      "1215": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3483,
          3524
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x4C7"
      },
      "1218": {
        "branch": 24,
        "fn": "Tulip.buyOrder",
        "offset": [
          3483,
          3524
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1219": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3483,
          3524
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1221": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3483,
          3524
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1222": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3483,
          3524
        ],
        "op": "REVERT",
        "path": "6"
      },
      "1223": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3483,
          3524
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1224": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3534,
          3551
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1226": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3582,
          3590
        ],
        "op": "PUSH8",
        "path": "6",
        "value": "0xDE0B6B3A7640000"
      },
      "1235": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3555,
          3578
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x4DC"
      },
      "1238": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3567,
          3578
        ],
        "op": "DUP6",
        "path": "6"
      },
      "1239": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3555,
          3564
        ],
        "op": "DUP8",
        "path": "6"
      },
      "1240": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3555,
          3578
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xBF3"
      },
      "1243": {
        "fn": "Tulip.buyOrder",
        "jump": "i",
        "offset": [
          3555,
          3578
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1244": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3555,
          3578
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1245": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3554,
          3590
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x4E6"
      },
      "1248": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3554,
          3590
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1249": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3554,
          3590
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1250": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3554,
          3590
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xC10"
      },
      "1253": {
        "fn": "Tulip.buyOrder",
        "jump": "i",
        "offset": [
          3554,
          3590
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1254": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3554,
          3590
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1255": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3534,
          3590
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1256": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3534,
          3590
        ],
        "op": "POP",
        "path": "6"
      },
      "1257": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3634,
          3643
        ],
        "op": "DUP1",
        "path": "6",
        "statement": 8
      },
      "1258": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3621,
          3630
        ],
        "op": "CALLVALUE",
        "path": "6"
      },
      "1259": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3621,
          3643
        ],
        "op": "LT",
        "path": "6"
      },
      "1260": {
        "branch": 25,
        "fn": "Tulip.buyOrder",
        "offset": [
          3621,
          3643
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1261": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x55E"
      },
      "1264": {
        "branch": 25,
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1265": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1267": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1268": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "1272": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "1274": {
        "op": "SHL"
      },
      "1275": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1276": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1277": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "1279": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "1281": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1282": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "ADD",
        "path": "6"
      },
      "1283": {
        "op": "MSTORE"
      },
      "1284": {
        "op": "PUSH1",
        "value": "0x3F"
      },
      "1286": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1288": {
        "op": "DUP3"
      },
      "1289": {
        "op": "ADD"
      },
      "1290": {
        "op": "MSTORE"
      },
      "1291": {
        "op": "PUSH32",
        "value": "0x56616C75652073686F756C6420636F766572207468652066756C6C2070726963"
      },
      "1324": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "1326": {
        "op": "DUP3"
      },
      "1327": {
        "op": "ADD"
      },
      "1328": {
        "op": "MSTORE"
      },
      "1329": {
        "op": "PUSH32",
        "value": "0x65206F662072657175657374656420616D6F756E74206F6620746F6B656E7300"
      },
      "1362": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "1364": {
        "op": "DUP3"
      },
      "1365": {
        "op": "ADD"
      },
      "1366": {
        "op": "MSTORE"
      },
      "1367": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "1369": {
        "op": "ADD"
      },
      "1370": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x379"
      },
      "1373": {
        "op": "JUMP"
      },
      "1374": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3600,
          3732
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1375": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3799,
          3813
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 9,
        "value": "0x7"
      },
      "1377": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3799,
          3813
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1378": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3772,
          3785
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x6"
      },
      "1380": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3772,
          3785
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1381": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "PUSH32",
        "path": "6",
        "value": "0x63633E980CF83CC2F0C855D9AEE9CBA28F3458E53C5B080F9187B4C2FF889EDA"
      },
      "1414": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3827,
          3837
        ],
        "op": "DUP9",
        "path": "6"
      },
      "1415": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3859,
          3862
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1417": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3877,
          3886
        ],
        "op": "DUP10",
        "path": "6"
      },
      "1418": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3900,
          3911
        ],
        "op": "DUP10",
        "path": "6"
      },
      "1419": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3925,
          3940
        ],
        "op": "DUP10",
        "path": "6"
      },
      "1420": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3954,
          3964
        ],
        "op": "CALLER",
        "path": "6"
      },
      "1421": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "1423": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1"
      },
      "1425": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1426": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1427": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1428": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x100"
      },
      "1431": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "EXP",
        "path": "6"
      },
      "1432": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1433": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "DIV",
        "path": "6"
      },
      "1434": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xFFFF"
      },
      "1437": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3978,
          3984
        ],
        "op": "AND",
        "path": "6"
      },
      "1438": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1440": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1441": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x450"
      },
      "1444": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP8",
        "path": "6"
      },
      "1445": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP7",
        "path": "6"
      },
      "1446": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP6",
        "path": "6"
      },
      "1447": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP5",
        "path": "6"
      },
      "1448": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP4",
        "path": "6"
      },
      "1449": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "1450": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1451": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1452": {
        "fn": "Tulip.buyOrder",
        "offset": [
          3747,
          3994
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB7F"
      },
      "1455": {
        "fn": "Tulip.buyOrder",
        "jump": "i",
        "offset": [
          3747,
          3994
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1456": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "1457": {
        "offset": [
          1094,
          1107
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x5B8"
      },
      "1460": {
        "offset": [
          1094,
          1105
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x9C8"
      },
      "1463": {
        "jump": "i",
        "offset": [
          1094,
          1107
        ],
        "op": "JUMP",
        "path": "20"
      },
      "1464": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1094,
          1107
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "1465": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1895,
          1925
        ],
        "op": "PUSH2",
        "path": "20",
        "statement": 10,
        "value": "0x5C2"
      },
      "1468": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1922,
          1923
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "1470": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1895,
          1913
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0xA22"
      },
      "1473": {
        "fn": "Ownable.renounceOwnership",
        "jump": "i",
        "offset": [
          1895,
          1925
        ],
        "op": "JUMP",
        "path": "20"
      },
      "1474": {
        "fn": "Ownable.renounceOwnership",
        "offset": [
          1895,
          1925
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "1475": {
        "fn": "Ownable.renounceOwnership",
        "jump": "o",
        "offset": [
          1831,
          1932
        ],
        "op": "JUMP",
        "path": "20"
      },
      "1476": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1477": {
        "fn": "Tulip.getPrice",
        "offset": [
          5654,
          5661
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1479": {
        "fn": "Tulip.getPrice",
        "offset": [
          5654,
          5661
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1480": {
        "fn": "Tulip.getPrice",
        "offset": [
          5730,
          5745
        ],
        "op": "TIMESTAMP",
        "path": "6"
      },
      "1481": {
        "fn": "Tulip.getPrice",
        "offset": [
          5654,
          5661
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1482": {
        "fn": "Tulip.getPrice",
        "offset": [
          5829,
          5854
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x5D6"
      },
      "1485": {
        "fn": "Tulip.getPrice",
        "offset": [
          5848,
          5854
        ],
        "op": "PUSH3",
        "path": "6",
        "value": "0x93A80"
      },
      "1489": {
        "fn": "Tulip.getPrice",
        "offset": [
          5730,
          5745
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1490": {
        "fn": "Tulip.getPrice",
        "offset": [
          5829,
          5854
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xC32"
      },
      "1493": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          5829,
          5854
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1494": {
        "fn": "Tulip.getPrice",
        "offset": [
          5829,
          5854
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1495": {
        "fn": "Tulip.getPrice",
        "offset": [
          5868,
          5877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "1497": {
        "fn": "Tulip.getPrice",
        "offset": [
          5868,
          5877
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1498": {
        "fn": "Tulip.getPrice",
        "offset": [
          5805,
          5854
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1499": {
        "fn": "Tulip.getPrice",
        "offset": [
          5805,
          5854
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1500": {
        "op": "POP"
      },
      "1501": {
        "fn": "Tulip.getPrice",
        "offset": [
          5868,
          5877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0xFF"
      },
      "1503": {
        "fn": "Tulip.getPrice",
        "offset": [
          5868,
          5877
        ],
        "op": "AND",
        "path": "6"
      },
      "1504": {
        "fn": "Tulip.getPrice",
        "offset": [
          5868,
          5877
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1"
      },
      "1506": {
        "branch": 26,
        "fn": "Tulip.getPrice",
        "offset": [
          5868,
          5882
        ],
        "op": "SUB",
        "path": "6"
      },
      "1507": {
        "fn": "Tulip.getPrice",
        "offset": [
          5864,
          6567
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x65D"
      },
      "1510": {
        "branch": 26,
        "fn": "Tulip.getPrice",
        "offset": [
          5864,
          6567
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1511": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5984
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x2"
      },
      "1513": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5984
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1514": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1516": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1517": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1518": {
        "op": "PUSH4",
        "value": "0x8E15F473"
      },
      "1523": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "1525": {
        "op": "SHL"
      },
      "1526": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1527": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1528": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1529": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1530": {
        "fn": "Tulip.getPrice",
        "offset": [
          5954,
          5966
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1532": {
        "fn": "Tulip.getPrice",
        "offset": [
          5954,
          5966
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "1533": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1535": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1537": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1539": {
        "op": "SHL"
      },
      "1540": {
        "op": "SUB"
      },
      "1541": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5984
        ],
        "op": "AND",
        "path": "6"
      },
      "1542": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5984
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1543": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5999
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x8E15F473"
      },
      "1548": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5999
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1549": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "1551": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1552": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1553": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ADD",
        "path": "6"
      },
      "1554": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "1555": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "1557": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "1558": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1559": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1560": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1561": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1562": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SUB",
        "path": "6"
      },
      "1563": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ADD",
        "path": "6"
      },
      "1564": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1565": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          5984
        ],
        "op": "DUP7",
        "path": "6"
      },
      "1566": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "GAS",
        "path": "6"
      },
      "1567": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "STATICCALL",
        "path": "6"
      },
      "1568": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1569": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1570": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1571": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x630"
      },
      "1574": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1575": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1576": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1578": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1579": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "1580": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1581": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1583": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "REVERT",
        "path": "6"
      },
      "1584": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1585": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "POP",
        "path": "6"
      },
      "1586": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "POP",
        "path": "6"
      },
      "1587": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "POP",
        "path": "6"
      },
      "1588": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "POP",
        "path": "6"
      },
      "1589": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1591": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1592": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1593": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1595": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "NOT",
        "path": "6"
      },
      "1596": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1598": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1599": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ADD",
        "path": "6"
      },
      "1600": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "AND",
        "path": "6"
      },
      "1601": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1602": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ADD",
        "path": "6"
      },
      "1603": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1604": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1606": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1607": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "POP",
        "path": "6"
      },
      "1608": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1609": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "ADD",
        "path": "6"
      },
      "1610": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1611": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x654"
      },
      "1614": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1615": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1616": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB44"
      },
      "1619": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          5969,
          6001
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1620": {
        "fn": "Tulip.getPrice",
        "offset": [
          5969,
          6001
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1621": {
        "fn": "Tulip.getPrice",
        "offset": [
          5954,
          6001
        ],
        "op": "SWAP4",
        "path": "6"
      },
      "1622": {
        "op": "POP"
      },
      "1623": {
        "fn": "Tulip.getPrice",
        "offset": [
          5864,
          6567
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x84F"
      },
      "1626": {
        "fn": "Tulip.getPrice",
        "offset": [
          5864,
          6567
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1627": {
        "op": "POP"
      },
      "1628": {
        "fn": "Tulip.getPrice",
        "offset": [
          5864,
          6567
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1629": {
        "fn": "Tulip.getPrice",
        "offset": [
          5864,
          6567
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1630": {
        "fn": "Tulip.getPrice",
        "offset": [
          6059,
          6068
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "1632": {
        "fn": "Tulip.getPrice",
        "offset": [
          6059,
          6068
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1633": {
        "fn": "Tulip.getPrice",
        "offset": [
          6059,
          6068
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0xFF"
      },
      "1635": {
        "fn": "Tulip.getPrice",
        "offset": [
          6059,
          6068
        ],
        "op": "AND",
        "path": "6"
      },
      "1636": {
        "fn": "Tulip.getPrice",
        "offset": [
          6072,
          6073
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x2"
      },
      "1638": {
        "branch": 27,
        "fn": "Tulip.getPrice",
        "offset": [
          6059,
          6073
        ],
        "op": "SUB",
        "path": "6"
      },
      "1639": {
        "fn": "Tulip.getPrice",
        "offset": [
          6055,
          6567
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x758"
      },
      "1642": {
        "branch": 27,
        "fn": "Tulip.getPrice",
        "offset": [
          6055,
          6567
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1643": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6173
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x3"
      },
      "1645": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6173
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1646": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1648": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1649": {
        "op": "PUSH4",
        "value": "0xC57707B9"
      },
      "1654": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "1656": {
        "op": "SHL"
      },
      "1657": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1658": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1659": {
        "fn": "Tulip.getPrice",
        "offset": [
          6139,
          6156
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1661": {
        "fn": "Tulip.getPrice",
        "offset": [
          6139,
          6156
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1662": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1664": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1666": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1668": {
        "op": "SHL"
      },
      "1669": {
        "op": "SUB"
      },
      "1670": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6173
        ],
        "op": "AND",
        "path": "6"
      },
      "1671": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6173
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1672": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6185
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xC57707B9"
      },
      "1677": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6185
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1678": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x69F"
      },
      "1681": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1682": {
        "fn": "Tulip.getPrice",
        "offset": [
          6186,
          6201
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "1684": {
        "fn": "Tulip.getPrice",
        "offset": [
          6186,
          6201
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1685": {
        "fn": "Tulip.getPrice",
        "offset": [
          6203,
          6217
        ],
        "op": "DUP7",
        "path": "6"
      },
      "1686": {
        "fn": "Tulip.getPrice",
        "offset": [
          6203,
          6217
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1687": {
        "fn": "Tulip.getPrice",
        "offset": [
          6219,
          6235
        ],
        "op": "DUP9",
        "path": "6"
      },
      "1688": {
        "fn": "Tulip.getPrice",
        "offset": [
          6219,
          6235
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1689": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1690": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "ADD",
        "path": "6"
      },
      "1691": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xC93"
      },
      "1694": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          6159,
          6236
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1695": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1696": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "1698": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1700": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1701": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1702": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1703": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "SUB",
        "path": "6"
      },
      "1704": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1705": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1707": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP8",
        "path": "6"
      },
      "1708": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "GAS",
        "path": "6"
      },
      "1709": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "CALL",
        "path": "6"
      },
      "1710": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1711": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1712": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1713": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x6BE"
      },
      "1716": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1717": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1718": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1720": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1721": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "1722": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1723": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1725": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "REVERT",
        "path": "6"
      },
      "1726": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1727": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "POP",
        "path": "6"
      },
      "1728": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "POP",
        "path": "6"
      },
      "1729": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "POP",
        "path": "6"
      },
      "1730": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "POP",
        "path": "6"
      },
      "1731": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1733": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1734": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1735": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1737": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "NOT",
        "path": "6"
      },
      "1738": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1740": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1741": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "ADD",
        "path": "6"
      },
      "1742": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "AND",
        "path": "6"
      },
      "1743": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1744": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "ADD",
        "path": "6"
      },
      "1745": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1746": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1748": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1749": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "POP",
        "path": "6"
      },
      "1750": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1751": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "ADD",
        "path": "6"
      },
      "1752": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1753": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x6E2"
      },
      "1756": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1757": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1758": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB44"
      },
      "1761": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          6159,
          6236
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1762": {
        "fn": "Tulip.getPrice",
        "offset": [
          6159,
          6236
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1763": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6276
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 11,
        "value": "0x3"
      },
      "1765": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6276
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1766": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1768": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1769": {
        "op": "PUSH4",
        "value": "0x2B7531E1"
      },
      "1774": {
        "op": "PUSH1",
        "value": "0xE2"
      },
      "1776": {
        "op": "SHL"
      },
      "1777": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1778": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1779": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "1781": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1782": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "ADD",
        "path": "6"
      },
      "1783": {
        "op": "DUP4"
      },
      "1784": {
        "op": "SWAP1"
      },
      "1785": {
        "op": "MSTORE"
      },
      "1786": {
        "fn": "Tulip.getPrice",
        "offset": [
          6139,
          6236
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1787": {
        "fn": "Tulip.getPrice",
        "offset": [
          6139,
          6236
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "1788": {
        "op": "POP"
      },
      "1789": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1791": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1793": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1795": {
        "op": "SHL"
      },
      "1796": {
        "op": "SUB"
      },
      "1797": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6276
        ],
        "op": "AND",
        "path": "6"
      },
      "1798": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6276
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1799": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6286
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xADD4C784"
      },
      "1804": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6286
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1805": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "1807": {
        "op": "ADD"
      },
      "1808": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "1810": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1812": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1813": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1814": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1815": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "SUB",
        "path": "6"
      },
      "1816": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1817": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP7",
        "path": "6"
      },
      "1818": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "GAS",
        "path": "6"
      },
      "1819": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "STATICCALL",
        "path": "6"
      },
      "1820": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1821": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1822": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1823": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x72C"
      },
      "1826": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1827": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1828": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1830": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1831": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "1832": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1833": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1835": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "REVERT",
        "path": "6"
      },
      "1836": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1837": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "POP",
        "path": "6"
      },
      "1838": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "POP",
        "path": "6"
      },
      "1839": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "POP",
        "path": "6"
      },
      "1840": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "POP",
        "path": "6"
      },
      "1841": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1843": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1844": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1845": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1847": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "NOT",
        "path": "6"
      },
      "1848": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1850": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1851": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "ADD",
        "path": "6"
      },
      "1852": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "AND",
        "path": "6"
      },
      "1853": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1854": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "ADD",
        "path": "6"
      },
      "1855": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1856": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1858": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1859": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "POP",
        "path": "6"
      },
      "1860": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1861": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "ADD",
        "path": "6"
      },
      "1862": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1863": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x750"
      },
      "1866": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1867": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1868": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB44"
      },
      "1871": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          6262,
          6297
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1872": {
        "fn": "Tulip.getPrice",
        "offset": [
          6262,
          6297
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1873": {
        "fn": "Tulip.getPrice",
        "offset": [
          6250,
          6297
        ],
        "op": "SWAP4",
        "path": "6"
      },
      "1874": {
        "fn": "Tulip.getPrice",
        "offset": [
          6250,
          6297
        ],
        "op": "POP",
        "path": "6"
      },
      "1875": {
        "fn": "Tulip.getPrice",
        "offset": [
          6075,
          6308
        ],
        "op": "POP",
        "path": "6"
      },
      "1876": {
        "fn": "Tulip.getPrice",
        "offset": [
          6055,
          6567
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x84F"
      },
      "1879": {
        "fn": "Tulip.getPrice",
        "offset": [
          6055,
          6567
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1880": {
        "fn": "Tulip.getPrice",
        "offset": [
          6055,
          6567
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1881": {
        "fn": "Tulip.getPrice",
        "offset": [
          6318,
          6327
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x5"
      },
      "1883": {
        "fn": "Tulip.getPrice",
        "offset": [
          6318,
          6327
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1884": {
        "fn": "Tulip.getPrice",
        "offset": [
          6318,
          6327
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0xFF"
      },
      "1886": {
        "fn": "Tulip.getPrice",
        "offset": [
          6318,
          6327
        ],
        "op": "AND",
        "path": "6"
      },
      "1887": {
        "fn": "Tulip.getPrice",
        "offset": [
          6331,
          6332
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x3"
      },
      "1889": {
        "branch": 28,
        "fn": "Tulip.getPrice",
        "offset": [
          6318,
          6332
        ],
        "op": "SUB",
        "path": "6"
      },
      "1890": {
        "fn": "Tulip.getPrice",
        "offset": [
          6314,
          6567
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x84F"
      },
      "1893": {
        "branch": 28,
        "fn": "Tulip.getPrice",
        "offset": [
          6314,
          6567
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1894": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6432
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x3"
      },
      "1896": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6432
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "1897": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1899": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1900": {
        "op": "PUSH4",
        "value": "0x3206C383"
      },
      "1905": {
        "op": "PUSH1",
        "value": "0xE1"
      },
      "1907": {
        "op": "SHL"
      },
      "1908": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1909": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "1910": {
        "fn": "Tulip.getPrice",
        "offset": [
          6398,
          6415
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1912": {
        "fn": "Tulip.getPrice",
        "offset": [
          6398,
          6415
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "1913": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1915": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "1917": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "1919": {
        "op": "SHL"
      },
      "1920": {
        "op": "SUB"
      },
      "1921": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6432
        ],
        "op": "AND",
        "path": "6"
      },
      "1922": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6432
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1923": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6444
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0x640D8706"
      },
      "1928": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6444
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1929": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x79A"
      },
      "1932": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1933": {
        "fn": "Tulip.getPrice",
        "offset": [
          6445,
          6460
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "1935": {
        "fn": "Tulip.getPrice",
        "offset": [
          6445,
          6460
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1936": {
        "fn": "Tulip.getPrice",
        "offset": [
          6462,
          6476
        ],
        "op": "DUP7",
        "path": "6"
      },
      "1937": {
        "fn": "Tulip.getPrice",
        "offset": [
          6462,
          6476
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1938": {
        "fn": "Tulip.getPrice",
        "offset": [
          6478,
          6494
        ],
        "op": "DUP9",
        "path": "6"
      },
      "1939": {
        "fn": "Tulip.getPrice",
        "offset": [
          6478,
          6494
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "1940": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1941": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "ADD",
        "path": "6"
      },
      "1942": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xC93"
      },
      "1945": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          6418,
          6495
        ],
        "op": "JUMP",
        "path": "6"
      },
      "1946": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1947": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "1949": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1951": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1952": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1953": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP4",
        "path": "6"
      },
      "1954": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "SUB",
        "path": "6"
      },
      "1955": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP2",
        "path": "6"
      },
      "1956": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1958": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP8",
        "path": "6"
      },
      "1959": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "GAS",
        "path": "6"
      },
      "1960": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "CALL",
        "path": "6"
      },
      "1961": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1962": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1963": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "1964": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x7B9"
      },
      "1967": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "1968": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1969": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1971": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1972": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "1973": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1974": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "1976": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "REVERT",
        "path": "6"
      },
      "1977": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "1978": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "POP",
        "path": "6"
      },
      "1979": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "POP",
        "path": "6"
      },
      "1980": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "POP",
        "path": "6"
      },
      "1981": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "POP",
        "path": "6"
      },
      "1982": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1984": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "1985": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "1986": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1988": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "NOT",
        "path": "6"
      },
      "1989": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "1991": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1992": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "ADD",
        "path": "6"
      },
      "1993": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "AND",
        "path": "6"
      },
      "1994": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP3",
        "path": "6"
      },
      "1995": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "ADD",
        "path": "6"
      },
      "1996": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP1",
        "path": "6"
      },
      "1997": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "1999": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2000": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "POP",
        "path": "6"
      },
      "2001": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2002": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "ADD",
        "path": "6"
      },
      "2003": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2004": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x7DD"
      },
      "2007": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2008": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2009": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB44"
      },
      "2012": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          6418,
          6495
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2013": {
        "fn": "Tulip.getPrice",
        "offset": [
          6418,
          6495
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2014": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6535
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 12,
        "value": "0x3"
      },
      "2016": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6535
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "2017": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2019": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "2020": {
        "op": "PUSH4",
        "value": "0x2B7531E1"
      },
      "2025": {
        "op": "PUSH1",
        "value": "0xE2"
      },
      "2027": {
        "op": "SHL"
      },
      "2028": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2029": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2030": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "2032": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2033": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "ADD",
        "path": "6"
      },
      "2034": {
        "op": "DUP4"
      },
      "2035": {
        "op": "SWAP1"
      },
      "2036": {
        "op": "MSTORE"
      },
      "2037": {
        "fn": "Tulip.getPrice",
        "offset": [
          6398,
          6495
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2038": {
        "fn": "Tulip.getPrice",
        "offset": [
          6398,
          6495
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "2039": {
        "op": "POP"
      },
      "2040": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2042": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2044": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2046": {
        "op": "SHL"
      },
      "2047": {
        "op": "SUB"
      },
      "2048": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6535
        ],
        "op": "AND",
        "path": "6"
      },
      "2049": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6535
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2050": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6545
        ],
        "op": "PUSH4",
        "path": "6",
        "value": "0xADD4C784"
      },
      "2055": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6545
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2056": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2058": {
        "op": "ADD"
      },
      "2059": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2061": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2063": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "2064": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2065": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP4",
        "path": "6"
      },
      "2066": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "SUB",
        "path": "6"
      },
      "2067": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2068": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP7",
        "path": "6"
      },
      "2069": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "GAS",
        "path": "6"
      },
      "2070": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "STATICCALL",
        "path": "6"
      },
      "2071": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "2072": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2073": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "2074": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x827"
      },
      "2077": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "2078": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "2079": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "2081": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2082": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "RETURNDATACOPY",
        "path": "6"
      },
      "2083": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "2084": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "2086": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "REVERT",
        "path": "6"
      },
      "2087": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2088": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "POP",
        "path": "6"
      },
      "2089": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "POP",
        "path": "6"
      },
      "2090": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "POP",
        "path": "6"
      },
      "2091": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "POP",
        "path": "6"
      },
      "2092": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2094": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "2095": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "RETURNDATASIZE",
        "path": "6"
      },
      "2096": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "2098": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "NOT",
        "path": "6"
      },
      "2099": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "2101": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2102": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "ADD",
        "path": "6"
      },
      "2103": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "AND",
        "path": "6"
      },
      "2104": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2105": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "ADD",
        "path": "6"
      },
      "2106": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2107": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2109": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2110": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "POP",
        "path": "6"
      },
      "2111": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2112": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "ADD",
        "path": "6"
      },
      "2113": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2114": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x84B"
      },
      "2117": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2118": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2119": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xB44"
      },
      "2122": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          6521,
          6556
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2123": {
        "fn": "Tulip.getPrice",
        "offset": [
          6521,
          6556
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2124": {
        "fn": "Tulip.getPrice",
        "offset": [
          6509,
          6556
        ],
        "op": "SWAP4",
        "path": "6"
      },
      "2125": {
        "fn": "Tulip.getPrice",
        "offset": [
          6509,
          6556
        ],
        "op": "POP",
        "path": "6"
      },
      "2126": {
        "fn": "Tulip.getPrice",
        "offset": [
          6334,
          6567
        ],
        "op": "POP",
        "path": "6"
      },
      "2127": {
        "fn": "Tulip.getPrice",
        "offset": [
          6314,
          6567
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2128": {
        "fn": "Tulip.getPrice",
        "offset": [
          6596,
          6597
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 13,
        "value": "0x0"
      },
      "2130": {
        "fn": "Tulip.getPrice",
        "offset": [
          6584,
          6593
        ],
        "op": "DUP4",
        "path": "6"
      },
      "2131": {
        "branch": 29,
        "fn": "Tulip.getPrice",
        "offset": [
          6584,
          6597
        ],
        "op": "GT",
        "path": "6"
      },
      "2132": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x89F"
      },
      "2135": {
        "branch": 29,
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "2136": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2138": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "2139": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2143": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2145": {
        "op": "SHL"
      },
      "2146": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2147": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2148": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2150": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "2152": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2153": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "ADD",
        "path": "6"
      },
      "2154": {
        "op": "MSTORE"
      },
      "2155": {
        "op": "PUSH1",
        "value": "0x1E"
      },
      "2157": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2159": {
        "op": "DUP3"
      },
      "2160": {
        "op": "ADD"
      },
      "2161": {
        "op": "MSTORE"
      },
      "2162": {
        "op": "PUSH32",
        "value": "0x50726963652073686F756C64206265206D6F7265207468616E207A65726F0000"
      },
      "2195": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2197": {
        "op": "DUP3"
      },
      "2198": {
        "op": "ADD"
      },
      "2199": {
        "op": "MSTORE"
      },
      "2200": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2202": {
        "op": "ADD"
      },
      "2203": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x379"
      },
      "2206": {
        "op": "JUMP"
      },
      "2207": {
        "fn": "Tulip.getPrice",
        "offset": [
          6576,
          6632
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2208": {
        "op": "POP"
      },
      "2209": {
        "fn": "Tulip.getPrice",
        "offset": [
          6649,
          6658
        ],
        "op": "SWAP1",
        "path": "6",
        "statement": 14
      },
      "2210": {
        "fn": "Tulip.getPrice",
        "offset": [
          6649,
          6658
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "2211": {
        "fn": "Tulip.getPrice",
        "offset": [
          5618,
          6666
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2212": {
        "op": "POP"
      },
      "2213": {
        "op": "POP"
      },
      "2214": {
        "fn": "Tulip.getPrice",
        "jump": "o",
        "offset": [
          5618,
          6666
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2215": {
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2216": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x4"
      },
      "2218": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2219": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "2220": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x8B4"
      },
      "2223": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2224": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xC59"
      },
      "2227": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          629,
          658
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2228": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2229": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2230": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "2232": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2233": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2235": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2236": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2237": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DIV",
        "path": "6"
      },
      "2238": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MUL",
        "path": "6"
      },
      "2239": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2241": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2242": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2244": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MLOAD",
        "path": "6"
      },
      "2245": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2246": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2247": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2248": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x40"
      },
      "2250": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2251": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2252": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP3",
        "path": "6"
      },
      "2253": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2254": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2255": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2256": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2257": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2258": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2260": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2261": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2262": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2263": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "2264": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x8E0"
      },
      "2267": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2268": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xC59"
      },
      "2271": {
        "fn": "Tulip.getPrice",
        "jump": "i",
        "offset": [
          629,
          658
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2272": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2273": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2274": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ISZERO",
        "path": "6"
      },
      "2275": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x92D"
      },
      "2278": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "2279": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2280": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "2282": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "LT",
        "path": "6"
      },
      "2283": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x902"
      },
      "2286": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "2287": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x100"
      },
      "2290": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2291": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP4",
        "path": "6"
      },
      "2292": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "2293": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DIV",
        "path": "6"
      },
      "2294": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MUL",
        "path": "6"
      },
      "2295": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP4",
        "path": "6"
      },
      "2296": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2297": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2298": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2300": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2301": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2302": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x92D"
      },
      "2305": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2306": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2307": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2308": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2309": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2310": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2311": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "2313": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2314": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2316": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "2318": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "KECCAK256",
        "path": "6"
      },
      "2319": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2320": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2321": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2322": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "2323": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2324": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "MSTORE",
        "path": "6"
      },
      "2325": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2326": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1"
      },
      "2328": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2329": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2330": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x20"
      },
      "2332": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2333": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2334": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP4",
        "path": "6"
      },
      "2335": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "GT",
        "path": "6"
      },
      "2336": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x910"
      },
      "2339": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPI",
        "path": "6"
      },
      "2340": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2341": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2342": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SUB",
        "path": "6"
      },
      "2343": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x1F"
      },
      "2345": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "AND",
        "path": "6"
      },
      "2346": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2347": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "ADD",
        "path": "6"
      },
      "2348": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2349": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2350": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "POP",
        "path": "6"
      },
      "2351": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "POP",
        "path": "6"
      },
      "2352": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "POP",
        "path": "6"
      },
      "2353": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "POP",
        "path": "6"
      },
      "2354": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "POP",
        "path": "6"
      },
      "2355": {
        "fn": "Tulip.getPrice",
        "offset": [
          629,
          658
        ],
        "op": "DUP2",
        "path": "6"
      },
      "2356": {
        "fn": "Tulip.getPrice",
        "jump": "o",
        "offset": [
          629,
          658
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2357": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2358": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5519
        ],
        "op": "PUSH1",
        "path": "6",
        "statement": 15,
        "value": "0x6"
      },
      "2360": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "DUP1",
        "path": "6"
      },
      "2361": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "SLOAD",
        "path": "6"
      },
      "2362": {
        "fn": "Tulip.runSwap",
        "offset": [
          5480,
          5487
        ],
        "op": "PUSH1",
        "path": "6",
        "value": "0x0"
      },
      "2364": {
        "fn": "Tulip.runSwap",
        "offset": [
          5480,
          5487
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2365": {
        "fn": "Tulip.runSwap",
        "offset": [
          5480,
          5487
        ],
        "op": "DUP3",
        "path": "6"
      },
      "2366": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0x946"
      },
      "2369": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "DUP4",
        "path": "6"
      },
      "2370": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "PUSH2",
        "path": "6",
        "value": "0xBDA"
      },
      "2373": {
        "fn": "Tulip.runSwap",
        "jump": "i",
        "offset": [
          5506,
          5521
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2374": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "JUMPDEST",
        "path": "6"
      },
      "2375": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "SWAP2",
        "path": "6"
      },
      "2376": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2377": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "POP",
        "path": "6"
      },
      "2378": {
        "fn": "Tulip.runSwap",
        "offset": [
          5506,
          5521
        ],
        "op": "SSTORE",
        "path": "6"
      },
      "2379": {
        "fn": "Tulip.runSwap",
        "offset": [
          5499,
          5521
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2380": {
        "fn": "Tulip.runSwap",
        "offset": [
          5499,
          5521
        ],
        "op": "POP",
        "path": "6"
      },
      "2381": {
        "fn": "Tulip.runSwap",
        "offset": [
          5445,
          5528
        ],
        "op": "SWAP1",
        "path": "6"
      },
      "2382": {
        "fn": "Tulip.runSwap",
        "jump": "o",
        "offset": [
          5445,
          5528
        ],
        "op": "JUMP",
        "path": "6"
      },
      "2383": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "2384": {
        "offset": [
          1094,
          1107
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x957"
      },
      "2387": {
        "offset": [
          1094,
          1105
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x9C8"
      },
      "2390": {
        "jump": "i",
        "offset": [
          1094,
          1107
        ],
        "op": "JUMP",
        "path": "20"
      },
      "2391": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          1094,
          1107
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "2392": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2394": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2396": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2398": {
        "op": "SHL"
      },
      "2399": {
        "op": "SUB"
      },
      "2400": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2169,
          2191
        ],
        "op": "DUP2",
        "path": "20",
        "statement": 16
      },
      "2401": {
        "branch": 30,
        "fn": "Ownable.transferOwnership",
        "offset": [
          2169,
          2191
        ],
        "op": "AND",
        "path": "20"
      },
      "2402": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x9BC"
      },
      "2405": {
        "branch": 30,
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "2406": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x40"
      },
      "2408": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "MLOAD",
        "path": "20"
      },
      "2409": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2413": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2415": {
        "op": "SHL"
      },
      "2416": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "DUP2",
        "path": "20"
      },
      "2417": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "MSTORE",
        "path": "20"
      },
      "2418": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2420": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x4"
      },
      "2422": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "DUP3",
        "path": "20"
      },
      "2423": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "ADD",
        "path": "20"
      },
      "2424": {
        "op": "MSTORE"
      },
      "2425": {
        "op": "PUSH1",
        "value": "0x26"
      },
      "2427": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2429": {
        "op": "DUP3"
      },
      "2430": {
        "op": "ADD"
      },
      "2431": {
        "op": "MSTORE"
      },
      "2432": {
        "op": "PUSH32",
        "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
      },
      "2465": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2467": {
        "op": "DUP3"
      },
      "2468": {
        "op": "ADD"
      },
      "2469": {
        "op": "MSTORE"
      },
      "2470": {
        "op": "PUSH6",
        "value": "0x646472657373"
      },
      "2477": {
        "op": "PUSH1",
        "value": "0xD0"
      },
      "2479": {
        "op": "SHL"
      },
      "2480": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2482": {
        "op": "DUP3"
      },
      "2483": {
        "op": "ADD"
      },
      "2484": {
        "op": "MSTORE"
      },
      "2485": {
        "op": "PUSH1",
        "value": "0x84"
      },
      "2487": {
        "op": "ADD"
      },
      "2488": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x379"
      },
      "2491": {
        "op": "JUMP"
      },
      "2492": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2161,
          2234
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "2493": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2244,
          2272
        ],
        "op": "PUSH2",
        "path": "20",
        "statement": 17,
        "value": "0x9C5"
      },
      "2496": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2263,
          2271
        ],
        "op": "DUP2",
        "path": "20"
      },
      "2497": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2244,
          2262
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0xA22"
      },
      "2500": {
        "fn": "Ownable.transferOwnership",
        "jump": "i",
        "offset": [
          2244,
          2272
        ],
        "op": "JUMP",
        "path": "20"
      },
      "2501": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2244,
          2272
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "2502": {
        "fn": "Ownable.transferOwnership",
        "offset": [
          2081,
          2279
        ],
        "op": "POP",
        "path": "20"
      },
      "2503": {
        "fn": "Ownable.transferOwnership",
        "jump": "o",
        "offset": [
          2081,
          2279
        ],
        "op": "JUMP",
        "path": "20"
      },
      "2504": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1359,
          1489
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "2505": {
        "fn": "Ownable.owner",
        "offset": [
          1247,
          1254
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "2507": {
        "fn": "Ownable.owner",
        "offset": [
          1273,
          1279
        ],
        "op": "SLOAD",
        "path": "20"
      },
      "2508": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2510": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2512": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2514": {
        "op": "SHL"
      },
      "2515": {
        "op": "SUB"
      },
      "2516": {
        "fn": "Ownable.owner",
        "offset": [
          1273,
          1279
        ],
        "op": "AND",
        "path": "20"
      },
      "2517": {
        "fn": "Context._msgSender",
        "offset": [
          719,
          729
        ],
        "op": "CALLER",
        "path": "24",
        "statement": 18
      },
      "2518": {
        "branch": 31,
        "fn": "Ownable._checkOwner",
        "offset": [
          1422,
          1445
        ],
        "op": "EQ",
        "path": "20",
        "statement": 19
      },
      "2519": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x5C2"
      },
      "2522": {
        "branch": 31,
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "JUMPI",
        "path": "20"
      },
      "2523": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x40"
      },
      "2525": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "MLOAD",
        "path": "20"
      },
      "2526": {
        "op": "PUSH3",
        "value": "0x461BCD"
      },
      "2530": {
        "op": "PUSH1",
        "value": "0xE5"
      },
      "2532": {
        "op": "SHL"
      },
      "2533": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "DUP2",
        "path": "20"
      },
      "2534": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "MSTORE",
        "path": "20"
      },
      "2535": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2537": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x4"
      },
      "2539": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "DUP3",
        "path": "20"
      },
      "2540": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "ADD",
        "path": "20"
      },
      "2541": {
        "op": "DUP2"
      },
      "2542": {
        "op": "SWAP1"
      },
      "2543": {
        "op": "MSTORE"
      },
      "2544": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "2546": {
        "op": "DUP3"
      },
      "2547": {
        "op": "ADD"
      },
      "2548": {
        "op": "MSTORE"
      },
      "2549": {
        "op": "PUSH32",
        "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
      },
      "2582": {
        "op": "PUSH1",
        "value": "0x44"
      },
      "2584": {
        "op": "DUP3"
      },
      "2585": {
        "op": "ADD"
      },
      "2586": {
        "op": "MSTORE"
      },
      "2587": {
        "op": "PUSH1",
        "value": "0x64"
      },
      "2589": {
        "op": "ADD"
      },
      "2590": {
        "fn": "Ownable._checkOwner",
        "offset": [
          1414,
          1482
        ],
        "op": "PUSH2",
        "path": "20",
        "value": "0x379"
      },
      "2593": {
        "op": "JUMP"
      },
      "2594": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2433,
          2620
        ],
        "op": "JUMPDEST",
        "path": "20"
      },
      "2595": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2506,
          2522
        ],
        "op": "PUSH1",
        "path": "20",
        "value": "0x0"
      },
      "2597": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "DUP1",
        "path": "20"
      },
      "2598": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "SLOAD",
        "path": "20"
      },
      "2599": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2601": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2603": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2605": {
        "op": "SHL"
      },
      "2606": {
        "op": "SUB"
      },
      "2607": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "DUP4",
        "path": "20",
        "statement": 20
      },
      "2608": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "DUP2",
        "path": "20"
      },
      "2609": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "AND",
        "path": "20"
      },
      "2610": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2612": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2614": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2616": {
        "op": "SHL"
      },
      "2617": {
        "op": "SUB"
      },
      "2618": {
        "op": "NOT"
      },
      "2619": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "DUP4",
        "path": "20"
      },
      "2620": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "AND",
        "path": "20"
      },
      "2621": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "DUP2",
        "path": "20"
      },
      "2622": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "OR",
        "path": "20"
      },
      "2623": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "DUP5",
        "path": "20"
      },
      "2624": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2541,
          2558
        ],
        "op": "SSTORE",
        "path": "20"
      },
      "2625": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2573,
          2613
        ],
        "op": "PUSH1",
        "path": "20",
        "statement": 21,
        "value": "0x40"
      },
      "2627": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2573,
          2613
        ],
        "op": "MLOAD",
        "path": "20"
      },
      "2628": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "SWAP2",
        "path": "20"
      },
      "2629": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "2630": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "SWAP3",
        "path": "20"
      },
      "2631": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "AND",
        "path": "20"
      },
      "2632": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "SWAP3",
        "path": "20"
      },
      "2633": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "DUP4",
        "path": "20"
      },
      "2634": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2525,
          2531
        ],
        "op": "SWAP2",
        "path": "20"
      },
      "2635": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2573,
          2613
        ],
        "op": "PUSH32",
        "path": "20",
        "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
      },
      "2668": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2573,
          2613
        ],
        "op": "SWAP2",
        "path": "20"
      },
      "2669": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2506,
          2522
        ],
        "op": "SWAP1",
        "path": "20"
      },
      "2670": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2573,
          2613
        ],
        "op": "LOG3",
        "path": "20"
      },
      "2671": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2496,
          2620
        ],
        "op": "POP",
        "path": "20"
      },
      "2672": {
        "fn": "Ownable._transferOwnership",
        "offset": [
          2433,
          2620
        ],
        "op": "POP",
        "path": "20"
      },
      "2673": {
        "fn": "Ownable._transferOwnership",
        "jump": "o",
        "offset": [
          2433,
          2620
        ],
        "op": "JUMP",
        "path": "20"
      },
      "2674": {
        "op": "JUMPDEST"
      },
      "2675": {
        "op": "DUP1"
      },
      "2676": {
        "op": "CALLDATALOAD"
      },
      "2677": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2679": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2681": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2683": {
        "op": "SHL"
      },
      "2684": {
        "op": "SUB"
      },
      "2685": {
        "op": "DUP2"
      },
      "2686": {
        "op": "AND"
      },
      "2687": {
        "op": "DUP2"
      },
      "2688": {
        "op": "EQ"
      },
      "2689": {
        "op": "PUSH2",
        "value": "0xA89"
      },
      "2692": {
        "op": "JUMPI"
      },
      "2693": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2695": {
        "op": "DUP1"
      },
      "2696": {
        "op": "REVERT"
      },
      "2697": {
        "op": "JUMPDEST"
      },
      "2698": {
        "op": "SWAP2"
      },
      "2699": {
        "op": "SWAP1"
      },
      "2700": {
        "op": "POP"
      },
      "2701": {
        "jump": "o",
        "op": "JUMP"
      },
      "2702": {
        "op": "JUMPDEST"
      },
      "2703": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2705": {
        "op": "DUP1"
      },
      "2706": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2708": {
        "op": "DUP1"
      },
      "2709": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "2711": {
        "op": "DUP6"
      },
      "2712": {
        "op": "DUP8"
      },
      "2713": {
        "op": "SUB"
      },
      "2714": {
        "op": "SLT"
      },
      "2715": {
        "op": "ISZERO"
      },
      "2716": {
        "op": "PUSH2",
        "value": "0xAA4"
      },
      "2719": {
        "op": "JUMPI"
      },
      "2720": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2722": {
        "op": "DUP1"
      },
      "2723": {
        "op": "REVERT"
      },
      "2724": {
        "op": "JUMPDEST"
      },
      "2725": {
        "op": "PUSH2",
        "value": "0xAAD"
      },
      "2728": {
        "op": "DUP6"
      },
      "2729": {
        "op": "PUSH2",
        "value": "0xA72"
      },
      "2732": {
        "jump": "i",
        "op": "JUMP"
      },
      "2733": {
        "op": "JUMPDEST"
      },
      "2734": {
        "op": "SWAP4"
      },
      "2735": {
        "op": "POP"
      },
      "2736": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2738": {
        "op": "DUP6"
      },
      "2739": {
        "op": "ADD"
      },
      "2740": {
        "op": "CALLDATALOAD"
      },
      "2741": {
        "op": "SWAP3"
      },
      "2742": {
        "op": "POP"
      },
      "2743": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2745": {
        "op": "DUP6"
      },
      "2746": {
        "op": "ADD"
      },
      "2747": {
        "op": "CALLDATALOAD"
      },
      "2748": {
        "op": "SWAP2"
      },
      "2749": {
        "op": "POP"
      },
      "2750": {
        "op": "PUSH2",
        "value": "0xAC9"
      },
      "2753": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "2755": {
        "op": "DUP7"
      },
      "2756": {
        "op": "ADD"
      },
      "2757": {
        "op": "PUSH2",
        "value": "0xA72"
      },
      "2760": {
        "jump": "i",
        "op": "JUMP"
      },
      "2761": {
        "op": "JUMPDEST"
      },
      "2762": {
        "op": "SWAP1"
      },
      "2763": {
        "op": "POP"
      },
      "2764": {
        "op": "SWAP3"
      },
      "2765": {
        "op": "SWAP6"
      },
      "2766": {
        "op": "SWAP2"
      },
      "2767": {
        "op": "SWAP5"
      },
      "2768": {
        "op": "POP"
      },
      "2769": {
        "op": "SWAP3"
      },
      "2770": {
        "op": "POP"
      },
      "2771": {
        "jump": "o",
        "op": "JUMP"
      },
      "2772": {
        "op": "JUMPDEST"
      },
      "2773": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2775": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2777": {
        "op": "DUP1"
      },
      "2778": {
        "op": "DUP4"
      },
      "2779": {
        "op": "MSTORE"
      },
      "2780": {
        "op": "DUP4"
      },
      "2781": {
        "op": "MLOAD"
      },
      "2782": {
        "op": "DUP1"
      },
      "2783": {
        "op": "DUP3"
      },
      "2784": {
        "op": "DUP6"
      },
      "2785": {
        "op": "ADD"
      },
      "2786": {
        "op": "MSTORE"
      },
      "2787": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2789": {
        "op": "JUMPDEST"
      },
      "2790": {
        "op": "DUP2"
      },
      "2791": {
        "op": "DUP2"
      },
      "2792": {
        "op": "LT"
      },
      "2793": {
        "op": "ISZERO"
      },
      "2794": {
        "op": "PUSH2",
        "value": "0xB01"
      },
      "2797": {
        "op": "JUMPI"
      },
      "2798": {
        "op": "DUP6"
      },
      "2799": {
        "op": "DUP2"
      },
      "2800": {
        "op": "ADD"
      },
      "2801": {
        "op": "DUP4"
      },
      "2802": {
        "op": "ADD"
      },
      "2803": {
        "op": "MLOAD"
      },
      "2804": {
        "op": "DUP6"
      },
      "2805": {
        "op": "DUP3"
      },
      "2806": {
        "op": "ADD"
      },
      "2807": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2809": {
        "op": "ADD"
      },
      "2810": {
        "op": "MSTORE"
      },
      "2811": {
        "op": "DUP3"
      },
      "2812": {
        "op": "ADD"
      },
      "2813": {
        "op": "PUSH2",
        "value": "0xAE5"
      },
      "2816": {
        "op": "JUMP"
      },
      "2817": {
        "op": "JUMPDEST"
      },
      "2818": {
        "op": "POP"
      },
      "2819": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2821": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2823": {
        "op": "DUP3"
      },
      "2824": {
        "op": "DUP7"
      },
      "2825": {
        "op": "ADD"
      },
      "2826": {
        "op": "ADD"
      },
      "2827": {
        "op": "MSTORE"
      },
      "2828": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2830": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2832": {
        "op": "NOT"
      },
      "2833": {
        "op": "PUSH1",
        "value": "0x1F"
      },
      "2835": {
        "op": "DUP4"
      },
      "2836": {
        "op": "ADD"
      },
      "2837": {
        "op": "AND"
      },
      "2838": {
        "op": "DUP6"
      },
      "2839": {
        "op": "ADD"
      },
      "2840": {
        "op": "ADD"
      },
      "2841": {
        "op": "SWAP3"
      },
      "2842": {
        "op": "POP"
      },
      "2843": {
        "op": "POP"
      },
      "2844": {
        "op": "POP"
      },
      "2845": {
        "op": "SWAP3"
      },
      "2846": {
        "op": "SWAP2"
      },
      "2847": {
        "op": "POP"
      },
      "2848": {
        "op": "POP"
      },
      "2849": {
        "jump": "o",
        "op": "JUMP"
      },
      "2850": {
        "op": "JUMPDEST"
      },
      "2851": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2853": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2855": {
        "op": "DUP3"
      },
      "2856": {
        "op": "DUP5"
      },
      "2857": {
        "op": "SUB"
      },
      "2858": {
        "op": "SLT"
      },
      "2859": {
        "op": "ISZERO"
      },
      "2860": {
        "op": "PUSH2",
        "value": "0xB34"
      },
      "2863": {
        "op": "JUMPI"
      },
      "2864": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2866": {
        "op": "DUP1"
      },
      "2867": {
        "op": "REVERT"
      },
      "2868": {
        "op": "JUMPDEST"
      },
      "2869": {
        "op": "PUSH2",
        "value": "0xB3D"
      },
      "2872": {
        "op": "DUP3"
      },
      "2873": {
        "op": "PUSH2",
        "value": "0xA72"
      },
      "2876": {
        "jump": "i",
        "op": "JUMP"
      },
      "2877": {
        "op": "JUMPDEST"
      },
      "2878": {
        "op": "SWAP4"
      },
      "2879": {
        "op": "SWAP3"
      },
      "2880": {
        "op": "POP"
      },
      "2881": {
        "op": "POP"
      },
      "2882": {
        "op": "POP"
      },
      "2883": {
        "jump": "o",
        "op": "JUMP"
      },
      "2884": {
        "op": "JUMPDEST"
      },
      "2885": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2887": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2889": {
        "op": "DUP3"
      },
      "2890": {
        "op": "DUP5"
      },
      "2891": {
        "op": "SUB"
      },
      "2892": {
        "op": "SLT"
      },
      "2893": {
        "op": "ISZERO"
      },
      "2894": {
        "op": "PUSH2",
        "value": "0xB56"
      },
      "2897": {
        "op": "JUMPI"
      },
      "2898": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2900": {
        "op": "DUP1"
      },
      "2901": {
        "op": "REVERT"
      },
      "2902": {
        "op": "JUMPDEST"
      },
      "2903": {
        "op": "POP"
      },
      "2904": {
        "op": "MLOAD"
      },
      "2905": {
        "op": "SWAP2"
      },
      "2906": {
        "op": "SWAP1"
      },
      "2907": {
        "op": "POP"
      },
      "2908": {
        "jump": "o",
        "op": "JUMP"
      },
      "2909": {
        "op": "JUMPDEST"
      },
      "2910": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2912": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2914": {
        "op": "DUP3"
      },
      "2915": {
        "op": "DUP5"
      },
      "2916": {
        "op": "SUB"
      },
      "2917": {
        "op": "SLT"
      },
      "2918": {
        "op": "ISZERO"
      },
      "2919": {
        "op": "PUSH2",
        "value": "0xB6F"
      },
      "2922": {
        "op": "JUMPI"
      },
      "2923": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2925": {
        "op": "DUP1"
      },
      "2926": {
        "op": "REVERT"
      },
      "2927": {
        "op": "JUMPDEST"
      },
      "2928": {
        "op": "DUP2"
      },
      "2929": {
        "op": "MLOAD"
      },
      "2930": {
        "op": "DUP1"
      },
      "2931": {
        "op": "ISZERO"
      },
      "2932": {
        "op": "ISZERO"
      },
      "2933": {
        "op": "DUP2"
      },
      "2934": {
        "op": "EQ"
      },
      "2935": {
        "op": "PUSH2",
        "value": "0xB3D"
      },
      "2938": {
        "op": "JUMPI"
      },
      "2939": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "2941": {
        "op": "DUP1"
      },
      "2942": {
        "op": "REVERT"
      },
      "2943": {
        "op": "JUMPDEST"
      },
      "2944": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2946": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "2948": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2950": {
        "op": "SHL"
      },
      "2951": {
        "op": "SUB"
      },
      "2952": {
        "op": "SWAP8"
      },
      "2953": {
        "op": "DUP9"
      },
      "2954": {
        "op": "AND"
      },
      "2955": {
        "op": "DUP2"
      },
      "2956": {
        "op": "MSTORE"
      },
      "2957": {
        "op": "SWAP6"
      },
      "2958": {
        "op": "DUP8"
      },
      "2959": {
        "op": "AND"
      },
      "2960": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "2962": {
        "op": "DUP8"
      },
      "2963": {
        "op": "ADD"
      },
      "2964": {
        "op": "MSTORE"
      },
      "2965": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "2967": {
        "op": "DUP7"
      },
      "2968": {
        "op": "ADD"
      },
      "2969": {
        "op": "SWAP5"
      },
      "2970": {
        "op": "SWAP1"
      },
      "2971": {
        "op": "SWAP5"
      },
      "2972": {
        "op": "MSTORE"
      },
      "2973": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "2975": {
        "op": "DUP6"
      },
      "2976": {
        "op": "ADD"
      },
      "2977": {
        "op": "SWAP3"
      },
      "2978": {
        "op": "SWAP1"
      },
      "2979": {
        "op": "SWAP3"
      },
      "2980": {
        "op": "MSTORE"
      },
      "2981": {
        "op": "DUP5"
      },
      "2982": {
        "op": "AND"
      },
      "2983": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "2985": {
        "op": "DUP5"
      },
      "2986": {
        "op": "ADD"
      },
      "2987": {
        "op": "MSTORE"
      },
      "2988": {
        "op": "SWAP1"
      },
      "2989": {
        "op": "SWAP3"
      },
      "2990": {
        "op": "AND"
      },
      "2991": {
        "op": "PUSH1",
        "value": "0xA0"
      },
      "2993": {
        "op": "DUP3"
      },
      "2994": {
        "op": "ADD"
      },
      "2995": {
        "op": "MSTORE"
      },
      "2996": {
        "op": "PUSH2",
        "value": "0xFFFF"
      },
      "2999": {
        "op": "SWAP1"
      },
      "3000": {
        "op": "SWAP2"
      },
      "3001": {
        "op": "AND"
      },
      "3002": {
        "op": "PUSH1",
        "value": "0xC0"
      },
      "3004": {
        "op": "DUP3"
      },
      "3005": {
        "op": "ADD"
      },
      "3006": {
        "op": "MSTORE"
      },
      "3007": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3009": {
        "op": "ADD"
      },
      "3010": {
        "op": "SWAP1"
      },
      "3011": {
        "jump": "o",
        "op": "JUMP"
      },
      "3012": {
        "op": "JUMPDEST"
      },
      "3013": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3018": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3020": {
        "op": "SHL"
      },
      "3021": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3023": {
        "op": "MSTORE"
      },
      "3024": {
        "op": "PUSH1",
        "value": "0x11"
      },
      "3026": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3028": {
        "op": "MSTORE"
      },
      "3029": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3031": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3033": {
        "op": "REVERT"
      },
      "3034": {
        "op": "JUMPDEST"
      },
      "3035": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3037": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3039": {
        "op": "DUP3"
      },
      "3040": {
        "op": "ADD"
      },
      "3041": {
        "op": "PUSH2",
        "value": "0xBEC"
      },
      "3044": {
        "op": "JUMPI"
      },
      "3045": {
        "op": "PUSH2",
        "value": "0xBEC"
      },
      "3048": {
        "op": "PUSH2",
        "value": "0xBC4"
      },
      "3051": {
        "jump": "i",
        "op": "JUMP"
      },
      "3052": {
        "op": "JUMPDEST"
      },
      "3053": {
        "op": "POP"
      },
      "3054": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3056": {
        "op": "ADD"
      },
      "3057": {
        "op": "SWAP1"
      },
      "3058": {
        "jump": "o",
        "op": "JUMP"
      },
      "3059": {
        "op": "JUMPDEST"
      },
      "3060": {
        "op": "DUP1"
      },
      "3061": {
        "op": "DUP3"
      },
      "3062": {
        "op": "MUL"
      },
      "3063": {
        "op": "DUP2"
      },
      "3064": {
        "op": "ISZERO"
      },
      "3065": {
        "op": "DUP3"
      },
      "3066": {
        "op": "DUP3"
      },
      "3067": {
        "op": "DIV"
      },
      "3068": {
        "op": "DUP5"
      },
      "3069": {
        "op": "EQ"
      },
      "3070": {
        "op": "OR"
      },
      "3071": {
        "op": "PUSH2",
        "value": "0xC0A"
      },
      "3074": {
        "op": "JUMPI"
      },
      "3075": {
        "op": "PUSH2",
        "value": "0xC0A"
      },
      "3078": {
        "op": "PUSH2",
        "value": "0xBC4"
      },
      "3081": {
        "jump": "i",
        "op": "JUMP"
      },
      "3082": {
        "op": "JUMPDEST"
      },
      "3083": {
        "op": "SWAP3"
      },
      "3084": {
        "op": "SWAP2"
      },
      "3085": {
        "op": "POP"
      },
      "3086": {
        "op": "POP"
      },
      "3087": {
        "jump": "o",
        "op": "JUMP"
      },
      "3088": {
        "op": "JUMPDEST"
      },
      "3089": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3091": {
        "op": "DUP3"
      },
      "3092": {
        "op": "PUSH2",
        "value": "0xC2D"
      },
      "3095": {
        "op": "JUMPI"
      },
      "3096": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3101": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3103": {
        "op": "SHL"
      },
      "3104": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3106": {
        "op": "MSTORE"
      },
      "3107": {
        "op": "PUSH1",
        "value": "0x12"
      },
      "3109": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3111": {
        "op": "MSTORE"
      },
      "3112": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3114": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3116": {
        "op": "REVERT"
      },
      "3117": {
        "op": "JUMPDEST"
      },
      "3118": {
        "op": "POP"
      },
      "3119": {
        "op": "DIV"
      },
      "3120": {
        "op": "SWAP1"
      },
      "3121": {
        "jump": "o",
        "op": "JUMP"
      },
      "3122": {
        "op": "JUMPDEST"
      },
      "3123": {
        "op": "DUP2"
      },
      "3124": {
        "op": "DUP2"
      },
      "3125": {
        "op": "SUB"
      },
      "3126": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3128": {
        "op": "DUP4"
      },
      "3129": {
        "op": "SLT"
      },
      "3130": {
        "op": "DUP1"
      },
      "3131": {
        "op": "ISZERO"
      },
      "3132": {
        "op": "DUP4"
      },
      "3133": {
        "op": "DUP4"
      },
      "3134": {
        "op": "SGT"
      },
      "3135": {
        "op": "AND"
      },
      "3136": {
        "op": "DUP4"
      },
      "3137": {
        "op": "DUP4"
      },
      "3138": {
        "op": "SLT"
      },
      "3139": {
        "op": "DUP3"
      },
      "3140": {
        "op": "AND"
      },
      "3141": {
        "op": "OR"
      },
      "3142": {
        "op": "ISZERO"
      },
      "3143": {
        "op": "PUSH2",
        "value": "0xC52"
      },
      "3146": {
        "op": "JUMPI"
      },
      "3147": {
        "op": "PUSH2",
        "value": "0xC52"
      },
      "3150": {
        "op": "PUSH2",
        "value": "0xBC4"
      },
      "3153": {
        "jump": "i",
        "op": "JUMP"
      },
      "3154": {
        "op": "JUMPDEST"
      },
      "3155": {
        "op": "POP"
      },
      "3156": {
        "op": "SWAP3"
      },
      "3157": {
        "op": "SWAP2"
      },
      "3158": {
        "op": "POP"
      },
      "3159": {
        "op": "POP"
      },
      "3160": {
        "jump": "o",
        "op": "JUMP"
      },
      "3161": {
        "op": "JUMPDEST"
      },
      "3162": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3164": {
        "op": "DUP2"
      },
      "3165": {
        "op": "DUP2"
      },
      "3166": {
        "op": "SHR"
      },
      "3167": {
        "op": "SWAP1"
      },
      "3168": {
        "op": "DUP3"
      },
      "3169": {
        "op": "AND"
      },
      "3170": {
        "op": "DUP1"
      },
      "3171": {
        "op": "PUSH2",
        "value": "0xC6D"
      },
      "3174": {
        "op": "JUMPI"
      },
      "3175": {
        "op": "PUSH1",
        "value": "0x7F"
      },
      "3177": {
        "op": "DUP3"
      },
      "3178": {
        "op": "AND"
      },
      "3179": {
        "op": "SWAP2"
      },
      "3180": {
        "op": "POP"
      },
      "3181": {
        "op": "JUMPDEST"
      },
      "3182": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3184": {
        "op": "DUP3"
      },
      "3185": {
        "op": "LT"
      },
      "3186": {
        "op": "DUP2"
      },
      "3187": {
        "op": "SUB"
      },
      "3188": {
        "op": "PUSH2",
        "value": "0xC8D"
      },
      "3191": {
        "op": "JUMPI"
      },
      "3192": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3197": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3199": {
        "op": "SHL"
      },
      "3200": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3202": {
        "op": "MSTORE"
      },
      "3203": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "3205": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3207": {
        "op": "MSTORE"
      },
      "3208": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3210": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3212": {
        "op": "REVERT"
      },
      "3213": {
        "op": "JUMPDEST"
      },
      "3214": {
        "op": "POP"
      },
      "3215": {
        "op": "SWAP2"
      },
      "3216": {
        "op": "SWAP1"
      },
      "3217": {
        "op": "POP"
      },
      "3218": {
        "jump": "o",
        "op": "JUMP"
      },
      "3219": {
        "op": "JUMPDEST"
      },
      "3220": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "3222": {
        "op": "DUP2"
      },
      "3223": {
        "op": "MSTORE"
      },
      "3224": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3226": {
        "op": "DUP1"
      },
      "3227": {
        "op": "DUP6"
      },
      "3228": {
        "op": "SLOAD"
      },
      "3229": {
        "op": "DUP2"
      },
      "3230": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3232": {
        "op": "DUP3"
      },
      "3233": {
        "op": "DUP2"
      },
      "3234": {
        "op": "SHR"
      },
      "3235": {
        "op": "SWAP2"
      },
      "3236": {
        "op": "POP"
      },
      "3237": {
        "op": "DUP1"
      },
      "3238": {
        "op": "DUP4"
      },
      "3239": {
        "op": "AND"
      },
      "3240": {
        "op": "DUP1"
      },
      "3241": {
        "op": "PUSH2",
        "value": "0xCB3"
      },
      "3244": {
        "op": "JUMPI"
      },
      "3245": {
        "op": "PUSH1",
        "value": "0x7F"
      },
      "3247": {
        "op": "DUP4"
      },
      "3248": {
        "op": "AND"
      },
      "3249": {
        "op": "SWAP3"
      },
      "3250": {
        "op": "POP"
      },
      "3251": {
        "op": "JUMPDEST"
      },
      "3252": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3254": {
        "op": "DUP1"
      },
      "3255": {
        "op": "DUP5"
      },
      "3256": {
        "op": "LT"
      },
      "3257": {
        "op": "DUP3"
      },
      "3258": {
        "op": "SUB"
      },
      "3259": {
        "op": "PUSH2",
        "value": "0xCD2"
      },
      "3262": {
        "op": "JUMPI"
      },
      "3263": {
        "op": "PUSH4",
        "value": "0x4E487B71"
      },
      "3268": {
        "op": "PUSH1",
        "value": "0xE0"
      },
      "3270": {
        "op": "SHL"
      },
      "3271": {
        "op": "DUP7"
      },
      "3272": {
        "op": "MSTORE"
      },
      "3273": {
        "op": "PUSH1",
        "value": "0x22"
      },
      "3275": {
        "op": "PUSH1",
        "value": "0x4"
      },
      "3277": {
        "op": "MSTORE"
      },
      "3278": {
        "op": "PUSH1",
        "value": "0x24"
      },
      "3280": {
        "op": "DUP7"
      },
      "3281": {
        "op": "REVERT"
      },
      "3282": {
        "op": "JUMPDEST"
      },
      "3283": {
        "op": "PUSH1",
        "value": "0x60"
      },
      "3285": {
        "op": "DUP9"
      },
      "3286": {
        "op": "ADD"
      },
      "3287": {
        "op": "DUP5"
      },
      "3288": {
        "op": "SWAP1"
      },
      "3289": {
        "op": "MSTORE"
      },
      "3290": {
        "op": "PUSH1",
        "value": "0x80"
      },
      "3292": {
        "op": "DUP9"
      },
      "3293": {
        "op": "ADD"
      },
      "3294": {
        "op": "DUP3"
      },
      "3295": {
        "op": "DUP1"
      },
      "3296": {
        "op": "ISZERO"
      },
      "3297": {
        "op": "PUSH2",
        "value": "0xCF1"
      },
      "3300": {
        "op": "JUMPI"
      },
      "3301": {
        "op": "PUSH1",
        "value": "0x1"
      },
      "3303": {
        "op": "DUP2"
      },
      "3304": {
        "op": "EQ"
      },
      "3305": {
        "op": "PUSH2",
        "value": "0xD07"
      },
      "3308": {
        "op": "JUMPI"
      },
      "3309": {
        "op": "PUSH2",
        "value": "0xD32"
      },
      "3312": {
        "op": "JUMP"
      },
      "3313": {
        "op": "JUMPDEST"
      },
      "3314": {
        "op": "PUSH1",
        "value": "0xFF"
      },
      "3316": {
        "op": "NOT"
      },
      "3317": {
        "op": "DUP8"
      },
      "3318": {
        "op": "AND"
      },
      "3319": {
        "op": "DUP3"
      },
      "3320": {
        "op": "MSTORE"
      },
      "3321": {
        "op": "DUP6"
      },
      "3322": {
        "op": "ISZERO"
      },
      "3323": {
        "op": "ISZERO"
      },
      "3324": {
        "op": "PUSH1",
        "value": "0x5"
      },
      "3326": {
        "op": "SHL"
      },
      "3327": {
        "op": "DUP3"
      },
      "3328": {
        "op": "ADD"
      },
      "3329": {
        "op": "SWAP8"
      },
      "3330": {
        "op": "POP"
      },
      "3331": {
        "op": "PUSH2",
        "value": "0xD32"
      },
      "3334": {
        "op": "JUMP"
      },
      "3335": {
        "op": "JUMPDEST"
      },
      "3336": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3338": {
        "op": "DUP14"
      },
      "3339": {
        "op": "DUP2"
      },
      "3340": {
        "op": "MSTORE"
      },
      "3341": {
        "op": "PUSH1",
        "value": "0x20"
      },
      "3343": {
        "op": "SWAP1"
      },
      "3344": {
        "op": "KECCAK256"
      },
      "3345": {
        "op": "PUSH1",
        "value": "0x0"
      },
      "3347": {
        "op": "JUMPDEST"
      },
      "3348": {
        "op": "DUP8"
      },
      "3349": {
        "op": "DUP2"
      },
      "3350": {
        "op": "LT"
      },
      "3351": {
        "op": "ISZERO"
      },
      "3352": {
        "op": "PUSH2",
        "value": "0xD2C"
      },
      "3355": {
        "op": "JUMPI"
      },
      "3356": {
        "op": "DUP2"
      },
      "3357": {
        "op": "SLOAD"
      },
      "3358": {
        "op": "DUP5"
      },
      "3359": {
        "op": "DUP3"
      },
      "3360": {
        "op": "ADD"
      },
      "3361": {
        "op": "MSTORE"
      },
      "3362": {
        "op": "SWAP1"
      },
      "3363": {
        "op": "DUP7"
      },
      "3364": {
        "op": "ADD"
      },
      "3365": {
        "op": "SWAP1"
      },
      "3366": {
        "op": "DUP5"
      },
      "3367": {
        "op": "ADD"
      },
      "3368": {
        "op": "PUSH2",
        "value": "0xD13"
      },
      "3371": {
        "op": "JUMP"
      },
      "3372": {
        "op": "JUMPDEST"
      },
      "3373": {
        "op": "DUP4"
      },
      "3374": {
        "op": "ADD"
      },
      "3375": {
        "op": "SWAP9"
      },
      "3376": {
        "op": "POP"
      },
      "3377": {
        "op": "POP"
      },
      "3378": {
        "op": "JUMPDEST"
      },
      "3379": {
        "op": "POP"
      },
      "3380": {
        "op": "POP"
      },
      "3381": {
        "op": "DUP8"
      },
      "3382": {
        "op": "ADD"
      },
      "3383": {
        "op": "SWAP9"
      },
      "3384": {
        "op": "SWAP1"
      },
      "3385": {
        "op": "SWAP9"
      },
      "3386": {
        "op": "MSTORE"
      },
      "3387": {
        "op": "POP"
      },
      "3388": {
        "op": "POP"
      },
      "3389": {
        "op": "POP"
      },
      "3390": {
        "op": "PUSH1",
        "value": "0x40"
      },
      "3392": {
        "op": "SWAP1"
      },
      "3393": {
        "op": "SWAP3"
      },
      "3394": {
        "op": "ADD"
      },
      "3395": {
        "op": "SWAP3"
      },
      "3396": {
        "op": "SWAP1"
      },
      "3397": {
        "op": "SWAP3"
      },
      "3398": {
        "op": "MSTORE"
      },
      "3399": {
        "op": "SWAP4"
      },
      "3400": {
        "op": "SWAP3"
      },
      "3401": {
        "op": "POP"
      },
      "3402": {
        "op": "POP"
      },
      "3403": {
        "op": "POP"
      },
      "3404": {
        "jump": "o",
        "op": "JUMP"
      }
    },
    "sha1": "83b5c5e35fc1bd1d3c750e3f54a2bad19adc4694",
    "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./PriceFeedOracle.sol\";\nimport \"./TwapVwapAdapter.sol\";\n\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Tulip is Ownable {\n\n    // The ERC20 token to buy / sell for ETH.\n    IERC20 baseToken;\n    // From https://docs.chain.link/data-feeds/price-feeds/addresses.\n    PriceFeedOracle public priceFeedOracle;\n    // The contract that communicates with coingecko API through chainlink node and our external adapter.\n    TwapVwapAdapter public twapVwapOracle;\n    string public baseTokenSymbol;\n    //uint16 public swapPeriodInSecs;\n    //uint8 public swapRandomizationInSecs;\n    //uint256 public feesAsPct;\n    uint8 public priceMode;\n    // The numerical ID of unique swap pair, e.g. wBTC/ETH.\n    uint16 public pairID;\n    // The ID of the current swap, is incremented after the swap is done.\n    uint256 public currentSwapID;\n    // The ID of the current order, is incremented after the order is submitted.\n    uint256 public currentOrderID;\n    // Store the ID of orders from the current swap.\n    uint256[] ordersID;\n\n    // .\n    event newBuyOrder(\n        uint256 indexed swapID,\n        uint256 indexed orderID,\n        address baseToken,\n        address quoteToken,\n        uint256 amount,\n        uint256 limitPrice,\n        address depositAddress,\n        address senderAddress,\n        uint16 pairID\n\n    );\n    event newSellOrder(\n        uint256 indexed swapID,\n        uint256 indexed orderID,\n        address baseToken,\n        address quoteToken,\n        uint256 amount,\n        uint256 limitPrice,\n        address depositAddress,\n        address senderAddress,\n        uint16 pairID\n    );\n\n    event buyOrderDone();\n    event sellOrderDone();\n\n\n    /// @param _baseToken: a token to swap (e.g., wBTC, ADA)\n    /// @param _baseTokenSymbol: base token symbol to use with twap/vwap API\n    /// @param _pairID: The numerical ID of unique swap pair, e.g. wBTC/ETH.\n    /// @param _priceMode: 1 for chainlink price feed, 2 for twap, 3 for vwap\n    /// @param _priceFeedOracle: contract providing the price for the _baseToken from chainlink price feed\n    /// @param _twapVwapOracle: contract providing the price for the _baseToken from our twap/vwap external adapter\n    constructor(\n        address _baseToken,\n        string memory _baseTokenSymbol,\n        uint16 _pairID,\n        uint8 _priceMode,\n        address _priceFeedOracle,\n        address _twapVwapOracle\n    ) {\n        baseTokenSymbol = _baseTokenSymbol;\n        priceMode = _priceMode;\n        pairID = _pairID;\n        // Deploy new price feed client contract.\n        priceFeedOracle = new PriceFeedOracle(_priceFeedOracle);\n        // Get the deployed contract of TwapVwap adapter.\n        twapVwapOracle = TwapVwapAdapter(_twapVwapOracle);\n        baseToken = IERC20(_baseToken);\n    }\n\n    /// @notice Create an order to buy the tokens for ETH\n    /// @param _baseToken: the base ERC20 token\n    /// @param _quantity: amount of token to buy with 18 decimals, e.g. 1 * 10**18 for 1 token\n    /// @param _limitPrice: the max price for one token in WEI\n    /// @param _depositAddress: the address to send the tokens after the order is completed\n    function buyOrder(\n        address _baseToken,\n        uint256 _quantity,\n        uint256 _limitPrice,\n        address _depositAddress\n    ) external payable returns (uint256) {\n        require(_baseToken == address(baseToken));\n        uint256 fullPrice = (_quantity * _limitPrice) / 10 ** 18;\n        require(\n            msg.value >= fullPrice,\n            \"Value should cover the full price of requested amount of tokens\"\n        );\n        emit newBuyOrder(\n            currentSwapID,\n            currentOrderID,\n            _baseToken,\n            address(0x0),\n            _quantity,\n            _limitPrice,\n            _depositAddress,\n            msg.sender,\n            pairID\n        );\n        ordersID.push(currentOrderID);\n        // Return the value and increment it after.\n        return currentOrderID++;\n    }\n\n    /// @notice Create an order to sell the tokens for ETH.\n    /// @param _baseToken: amount of token to sell\n    /// @param _quantity: amount of token to sell with 18 decimals, e.g. 1 * 10**18 for 1 token\n    /// @param _limitPrice: the upper price for one token in WEI\n    /// @param _depositAddress: the address to send the ETH after the order is completed\n    function sellOrder(\n        address _baseToken,\n        uint256 _quantity,\n        uint256 _limitPrice,\n        address _depositAddress\n    ) external payable returns (uint256) {\n        require(_baseToken == address(baseToken));\n        // NOTE: User needs to approve the smart contract to spend their tokens.\n        uint256 allowance = baseToken.allowance(msg.sender, address(this));\n        require(allowance >= _quantity, \"Check the token allowance\");\n        // Receive tokens.\n        baseToken.transferFrom(msg.sender, address(this), _quantity);\n        emit newSellOrder(\n            currentSwapID,\n            currentOrderID,\n            _baseToken,\n            address(0x0),\n            _quantity,\n            _limitPrice,\n            _depositAddress,\n            msg.sender,\n            pairID\n        );\n        ordersID.push(currentOrderID);\n        // Return the value and increment it after.\n        return currentOrderID++;\n    }\n\n\n    function runSwap() public returns (uint256) {\n        return currentSwapID++;\n    }\n\n    /// @notice Get token price from the Chainlink price feed or TwapVwap adapter. \n    function getPrice() public returns (uint256) {\n        uint256 uintPrice;\n        int256 currentTimestamp = int(block.timestamp);\n        // Get the timestamp of one week before.\n        int256 startTimestamp = currentTimestamp - 604800;\n        if (priceMode == 1) {\n            // Get the price from chainlink price feed.\n            int256 price = priceFeedOracle.getLatestPrice();\n            uintPrice = uint(price);\n        } else if (priceMode == 2) {\n            // Get twap price from coingecko API.\n            bytes32 requestId = twapVwapOracle.requestTwap(baseTokenSymbol, startTimestamp, currentTimestamp);\n            uintPrice = twapVwapOracle.getResult(requestId);\n        } else if (priceMode == 3) {\n            // Get VWAP price from coingecko API.\n            bytes32 requestId = twapVwapOracle.requestVwap(baseTokenSymbol, startTimestamp, currentTimestamp);\n            uintPrice = twapVwapOracle.getResult(requestId);\n        }\n        require(uintPrice > 0, \"Price should be more than zero\");\n        return uintPrice;\n\n    }\n\n    function eraseOrders() internal onlyOwner {\n        // Remove orders from the previous swap.\n        delete ordersID;\n        // Create new orders array.\n        uint256[] storage ordersID;\n    }\n\n\n}",
    "sourceMap": "265:6606:6:-:0;;;2351:584;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:20;719:10:24;936:18:20;:32::i;:::-;2564:15:6;:34;2582:16;2564:15;:34;:::i;:::-;-1:-1:-1;2608:9:6;:22;;2640:16;;;2608:22;2640:16;-1:-1:-1;;2640:16:6;;;2608:22;;;2640:16;;;;2734:37;;2754:16;;2734:37;;;:::i;:::-;-1:-1:-1;;;;;4883:32:25;;;4865:51;;4853:2;4838:18;2734:37:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2716:15:6;:55;;-1:-1:-1;;;;;;2716:55:6;;;-1:-1:-1;;;;;2716:55:6;;;;;;;2839:14;:49;;;;;;;;;;;;;;-1:-1:-1;2898:30:6;;;;;;;;;;;;;;-1:-1:-1;265:6606:6;;-1:-1:-1;;;265:6606:6;2433:187:20;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:20;;;-1:-1:-1;;;;;;2541:17:20;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;265:6606:6:-;;;;;;;;:::o;14:177:25:-;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:163;406:13;;459:6;448:18;;438:29;;428:57;;481:1;478;471:12;496:160;573:13;;626:4;615:16;;605:27;;595:55;;646:1;643;636:12;661:1464;783:6;791;799;807;815;823;876:3;864:9;855:7;851:23;847:33;844:53;;;893:1;890;883:12;844:53;916:40;946:9;916:40;:::i;:::-;975:2;1006:18;;;1000:25;906:50;;-1:-1:-1;975:2:25;-1:-1:-1;;;;;1074:14:25;;;1071:34;;;1101:1;1098;1091:12;1071:34;1139:6;1128:9;1124:22;1114:32;;1184:7;1177:4;1173:2;1169:13;1165:27;1155:55;;1206:1;1203;1196:12;1155:55;1235:2;1229:9;1257:2;1253;1250:10;1247:36;;;1263:18;;:::i;:::-;1338:2;1332:9;1306:2;1392:13;;-1:-1:-1;;1388:22:25;;;1412:2;1384:31;1380:40;1368:53;;;1436:18;;;1456:22;;;1433:46;1430:72;;;1482:18;;:::i;:::-;1522:10;1518:2;1511:22;1557:2;1549:6;1542:18;1597:7;1592:2;1587;1583;1579:11;1575:20;1572:33;1569:53;;;1618:1;1615;1608:12;1569:53;1640:1;1631:10;;1650:129;1664:2;1661:1;1658:9;1650:129;;;1752:10;;;1748:19;;1742:26;1721:14;;;1717:23;;1710:59;1675:10;;;;1650:129;;;1821:1;1816:2;1811;1803:6;1799:15;1795:24;1788:35;1842:6;1832:16;;;;;;;;1867:48;1911:2;1900:9;1896:18;1867:48;:::i;:::-;1857:58;;1934:47;1977:2;1966:9;1962:18;1934:47;:::i;:::-;1924:57;;2000:50;2045:3;2034:9;2030:19;2000:50;:::i;:::-;1990:60;;2069:50;2114:3;2103:9;2099:19;2069:50;:::i;:::-;2059:60;;661:1464;;;;;;;;:::o;2130:380::-;2209:1;2205:12;;;;2252;;;2273:61;;2327:4;2319:6;2315:17;2305:27;;2273:61;2380:2;2372:6;2369:14;2349:18;2346:38;2343:161;;2426:10;2421:3;2417:20;2414:1;2407:31;2461:4;2458:1;2451:15;2489:4;2486:1;2479:15;2343:161;;2130:380;;;:::o;2641:545::-;2743:2;2738:3;2735:11;2732:448;;;2779:1;2804:5;2800:2;2793:17;2849:4;2845:2;2835:19;2919:2;2907:10;2903:19;2900:1;2896:27;2890:4;2886:38;2955:4;2943:10;2940:20;2937:47;;;-1:-1:-1;2978:4:25;2937:47;3033:2;3028:3;3024:12;3021:1;3017:20;3011:4;3007:31;2997:41;;3088:82;3106:2;3099:5;3096:13;3088:82;;;3151:17;;;3132:1;3121:13;3088:82;;;3092:3;;;2732:448;2641:545;;;:::o;3362:1352::-;3482:10;;-1:-1:-1;;;;;3504:30:25;;3501:56;;;3537:18;;:::i;:::-;3566:97;3656:6;3616:38;3648:4;3642:11;3616:38;:::i;:::-;3610:4;3566:97;:::i;:::-;3718:4;;3782:2;3771:14;;3799:1;3794:663;;;;4501:1;4518:6;4515:89;;;-1:-1:-1;4570:19:25;;;4564:26;4515:89;-1:-1:-1;;3319:1:25;3315:11;;;3311:24;3307:29;3297:40;3343:1;3339:11;;;3294:57;4617:81;;3764:944;;3794:663;2588:1;2581:14;;;2625:4;2612:18;;-1:-1:-1;;3830:20:25;;;3948:236;3962:7;3959:1;3956:14;3948:236;;;4051:19;;;4045:26;4030:42;;4143:27;;;;4111:1;4099:14;;;;3978:19;;3948:236;;;3952:3;4212:6;4203:7;4200:19;4197:201;;;4273:19;;;4267:26;-1:-1:-1;;4356:1:25;4352:14;;;4368:3;4348:24;4344:37;4340:42;4325:58;4310:74;;4197:201;-1:-1:-1;;;;;4444:1:25;4428:14;;;4424:22;4411:36;;-1:-1:-1;3362:1352:25:o;4719:203::-;265:6606:6;;;;;;",
    "sourcePath": "contracts/Tulip.sol",
    "type": "contract"
  }
