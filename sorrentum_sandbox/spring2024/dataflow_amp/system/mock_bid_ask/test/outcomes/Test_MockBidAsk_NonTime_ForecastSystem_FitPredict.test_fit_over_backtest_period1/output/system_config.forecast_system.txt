################################################################################
system_config.forecast_system
################################################################################
dag_config:
  resample:
    in_col_groups: [('level_1.ask_price.mean',), ('level_1.bid_ask_midpoint.close',), ('level_1.bid_ask_midpoint.mean',), ('level_1.bid_price.mean',)]
    out_col_group: ()
    transformer_kwargs:
      rule: 5T
      resampling_groups: [({'level_1.ask_price.mean': 'level_1.ask_price.mean', 'level_1.bid_ask_midpoint.mean': 'level_1.bid_ask_midpoint.mean', 'level_1.bid_price.mean': 'level_1.bid_price.mean'}, 'mean', {}), ({'level_1.bid_ask_midpoint.close': 'level_1.bid_ask_midpoint.close'}, 'last', {})]
      vwap_groups: []
    reindex_like_input: False
    join_output_with_input: False
  compute_ret_0:
    in_col_groups: [('level_1.bid_ask_midpoint.close',)]
    out_col_group: ()
    transformer_kwargs:
      mode: pct_change
    col_mapping:
      level_1.bid_ask_midpoint.close: level_1.bid_ask_midpoint.close.ret_0
  compute_vol:
    in_col_groups: [('level_1.bid_ask_midpoint.close.ret_0',)]
    out_col_group: ()
    transformer_kwargs:
      tau: 32
    col_mapping:
      level_1.bid_ask_midpoint.close.ret_0: level_1.bid_ask_midpoint.close.ret_0.vol
  adjust_rets:
    in_col_groups: [('level_1.bid_ask_midpoint.close.ret_0',), ('level_1.bid_ask_midpoint.close.ret_0.vol',)]
    out_col_group: ()
    transformer_kwargs:
      term1_col: level_1.bid_ask_midpoint.close.ret_0
      term2_col: level_1.bid_ask_midpoint.close.ret_0.vol
      out_col: level_1.bid_ask_midpoint.close.ret_0.vol_adj
      term2_delay: 2
      operation: div
    drop_nans: True
dag_builder_object: nid_prefix=
dag_builder_class: MockBidAsk_DagBuilder
system_class: Cx_NonTime_ForecastSystem
backtest_config:
  universe_str: ccxt_v7_4-top2
  trading_period_str: 5T
  time_interval_str: 2024-01-01_2024-01-31
  freq_as_pd_str: M
  lookback_as_pd_str: 90D
  start_timestamp_with_lookback: 2024-01-01 00:00:00+00:00
  end_timestamp: 2024-01-31 00:00:00+00:00
market_data_config:
  im_client_ctor: <class 'im_v2.ccxt.data.client.ccxt_clients.CcxtHistoricalPqByTileClient'>
  im_client_config:
    universe_version: v7.4
    root_dir: s3://cryptokaizen-unit-test/v3
    partition_mode: by_year_month
    dataset: bid_ask
    contract_type: futures
    data_snapshot:
    aws_profile: ck
    resample_1min: False
    version: v2_0_0
    download_universe_version: v7
    tag: resampled_1min
  asset_ids: [6051632686, 8717633868]
  asset_id_col_name: asset_id
market_object: ImClientMarketData at 0x=(_asset_id_col=asset_id <str>, _asset_ids=[6051632686, 8717633868] <list>, _start_time_col_name=start_ts <str>, _end_time_col_name=end_ts <str>, _columns=None <NoneType>, _sleep_in_secs=1.0 <float>, _timezone=America/New_York <str>, _column_remap=None <NoneType>, _filter_data_mode=assert <str>, _max_iterations=120 <int>, _im_client=CcxtHistoricalPqByTileClient at 0x=(_vendor=CCXT <str>, _universe_version=v7.4 <str>, _resample_1min=False <bool>, _timestamp_col_name=timestamp <str>, _full_symbol_col_name=None <NoneType>, _asset_id_to_full_symbol_mapping={6051632686: 'binance::APE_USDT', 8717633868: 'binance::AVAX_USDT', 2540896331: 'binance::AXS_USDT', 1528092593: 'binance::BAKE_USDT', 8968126878: 'binance::BNB_USDT', 1467591036: 'binance::BTC_USDT', 5115052901: 'binance::CTK_USDT', 3065029174: 'binance::DOGE_USDT', 1891737434: 'binance::DOT_USDT', 3401245610: 'binance::DYDX_USDT', 1464553467: 'binance::ETH_USDT', 1966583502: 'binance::FTM_USDT', 1030828978: 'binance::GMT_USDT', 2601760471: 'binance::LINK_USDT', 2683705052: 'binance::MATIC_USDT', 9872743573: 'binance::NEAR_USDT', 2484635488: 'binance::OGN_USDT', 2099673105: 'binance::RUNE_USDT', 4516629366: 'binance::SAND_USDT', 2237530510: 'binance::SOL_USDT', 2425308589: 'binance::STORJ_USDT', 1776791608: 'binance::UNFI_USDT', 2384892553: 'binance::WAVES_USDT', 5118394986: 'binance::XRP_USDT'} <dict>, _root_dir=s3://cryptokaizen-unit-test/v3 <str>, _infer_exchange_id=True <bool>, _partition_mode=by_year_month <str>, _aws_profile=ck <str>, _dataset=bid_ask <str>, _contract_type=futures <str>, _data_snapshot= <str>, _download_mode=periodic_daily <str>, _downloading_entity=airflow <str>, _version=v2_0_0 <str>, _download_universe_version=v7 <str>, _tag=resampled_1min <str>, _data_format=parquet <str>) <im_v2.ccxt.data.client.ccxt_clients.CcxtHistoricalPqByTileClient>)
object.builder_function:
  market_object: dataflow_amp.system.Cx.Cx_forecast_system._get_market_data
  dag_object: dataflow_amp.system.Cx.Cx_forecast_system._get_dag
  dag_runner_object: dataflow_amp.system.Cx.Cx_forecast_system._get_dag_runner
dag_object: DAG at 0x=(_nx_dag=DiGraph with 5 nodes and 4 edges <networkx.classes.digraph.DiGraph>, _name=None <NoneType>, _mode=strict <str>, _save_node_io= <str>, _save_node_df_out_stats=False <bool>, _profile_execution=False <bool>, _dst_dir=None <NoneType>, force_free_nodes=False <bool>)
dag_runner_object: FitPredictDagRunner at 0x=(config= <core.config.config_.Config>, _column_to_tags_mapping=None <NoneType>, _result_nid=adjust_rets <str>)
